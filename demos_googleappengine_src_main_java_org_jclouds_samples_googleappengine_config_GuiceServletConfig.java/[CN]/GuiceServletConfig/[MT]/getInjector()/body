{
  return Guice.createInjector(new JDKLoggingModule(),new ServletModule(){
    @Override protected void configureServlets(){
      bind(new TypeLiteral<Iterable<View>>(){
      }
).toInstance(GuiceServletConfig.this.views);
      serve("*.check").with(GetAllResourcesController.class);
      requestInjection(this);
    }
    @SuppressWarnings("unused") @Provides long remainingMillis(){
      return ApiProxy.getCurrentEnvironment().getRemainingMillis() - 100;
    }
    @SuppressWarnings("unused") @Provides @Singleton ListeningExecutorService currentRequestExecutorService(){
      ThreadFactory factory=checkNotNull(ThreadManager.currentRequestThreadFactory(),"ThreadManager.currentRequestThreadFactory()");
      return MoreExecutors.listeningDecorator(Executors.newCachedThreadPool(factory));
    }
  }
);
}
