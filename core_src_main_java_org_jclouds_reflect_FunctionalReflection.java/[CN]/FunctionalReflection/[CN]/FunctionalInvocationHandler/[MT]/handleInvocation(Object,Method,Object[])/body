{
  List<Object> args=Arrays.asList(argv);
  if (all(args,notNull()))   args=ImmutableList.copyOf(args);
 else   args=Collections.unmodifiableList(args);
  Invokable<?,?> invokable=Invokable.class.cast(Invokable.from(invoked));
  Invocation invocation=Invocation.create(interfaceType,invokable,args);
  Result result;
  try {
    result=invocationFunction.apply(invocation);
  }
 catch (  RuntimeException e) {
    result=Result.fail(e);
  }
  if (result.getThrowable().isPresent()) {
    propagateIfPossible(result.getThrowable().get(),invocation.getInvokable().getExceptionTypes());
    throw propagate(result.getThrowable().get());
  }
  return result.getResult().orNull();
}
