{
  Map<HttpRequest,HttpResponse> requestResponseMap=ImmutableMap.<HttpRequest,HttpResponse>builder().put(keystoneAuthWithUsernameAndPasswordAndTenantName,responseWithKeystoneAccess).put(extensionsOfNovaRequest,extensionsOfNovaResponse).put(listImagesDetail,listImagesDetailResponse).put(listServers,listServersResponse).put(listFlavorsDetail,listFlavorsDetailResponse).build();
  ComputeService clientWhenServersExist=requestsSendResponses(requestResponseMap);
  Set<? extends Location> locations=clientWhenServersExist.listAssignableLocations();
  assertNotNull(locations);
  assertEquals(locations.size(),1);
  assertEquals(locations.iterator().next().getId(),"az-1.region-a.geo-1");
  assertNotNull(clientWhenServersExist.listNodes());
  assertEquals(clientWhenServersExist.listNodes().size(),1);
  assertEquals(clientWhenServersExist.listNodes().iterator().next().getId(),"az-1.region-a.geo-1/52415800-8b69-11e0-9b19-734f000004d2");
  assertEquals(clientWhenServersExist.listNodes().iterator().next().getName(),"sample-server");
}
