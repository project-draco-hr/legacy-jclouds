{
  HttpRequest request=HttpRequest.builder().method("POST").endpoint("https://www.googleapis.com/compute/v1beta13/projects/myproject/firewalls").addHeader("Accept","application/json").addHeader("Authorization","Bearer " + TOKEN).payload(firewallPayloadFirewallOfName("myfw","default",ImmutableSet.<String>of("10.0.1.0/32"),ImmutableSet.<String>of("tag1"),ImmutableSet.<String>of("tag2"),ImmutableSet.<String>of("22","23-24"))).build();
  HttpResponse insertFirewallResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResource("/operation.json")).build();
  FirewallApi api=requestsSendResponses(requestForScopes(COMPUTE_SCOPE),TOKEN_RESPONSE,request,insertFirewallResponse).getFirewallApiForProject("myproject");
  assertEquals(api.createInNetwork("myfw",URI.create("https://www.googleapis" + ".com/compute/v1beta13/projects/myproject/networks/default"),new FirewallOptions().addAllowedRule(Firewall.Rule.builder().IPProtocol(IPProtocol.TCP).addPort(22).addPortRange(23,24).build()).addSourceTag("tag1").addSourceRange("10.0.1.0/32").addTargetTag("tag2")),new ParseOperationTest().expected());
}
