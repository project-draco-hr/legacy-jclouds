{
  VAppImpl vApp=new VAppImpl("MyAppServer6",URI.create("https://services.vcloudexpress/terremark.com/api/v0.8/vapp/4213"),Status.OFF,4194304l,null,ImmutableListMultimap.<String,String>of(),null,null,null,ImmutableSet.of(ResourceAllocationSettingData.builder().instanceID("1").elementName("foo").resourceType(ResourceType.PROCESSOR).virtualQuantity(2l).build(),ResourceAllocationSettingData.builder().instanceID("2").elementName("foo").resourceType(ResourceType.MEMORY).virtualQuantity(1024l).build(),ResourceAllocationSettingData.builder().instanceID("9").elementName("foo").addressOnParent("0").hostResource("1048576").resourceType(ResourceType.DISK_DRIVE).virtualQuantity(209152l).build()));
  String expected=Strings2.toStringAndClose(getClass().getResourceAsStream("/configureVAppAll.xml"));
  VAppConfiguration config=changeNameTo("eduardo").changeMemoryTo(1536).changeProcessorCountTo(1).addDisk(25 * 1048576).addDisk(25 * 1048576);
  GeneratedHttpRequest request=requestForArgs(ImmutableList.<Object>of(vApp,config));
  BindVAppConfigurationToXmlPayload binder=injector.getInstance(BindVAppConfigurationToXmlPayload.class);
  Map<String,Object> map=Maps.newHashMap();
  assertEquals(binder.bindToRequest(request,map).getPayload().getRawContent(),expected);
}
