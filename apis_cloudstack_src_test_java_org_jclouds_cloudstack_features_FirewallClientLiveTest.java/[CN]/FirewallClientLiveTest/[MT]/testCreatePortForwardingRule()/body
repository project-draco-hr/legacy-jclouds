{
  if (networksDisabled)   return;
  while (portForwardingRule == null) {
    ip=reuseOrAssociate.apply(network);
    try {
      AsyncCreateResponse job=client.getFirewallClient().createPortForwardingRuleForVirtualMachine(ip.getId(),PortForwardingRule.Protocol.TCP,22,vm.getId(),22);
      assertTrue(jobComplete.apply(job.getJobId()));
      portForwardingRule=client.getFirewallClient().getPortForwardingRule(job.getId());
    }
 catch (    IllegalStateException e) {
      Logger.CONSOLE.error("Failed while trying to allocate ip: " + e);
    }
  }
  assertEquals(portForwardingRule.getIPAddressId(),ip.getId());
  assertEquals(portForwardingRule.getVirtualMachineId(),vm.getId());
  assertEquals(portForwardingRule.getPublicPort(),22);
  assertEquals(portForwardingRule.getProtocol(),PortForwardingRule.Protocol.TCP);
  checkPortForwardingRule(portForwardingRule);
  checkSSH(HostAndPort.fromParts(ip.getIPAddress(),22));
}
