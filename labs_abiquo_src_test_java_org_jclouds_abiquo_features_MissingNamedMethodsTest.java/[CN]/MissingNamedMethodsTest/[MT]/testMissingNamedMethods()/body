{
  Collection<Class<?>> apis=AbiquoRestClientModule.DELEGATE_MAP.values();
  Iterable<String> missing=transform(concat(transform(apis,new Function<Class<?>,Iterable<Method>>(){
    @Override public Iterable<Method> apply(    Class<?> input){
      return filter(Arrays.asList(input.getMethods()),new Predicate<Method>(){
        @Override public boolean apply(        Method input){
          Named named=input.getAnnotation(Named.class);
          return named == null || Strings.isNullOrEmpty(named.value()) || !named.value().matches(".+:.+");
        }
      }
);
    }
  }
)),new Function<Method,String>(){
    @Override public String apply(    Method input){
      return input.getDeclaringClass().getSimpleName() + "." + input.getName();
    }
  }
);
  if (!isEmpty(missing)) {
    fail(size(missing) + " methods missing @Named annotation:\n" + Joiner.on('\n').join(missing));
  }
}
