{
  HttpResponse listResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/list_role_policies_marker.xml","text/xml")).build();
  HttpRequest list2=HttpRequest.builder().method("POST").endpoint("https://iam.amazonaws.com/").addHeader("Host","iam.amazonaws.com").addFormParam("Action","ListRolePolicies").addFormParam("Marker","MARKER").addFormParam("RoleName","S3Access").addFormParam("Signature","GdoVCf2QZ7rld%2BHvIgbSPhjgwYtigqYXdi/LfVzlWaM%3D").addFormParam("SignatureMethod","HmacSHA256").addFormParam("SignatureVersion","2").addFormParam("Timestamp","2009-11-08T15%3A54%3A08.897Z").addFormParam("Version","2010-05-08").addFormParam("AWSAccessKeyId","identity").build();
  HttpResponse list2Response=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/list_role_policies.xml","text/xml")).build();
  IAMApi apiWhenExist=requestsSendResponses(list,listResponse,list2,list2Response);
  assertEquals(apiWhenExist.getPolicyApiForRole("S3Access").list().concat().toList(),ImmutableList.copyOf(Iterables.concat(new ListRolePoliciesResponseTest().expected(),new ListRolePoliciesResponseTest().expected())));
}
