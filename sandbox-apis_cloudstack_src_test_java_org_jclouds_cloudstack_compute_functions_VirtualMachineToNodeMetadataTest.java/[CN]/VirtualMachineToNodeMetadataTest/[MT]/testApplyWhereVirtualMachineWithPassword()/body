{
  Map<String,Credentials> credentialStore=ImmutableMap.<String,Credentials>of("node#54",new Credentials("root","password"));
  Supplier<Set<? extends Location>> locationSupplier=Suppliers.<Set<? extends Location>>ofInstance(ImmutableSet.<Location>of(ZoneToLocationTest.one,ZoneToLocationTest.two));
  Supplier<Set<? extends Hardware>> hardwareSupplier=Suppliers.<Set<? extends Hardware>>ofInstance(ImmutableSet.<Hardware>of(ServiceOfferingToHardwareTest.one,ServiceOfferingToHardwareTest.two));
  Supplier<Set<? extends Image>> imageSupplier=Suppliers.<Set<? extends Image>>ofInstance(ImmutableSet.<Image>of(TemplateToImageTest.one,TemplateToImageTest.two));
  VirtualMachineToNodeMetadata parser=new VirtualMachineToNodeMetadata(credentialStore,new FindLocationForVirtualMachine(locationSupplier),new FindHardwareForVirtualMachine(hardwareSupplier),new FindImageForVirtualMachine(imageSupplier));
  VirtualMachine guest=Iterables.get(new ListVirtualMachinesResponseTest().expected(),0);
  NodeMetadata node=parser.apply(guest);
  assertEquals(node.toString(),new NodeMetadataBuilder().id("54").providerId("54").name("i-3-54-VM").location(ZoneToLocationTest.one).state(NodeState.PENDING).privateAddresses(ImmutableSet.of("10.1.1.18")).hardware(ServiceOfferingToHardwareTest.one).imageId(TemplateToImageTest.one.getId()).credentials(new Credentials("root","password")).operatingSystem(TemplateToImageTest.one.getOperatingSystem()).build().toString());
  assertEquals(node.getCredentials(),new Credentials("root","password"));
}
