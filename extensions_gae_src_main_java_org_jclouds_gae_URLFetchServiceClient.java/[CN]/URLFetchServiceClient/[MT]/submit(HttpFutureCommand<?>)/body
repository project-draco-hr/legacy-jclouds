{
  HttpRequest request=command.getRequest();
  HTTPResponse gaeResponse=null;
  try {
    for (    HttpRequestFilter filter : requestFilters) {
      filter.filter(request);
    }
    String hostHeader=request.getFirstHeaderOrNull(HttpConstants.HOST);
    if (hostHeader != null) {
      logger.warn("Note that as of GAE SDK version 1.2.1, host headers are stripped.  you passed %1$s",hostHeader);
    }
    HttpResponse response=null;
    for (; ; ) {
      logger.trace("%1$s - converting request %2$s",target,request);
      HTTPRequest gaeRequest=convert(request);
      if (logger.isTraceEnabled())       logger.trace("%1$s - submitting request %2$s, headers: %3$s",target,gaeRequest.getURL(),headersAsString(gaeRequest.getHeaders()));
      gaeResponse=this.urlFetchService.fetch(gaeRequest);
      if (logger.isTraceEnabled())       logger.info("%1$s - received response code %2$s, headers: %3$s",target,gaeResponse.getResponseCode(),headersAsString(gaeResponse.getHeaders()));
      response=convert(gaeResponse);
      int statusCode=response.getStatusCode();
      if (statusCode >= 500 && httpRetryHandler.retryRequest(command,response))       continue;
      break;
    }
    handleResponse(command,response);
  }
 catch (  Exception e) {
    if (gaeResponse != null && gaeResponse.getContent() != null) {
      logger.error(e,"error encountered during the execution: %1$s%n%2$s",gaeResponse,new String(gaeResponse.getContent()));
    }
    command.setException(e);
  }
}
