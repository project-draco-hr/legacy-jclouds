{
  return new Predicate<OsFamilyVersion64Bit>(){
    @Override public boolean apply(    OsFamilyVersion64Bit input){
switch (input.family) {
case RHEL:
        return !input.version.equals("") && !input.version.matches("5.[50]");
case SOLARIS:
      return !input.is64Bit;
case CENTOS:
    return !input.version.equals("") && !input.version.matches("5.[50]");
case UBUNTU:
  return !input.version.equals("") && !input.version.equals("10.04") && !input.version.equals("8.04");
case WINDOWS:
return !input.version.equals("") && !input.version.equals("2003 R2") && !(input.version.equals("2008") && !input.is64Bit)&& !(input.version.matches("2008( R2)?") && input.is64Bit);
default :
return true;
}
}
}
;
}
