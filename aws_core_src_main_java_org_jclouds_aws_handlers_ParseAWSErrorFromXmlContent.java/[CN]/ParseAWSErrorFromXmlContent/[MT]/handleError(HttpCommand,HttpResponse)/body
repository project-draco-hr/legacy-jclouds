{
  HttpRequest request=command.getRequest();
  Exception exception=new HttpResponseException(command,response);
  try {
    AWSError error=parseErrorFromContentOrNull(request,response);
    exception=error != null ? new AWSResponseException(command,response,error) : exception;
switch (response.getStatusCode()) {
case 400:
      if (error.getCode().endsWith(".NotFound"))       exception=new ResourceNotFoundException(error.getMessage(),exception);
 else       if (error.getCode().equals("IncorrectState"))       exception=new IllegalStateException(error.getMessage(),exception);
 else       if (error.getCode().equals("AuthFailure"))       exception=new AuthorizationException(command.getRequest(),error != null ? error.getMessage() : response.getStatusLine());
    break;
case 401:
case 403:
  exception=new AuthorizationException(command.getRequest(),error != null ? error.getMessage() : response.getStatusLine());
break;
case 404:
if (!command.getRequest().getMethod().equals("DELETE")) {
String message=error != null ? error.getMessage() : String.format("%s -> %s",request.getRequestLine(),response.getStatusLine());
String container=request.getEndpoint().getHost();
String key=request.getEndpoint().getPath();
if (key == null || key.equals("/")) exception=new ContainerNotFoundException(container,message);
 else exception=new KeyNotFoundException(container,key,message);
}
break;
}
}
  finally {
releasePayload(response);
command.setException(exception);
}
}
