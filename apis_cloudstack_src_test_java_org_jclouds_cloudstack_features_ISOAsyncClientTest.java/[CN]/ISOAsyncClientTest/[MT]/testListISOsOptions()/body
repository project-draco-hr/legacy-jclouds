{
  Method method=ISOAsyncClient.class.getMethod("listISOs",ListISOsOptions[].class);
  HttpRequest httpRequest=processor.createRequest(method,ListISOsOptions.Builder.accountInDomain("fred","5").bootable().hypervisor("xen").id("3").isoFilter(ISO.ISOFilter.featured).isPublic().isReady().keyword("bob").name("bob's iso").zoneId("7"));
  assertRequestLineEquals(httpRequest,"GET http://localhost:8080/client/api?response=json&command=listIsos&listAll=true&account=fred&domainid=5&bootable=true&hypervisor=xen&id=3&isofilter=featured&ispublic=true&isready=true&keyword=bob&name=bob%27s%20iso&zoneid=7 HTTP/1.1");
  assertNonPayloadHeadersEqual(httpRequest,"Accept: application/json\n");
  assertPayloadEquals(httpRequest,null,null,false);
  assertResponseParserClassEquals(method,httpRequest,ParseFirstJsonValueNamed.class);
  assertSaxResponseParserClassEquals(method,null);
  assertExceptionParserClassEquals(method,MapHttp4xxCodesToExceptions.class);
  checkFilters(httpRequest);
}
