{
  StatisticValues ss=StatisticValues.builder().maximum(4.0).minimum(1.0).sampleCount(4.0).sum(10.0).build();
  MetricDatum metricDatum=MetricDatum.builder().metricName("TestMetricName").statisticValues(ss).dimension(new Dimension("TestDimension","FAKE")).unit(Unit.COUNT).value(2).build();
  HttpRequest request=binder.bindToRequest(request(),ImmutableSet.of(metricDatum));
  Assert.assertEquals(request.getPayload().getRawContent(),"MetricData.member.1.Dimensions.member.1.Name=TestDimension" + "&MetricData.member.1.Dimensions.member.1.Value=FAKE" + "&MetricData.member.1.MetricName=TestMetricName"+ "&MetricData.member.1.StatisticValues.Maximum=4.0"+ "&MetricData.member.1.StatisticValues.Minimum=1.0"+ "&MetricData.member.1.StatisticValues.SampleCount=4.0"+ "&MetricData.member.1.StatisticValues.Sum=10.0"+ "&MetricData.member.1.Unit=" + Unit.COUNT.toString() + "&MetricData.member.1.Value=2.0");
}
