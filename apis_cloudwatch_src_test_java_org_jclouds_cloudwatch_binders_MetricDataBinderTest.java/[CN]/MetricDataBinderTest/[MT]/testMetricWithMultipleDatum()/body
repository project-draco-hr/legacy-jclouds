{
  StatisticValues ss=StatisticValues.builder().maximum(4.0).minimum(1.0).sampleCount(4.0).sum(10.0).build();
  MetricDatum metricDatum=MetricDatum.builder().metricName("TestMetricName").statisticValues(ss).dimension(new Dimension("TestDimension","FAKE")).dimension(new Dimension("TestDimension2","FAKE2")).unit(Unit.COUNT).timestamp(new Date(10000000l)).value(2.0).build();
  MetricDatum metricDatum2=MetricDatum.builder().metricName("TestMetricName").dimension(new Dimension("TestDimension","FAKE")).unit(Unit.COUNT).timestamp(new Date(10000000l)).value(5.0).build();
  HttpRequest request=binder.bindToRequest(request(),ImmutableSet.of(metricDatum,metricDatum2));
  Assert.assertEquals(request.getPayload().getRawContent(),"MetricData.member.1.Dimensions.member.1.Name=TestDimension" + "&MetricData.member.1.Dimensions.member.1.Value=FAKE" + "&MetricData.member.1.Dimensions.member.2.Name=TestDimension2"+ "&MetricData.member.1.Dimensions.member.2.Value=FAKE2"+ "&MetricData.member.1.MetricName=TestMetricName"+ "&MetricData.member.1.StatisticValues.Maximum=4.0"+ "&MetricData.member.1.StatisticValues.Minimum=1.0"+ "&MetricData.member.1.StatisticValues.SampleCount=4.0"+ "&MetricData.member.1.StatisticValues.Sum=10.0"+ "&MetricData.member.1.Timestamp=1970-01-01T02%3A46%3A40Z"+ "&MetricData.member.1.Unit=" + Unit.COUNT.toString() + "&MetricData.member.1.Value=2.0"+ "&MetricData.member.2.Dimensions.member.1.Name=TestDimension"+ "&MetricData.member.2.Dimensions.member.1.Value=FAKE"+ "&MetricData.member.2.MetricName=TestMetricName"+ "&MetricData.member.2.Timestamp=1970-01-01T02%3A46%3A40Z"+ "&MetricData.member.2.Unit="+ Unit.COUNT.toString()+ "&MetricData.member.2.Value=5.0");
}
