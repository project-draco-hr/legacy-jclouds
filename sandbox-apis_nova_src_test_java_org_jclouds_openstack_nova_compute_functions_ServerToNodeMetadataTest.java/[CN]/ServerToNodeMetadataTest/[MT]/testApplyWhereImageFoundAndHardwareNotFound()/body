{
  Map<ServerStatus,NodeState> serverStateToNodeState=NovaComputeServiceDependenciesModule.serverToNodeState;
  org.jclouds.compute.domain.Image jcImage=NovaImageToImageTest.convertImage();
  Set<org.jclouds.compute.domain.Image> images=ImmutableSet.of(jcImage);
  Set<org.jclouds.compute.domain.Hardware> hardwares=ImmutableSet.of();
  Server server=ParseServerFromJsonResponseTest.parseServer();
  ServerToNodeMetadata parser=new ServerToNodeMetadata(serverStateToNodeState,ImmutableMap.<String,Credentials>of(),Suppliers.<Set<? extends Image>>ofInstance(images),Suppliers.ofInstance(provider),Suppliers.<Set<? extends Hardware>>ofInstance(hardwares));
  NodeMetadata metadata=parser.apply(server);
  assertEquals(metadata,new NodeMetadataBuilder().state(NodeState.PENDING).publicAddresses(ImmutableSet.of("67.23.10.132","67.23.10.131")).privateAddresses(ImmutableSet.of("10.176.42.16")).imageId("2").operatingSystem(new OperatingSystemBuilder().family(OsFamily.CENTOS).description("CentOS 5.2").version("5.2").is64Bit(true).build()).id("1234").providerId("1234").name("sample-server").location(new LocationBuilder().scope(LocationScope.HOST).id("e4d909c290d0fb1ca068ffaddf22cbd0").description("e4d909c290d0fb1ca068ffaddf22cbd0").parent(provider).build()).userMetadata(ImmutableMap.of("Server Label","Web Head 1","Image Version","2.1")).build());
}
