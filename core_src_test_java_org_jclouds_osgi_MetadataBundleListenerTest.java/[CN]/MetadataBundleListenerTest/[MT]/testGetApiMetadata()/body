{
  MetadataBundleListener listener=new MetadataBundleListener();
  Bundle bundle=createMock(Bundle.class);
  expect(bundle.getEntry("/META-INF/services/org.jclouds.apis.ApiMetadata")).andReturn(getClass().getResource("/META-INF/services/org.jclouds.apis.ApiMetadata")).anyTimes();
  expect(bundle.loadClass("org.jclouds.apis.JcloudsTestBlobStoreApiMetadata")).andReturn(JcloudsTestBlobStoreApiMetadata.class).anyTimes();
  expect(bundle.loadClass("org.jclouds.apis.JcloudsTestComputeApiMetadata")).andReturn(JcloudsTestComputeApiMetadata.class).anyTimes();
  expect(bundle.loadClass("org.jclouds.apis.JcloudsTestYetAnotherComputeApiMetadata")).andReturn(JcloudsTestYetAnotherComputeApiMetadata.class).anyTimes();
  replay(bundle);
  List<ApiMetadata> apiMetadataList=Lists.newArrayList(listener.listApiMetadata(bundle));
  assertNotNull(apiMetadataList);
  assertEquals(3,apiMetadataList.size());
  assertTrue(apiMetadataList.contains(new JcloudsTestBlobStoreApiMetadata()));
  assertTrue(apiMetadataList.contains(new JcloudsTestComputeApiMetadata()));
  assertTrue(apiMetadataList.contains(new JcloudsTestYetAnotherComputeApiMetadata()));
  verify(bundle);
}
