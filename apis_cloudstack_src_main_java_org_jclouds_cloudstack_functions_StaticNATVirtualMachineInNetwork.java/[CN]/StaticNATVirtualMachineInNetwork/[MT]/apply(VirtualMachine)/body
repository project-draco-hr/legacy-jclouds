{
  PublicIPAddress ip;
  for (ip=reuseOrAssociate.apply(network); (!ip.isStaticNAT() || ip.getVirtualMachineId() != vm.getId()); ip=reuseOrAssociate.apply(network)) {
    if (ip.getVirtualMachineId() > 0 && ip.getVirtualMachineId() != vm.getId())     continue;
    try {
      client.getNATClient().enableStaticNATForVirtualMachine(vm.getId(),ip.getId());
      ip=client.getAddressClient().getPublicIPAddress(ip.getId());
      if (ip.isStaticNAT() && ip.getVirtualMachineId() == vm.getId())       break;
    }
 catch (    IllegalStateException e) {
    }
    return ip;
  }
  AsyncCreateResponse job=client.getNATClient().createIPForwardingRule(ip.getId(),"tcp",22);
  checkState(jobComplete.apply(job.getJobId()),"Timeout creating IP forwarding rule: ",job);
  AsyncJob<IPForwardingRule> response=client.getAsyncJobClient().getAsyncJob(job.getJobId());
  checkState(response.getResult() != null,"No result after creating IP forwarding rule: ",response);
  getIPForwardingRulesByVirtualMachine.asMap().put(vm.getId(),ImmutableSet.of(response.getResult()));
  return ip;
}
