{
  PublicIPAddress ip;
  for (ip=reuseOrAssociate.apply(network); (!ip.isStaticNAT() || ip.getVirtualMachineId() != vm.getId()); ip=reuseOrAssociate.apply(network)) {
    if (ip.getVirtualMachineId() > 0 && ip.getVirtualMachineId() != vm.getId())     continue;
    try {
      AsyncCreateResponse response=client.getNATClient().enableStaticNATForVirtualMachine(vm.getId(),ip.getId());
      logger.debug(">> static NATing IPAddress(%s) to virtualMachine(%s); response(%s)",ip.getId(),vm.getId(),response);
      if (AsyncCreateResponse.UNINITIALIZED.equals(response))       ip=client.getAddressClient().getPublicIPAddress(ip.getId());
 else       ip=blockUntilJobCompletesAndReturnResult.<PublicIPAddress>apply(response);
      if (ip.isStaticNAT() && ip.getVirtualMachineId() == vm.getId())       break;
    }
 catch (    IllegalStateException e) {
    }
    return ip;
  }
  return ip;
}
