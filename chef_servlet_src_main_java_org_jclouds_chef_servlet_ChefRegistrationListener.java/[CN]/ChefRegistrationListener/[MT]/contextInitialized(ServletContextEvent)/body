{
  try {
    logger.debug("starting initialization");
    Properties overrides=InitParamsToProperties.INSTANCE.apply(servletContextEvent);
    String role=getInitParam(servletContextEvent,CHEF_ROLE);
    logger.trace("creating validator connection");
    ChefService validatorService=createService(overrides);
    logger.debug("created validator connection");
    ChefService clientService=null;
    String nodeName;
    try {
      while (true) {
        nodeName=findNextClientAndNodeName(validatorService,role);
        try {
          clientService=createClientAndNode(validatorService,role,nodeName,overrides);
          break;
        }
 catch (        IllegalStateException ex) {
          logger.debug("node or client already exists %s: %s",nodeName,ex.getMessage());
        }
      }
    }
  finally {
      validatorService.getContext().close();
    }
    servletContextEvent.getServletContext().setAttribute(CHEF_NODE,nodeName);
    servletContextEvent.getServletContext().setAttribute(CHEF_ROLE,role);
    servletContextEvent.getServletContext().setAttribute(CHEF_SERVICE_CLIENT,clientService);
    logger.debug("initialized");
  }
 catch (  RuntimeException e) {
    logger.error(e,"error registering");
    throw e;
  }
}
