{
  return Predicates.not(new Predicate<OsFamilyVersion64Bit>(){
    @Override public boolean apply(    OsFamilyVersion64Bit input){
switch (input.family) {
case UBUNTU:
        return (input.version.equals("") || (input.version.matches("^1[012].*") && !input.version.equals("10.10"))) && input.is64Bit;
case DEBIAN:
      return input.is64Bit && !input.version.equals("5.0");
case CENTOS:
    return (input.version.equals("") || input.version.equals("5.0") || input.version.equals("5.6")|| input.version.equals("6.0")) && input.is64Bit;
case WINDOWS:
  return input.is64Bit && input.version.equals("");
default :
return false;
}
}
}
);
}
