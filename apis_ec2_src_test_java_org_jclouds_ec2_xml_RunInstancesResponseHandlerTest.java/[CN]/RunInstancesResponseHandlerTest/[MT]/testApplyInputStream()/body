{
  InputStream is=getClass().getResourceAsStream("/run_instances.xml");
  Reservation<? extends RunningInstance> expected=new Reservation<RunningInstance>(defaultRegion,ImmutableSet.of("default"),ImmutableSet.of(new RunningInstance.Builder().region(defaultRegion).groupId("default").amiLaunchIndex("0").imageId("ami-60a54009").instanceId("i-2ba64342").instanceState(InstanceState.PENDING).instanceType(InstanceType.M1_SMALL).keyName("example-key-name").launchTime(dateService.iso8601DateParse("2007-08-07T11:51:50.000Z")).availabilityZone("us-east-1b").build(),new RunningInstance.Builder().region(defaultRegion).groupId("default").amiLaunchIndex("1").imageId("ami-60a54009").instanceId("i-2bc64242").instanceState(InstanceState.PENDING).instanceType(InstanceType.M1_SMALL).keyName("example-key-name").launchTime(dateService.iso8601DateParse("2007-08-07T11:51:50.000Z")).availabilityZone("us-east-1b").build(),new RunningInstance.Builder().region(defaultRegion).groupId("default").amiLaunchIndex("2").imageId("ami-60a54009").instanceId("i-2be64332").instanceState(InstanceState.PENDING).instanceType(InstanceType.M1_SMALL).keyName("example-key-name").launchTime(dateService.iso8601DateParse("2007-08-07T11:51:50.000Z")).availabilityZone("us-east-1b").build()),"AIDADH4IGTRXXKCD",null,"r-47a5402e");
  RunInstancesResponseHandler handler=injector.getInstance(RunInstancesResponseHandler.class);
  addDefaultRegionToHandler(handler);
  Reservation<? extends RunningInstance> result=factory.create(handler).parse(is);
  assertEquals(result,expected);
}
