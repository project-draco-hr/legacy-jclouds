{
  builder.append("# create runscript header\n");
  builder.append("cat > ").append(runScript).append(" <<").append(MARKER).append("\n");
  builder.append(ShellToken.BEGIN_SCRIPT.to(family));
  builder.append("PROMPT_COMMAND='echo -ne \"\\033]0;").append(instanceName).append("\\007\"'\n");
  builder.append(Utils.writeZeroPath(family));
  builder.append("export INSTANCE_NAME='").append(instanceName).append("'\n");
  for (  String export : exports) {
    String variableNameInUpper=CaseFormat.LOWER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE,export);
    builder.append("export ").append(variableNameInUpper).append("='$").append(variableNameInUpper).append("'\n");
  }
  Map<String,String> functionsToWrite=ScriptBuilder.resolveFunctionDependenciesForStatements(ImmutableMap.<String,String>of("abort",Utils.writeFunctionFromResource("abort",family)),statements,family);
  if (functionsToWrite.size() > 1) {
    StringBuilder inNeedOfEscaping=new StringBuilder();
    ScriptBuilder.writeFunctions(functionsToWrite,family,inNeedOfEscaping);
    builder.append(inNeedOfEscaping.toString().replace("$","\\$"));
  }
  builder.append(MARKER).append("\n");
}
