{
  VirtualMachineDto virtualMachine=virtualMachinePost();
  virtualMachine.setId(1);
  virtualMachine.addLink(new RESTLink("deploy","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/action/deploy"));
  virtualMachine.addLink(new RESTLink("disks","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/storage/disks"));
  virtualMachine.addLink(new RESTLink("edit","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1"));
  virtualMachine.addLink(new RESTLink("state","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/state"));
  virtualMachine.addLink(new RESTLink("reset","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/action/reset"));
  virtualMachine.addLink(new RESTLink("tasks","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/tasks"));
  virtualMachine.addLink(new RESTLink("undeploy","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/action/undeploy"));
  virtualMachine.addLink(new RESTLink("persistent","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/action/persistent"));
  virtualMachine.addLink(new RESTLink("virtualappliance","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1"));
  virtualMachine.addLink(new RESTLink("virtualmachinetemplate","http://localhost/api/admin/enterprises/1/datacenterrepositories/1/virtualmachinetemplates/1"));
  virtualMachine.addLink(new RESTLink("nics","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/network/nics"));
  virtualMachine.addLink(new RESTLink("volumes","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/storage/volumes"));
  virtualMachine.addLink(new RESTLink("configurations","http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/network/configurations"));
  return virtualMachine;
}
