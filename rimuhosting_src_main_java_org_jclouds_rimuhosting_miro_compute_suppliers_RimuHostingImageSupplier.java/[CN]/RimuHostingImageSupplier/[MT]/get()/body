{
  final Set<Image> images=Sets.newHashSet();
  logger.debug(">> providing images");
  for (  final org.jclouds.rimuhosting.miro.domain.Image from : sync.getImageList()) {
    String version=null;
    OsFamily osFamily=null;
    String osName=null;
    String osArch=null;
    String osVersion=null;
    String osDescription=from.getId();
    boolean is64Bit=from.getId().indexOf("64") != -1;
    osDescription=from.getId();
    Matcher matcher=RIMU_PATTERN.matcher(from.getId());
    if (matcher.find()) {
      try {
        osFamily=OsFamily.fromValue(matcher.group(1).toLowerCase());
      }
 catch (      IllegalArgumentException e) {
        logger.debug("<< didn't match os(%s)",matcher.group(2));
      }
    }
    OperatingSystem os=new OperatingSystem(osFamily,osName,osVersion,osArch,osDescription,is64Bit);
    images.add(new ImageImpl(from.getId(),from.getDescription(),from.getId(),null,null,ImmutableMap.<String,String>of(),os,from.getDescription(),version,new Credentials("root",null)));
  }
  logger.debug("<< images(%d)",images.size());
  return images;
}
