{
  Map<String,Blob> container=getContainerToBlobs().get(bucketName);
  if (container == null) {
    new RuntimeException("bucketName not found: " + bucketName);
  }
  try {
    byte[] data=toByteArray(object.getPayload().getRawContent());
    object.getMetadata().setSize(data.length);
    MutableBlobMetadata newMd=copy(object.getMetadata());
    newMd.setLastModified(new Date());
    final byte[] md5=encryptionService.md5(data);
    final String eTag=encryptionService.toHexString(md5);
    newMd.setETag(eTag);
    newMd.setContentMD5(md5);
    newMd.setContentType(object.getMetadata().getContentType());
    Blob blob=blobProvider.create(newMd);
    blob.setPayload(data);
    container.put(blob.getMetadata().getName(),blob);
    blob.getAllHeaders().put(HttpHeaders.LAST_MODIFIED,dateService.rfc822DateFormat(newMd.getLastModified()));
    blob.getAllHeaders().put(HttpHeaders.ETAG,eTag);
    blob.getAllHeaders().put(HttpHeaders.CONTENT_TYPE,newMd.getContentType());
    blob.getAllHeaders().put(HttpHeaders.CONTENT_LENGTH,newMd.getSize() + "");
    for (    Entry<String,String> userMD : newMd.getUserMetadata().entrySet()) {
      blob.getAllHeaders().put(userMD.getKey(),userMD.getValue());
    }
    return immediateFuture(eTag);
  }
 catch (  IOException e) {
    return immediateFailedFuture(new RuntimeException(e));
  }
}
