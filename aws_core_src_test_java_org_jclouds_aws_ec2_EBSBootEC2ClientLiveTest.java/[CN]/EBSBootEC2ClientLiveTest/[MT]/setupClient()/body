{
  String user=checkNotNull(System.getProperty("jclouds.test.user"),"jclouds.test.user");
  String password=checkNotNull(System.getProperty("jclouds.test.key"),"jclouds.test.key");
  Injector injector=new EC2ContextBuilder("ec2",new EC2PropertiesBuilder(user,password).build()).withModules(new Log4JLoggingModule(),new JschSshClientModule()).buildInjector();
  client=injector.getInstance(EC2Client.class);
  sshFactory=injector.getInstance(SshClient.Factory.class);
  SocketOpen socketOpen=injector.getInstance(SocketOpen.class);
  socketTester=new RetryablePredicate<IPSocket>(socketOpen,120,1,TimeUnit.SECONDS);
  VolumeAvailable volumeAvailable=injector.getInstance(VolumeAvailable.class);
  volumeTester=new RetryablePredicate<Volume>(volumeAvailable,60,1,TimeUnit.SECONDS);
  SnapshotCompleted snapshotCompleted=injector.getInstance(SnapshotCompleted.class);
  snapshotTester=new RetryablePredicate<Snapshot>(snapshotCompleted,120,3,TimeUnit.SECONDS);
  VolumeAttached volumeAttached=injector.getInstance(VolumeAttached.class);
  attachTester=new RetryablePredicate<Attachment>(volumeAttached,60,1,TimeUnit.SECONDS);
  runningTester=new RetryablePredicate<RunningInstance>(new InstanceStateRunning(client),180,5,TimeUnit.SECONDS);
  InstanceStateStopped instanceStateStopped=injector.getInstance(InstanceStateStopped.class);
  stoppedTester=new RetryablePredicate<RunningInstance>(instanceStateStopped,60,1,TimeUnit.SECONDS);
  InstanceStateTerminated instanceStateTerminated=injector.getInstance(InstanceStateTerminated.class);
  terminatedTester=new RetryablePredicate<RunningInstance>(instanceStateTerminated,60,1,TimeUnit.SECONDS);
  injector.injectMembers(socketOpen);
}
