{
  return Predicates.not(new Predicate<OsFamilyVersion64Bit>(){
    @Override public boolean apply(    OsFamilyVersion64Bit input){
switch (input.family) {
case UBUNTU:
        return (input.version.equals("") || input.version.matches("1[012].04") || input.version.startsWith("11")) && input.is64Bit;
case DEBIAN:
      return input.is64Bit && !input.version.equals("5.0");
case CENTOS:
    return (input.version.equals("") || input.version.matches("5.[60]") || input.version.equals("6.0")) && input.is64Bit;
case WINDOWS:
  return input.version.equals("2008 SP2") || input.version.equals("") || (input.version.equals("2008 R2") && input.is64Bit);
default :
return false;
}
}
}
);
}
