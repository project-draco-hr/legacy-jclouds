{
  Builder<Location> locations=ImmutableSet.builder();
  Iterable<DataCenter> list=Iterables.filter(Iterables.transform(sync.getPricingPlanList(),new Function<PricingPlan,DataCenter>(){
    @Override public DataCenter apply(    PricingPlan arg0){
      return arg0.getDataCenter();
    }
  }
),Predicates.<DataCenter>notNull());
  Location provider=Iterables.getOnlyElement(super.get());
  if (Iterables.size(list) == 0)   locations.add(provider);
 else   for (  DataCenter from : list) {
    LocationBuilder builder=new LocationBuilder().scope(LocationScope.ZONE).id(from.getId()).description(from.getName()).parent(provider);
    if (isoCodesById.containsKey(from.getId()))     builder.iso3166Codes(isoCodesById.get(from.getId()));
    locations.add(builder.build());
  }
  return locations.build();
}
