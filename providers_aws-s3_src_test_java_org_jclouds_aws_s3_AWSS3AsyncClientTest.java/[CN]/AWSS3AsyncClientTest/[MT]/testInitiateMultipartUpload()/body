{
  Invokable<?,?> method=method(AWSS3AsyncClient.class,"initiateMultipartUpload",String.class,ObjectMetadata.class,PutObjectOptions[].class);
  GeneratedHttpRequest request=processor.createRequest(method,ImmutableList.<Object>of("bucket",ObjectMetadataBuilder.create().key("foo").contentMD5(new byte[]{1,2,3,4}).build()));
  assertRequestLineEquals(request,"POST https://bucket." + url + "/foo?uploads HTTP/1.1");
  assertNonPayloadHeadersEqual(request,"Content-MD5: AQIDBA==\nContent-Type: binary/octet-stream\nHost: bucket." + url + "\n");
  assertPayloadEquals(request,null,null,false);
  request=(GeneratedHttpRequest)request.getFilters().get(0).filter(request);
  assertRequestLineEquals(request,"POST https://bucket." + url + "/foo?uploads HTTP/1.1");
  assertNonPayloadHeadersEqual(request,"Authorization: AWS identity:Sp1FX4svL9P2u2bFJwroaYpSANo=\nContent-MD5: AQIDBA==\n" + "Content-Type: binary/octet-stream\nDate: 2009-11-08T15:54:08.897Z\nHost: bucket." + url + "\n");
  assertPayloadEquals(request,null,null,false);
  assertResponseParserClassEquals(method,request,UploadIdFromHttpResponseViaRegex.class);
  assertSaxResponseParserClassEquals(method,null);
  assertFallbackClassEquals(method,MapHttp4xxCodesToExceptions.class);
  checkFilters(request);
}
