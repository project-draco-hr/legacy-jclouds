{
  nodes=Iterables.filter(Iterables.transform(nodes,new Function<NodeMetadata,NodeMetadata>(){
    @Override public NodeMetadata apply(    NodeMetadata node){
      try {
        checkArgument(node.getPublicAddresses().size() > 0,"no public ip addresses on node: " + node);
        if (overridingCredentials != null) {
          node=installNewCredentials(node,overridingCredentials);
        }
 else {
          checkNotNull(node.getCredentials(),"If the default credentials need to be used, they can't be null");
          checkNotNull(node.getCredentials().identity,"Account name for ssh authentication must be " + "specified. Try passing RunScriptOptions with new credentials");
          checkNotNull(node.getCredentials().credential,"Key or password for ssh authentication must be " + "specified. Try passing RunScriptOptions with new credentials");
        }
        return node;
      }
 catch (      Exception e) {
        badNodes.put(node,e);
        return null;
      }
    }
  }
),Predicates.notNull());
  return nodes;
}
