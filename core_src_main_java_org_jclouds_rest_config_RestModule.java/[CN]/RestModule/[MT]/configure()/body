{
  bind(new TypeLiteral<Map<Class<?>,Class<?>>>(){
  }
).toInstance(sync2Async);
  install(new SaxParserModule());
  install(new GsonModule());
  install(new FactoryModuleBuilder().build(BindToJsonPayloadWrappedWith.Factory.class));
  bind(IdentityFunction.class).toInstance(IdentityFunction.INSTANCE);
  bind(AsyncRestClientProxy.Factory.class).to(Factory.class).in(Scopes.SINGLETON);
  install(new FactoryModuleBuilder().build(SyncProxy.Factory.class));
  bindClientAndAsyncClient(binder(),HttpClient.class,HttpAsyncClient.class);
  bind(new TypeLiteral<AtomicReference<AuthorizationException>>(){
  }
).toInstance(authException);
  bind(new TypeLiteral<Function<Predicate<String>,Map<String,String>>>(){
  }
).to(FilterStringsBoundToInjectorByName.class);
  installLocations();
}
