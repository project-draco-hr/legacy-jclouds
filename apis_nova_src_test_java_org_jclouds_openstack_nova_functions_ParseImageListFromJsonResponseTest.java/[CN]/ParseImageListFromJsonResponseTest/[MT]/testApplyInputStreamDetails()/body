{
  InputStream is=getClass().getResourceAsStream("/test_list_images_detail.json");
  UnwrapOnlyJsonValue<List<Image>> parser=i.getInstance(Key.get(new TypeLiteral<UnwrapOnlyJsonValue<List<Image>>>(){
  }
));
  List<Image> response=parser.apply(HttpResponse.builder().statusCode(200).message("ok").payload(is).build());
  assertEquals(response.get(0).getId(),1);
  assertEquals(response.get(0).getName(),"CentOS 5.2");
  assertEquals(response.get(0).getCreated(),dateService.iso8601SecondsDateParse("2010-08-10T12:00:00Z"));
  assertEquals(response.get(0).getProgress(),null);
  assertEquals(response.get(0).getServerRef(),null);
  assertEquals(response.get(0).getStatus(),ImageStatus.ACTIVE);
  assertEquals(response.get(0).getUpdated(),dateService.iso8601SecondsDateParse("2010-10-10T12:00:00Z"));
  assertEquals(response.get(0).getMetadata().get("ImageType"),"Gold");
  assertEquals(response.get(0).getMetadata().get("ImageVersion"),"1.5");
  assertEquals(response.get(0).getMetadata().size(),2);
  assertEquals(response.get(1).getId(),743);
  assertEquals(response.get(1).getName(),"My Server Backup");
  assertEquals(response.get(1).getCreated(),dateService.iso8601SecondsDateParse("2009-07-07T09:56:16Z"));
  assertEquals(response.get(1).getProgress(),new Integer(80));
  assertEquals(response.get(1).getStatus(),ImageStatus.SAVING);
  assertEquals(response.get(1).getUpdated(),dateService.iso8601SecondsDateParse("2010-10-10T12:00:00Z"));
  assertEquals(response.get(1).getServerRef(),"http://servers.api.openstack.org/v1.1/1234/servers/12");
  assertEquals(response.get(2).getServerRef(),"12");
}
