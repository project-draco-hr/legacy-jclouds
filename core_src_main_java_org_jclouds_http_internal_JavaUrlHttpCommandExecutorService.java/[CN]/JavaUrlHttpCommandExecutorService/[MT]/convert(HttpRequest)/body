{
  boolean chunked="chunked".equals(request.getFirstHeaderOrNull("Transfer-Encoding"));
  URL url=request.getEndpoint().toURL();
  HttpURLConnection connection=(HttpURLConnection)url.openConnection(proxyForURI.apply(request.getEndpoint()));
  if (connection instanceof HttpsURLConnection) {
    HttpsURLConnection sslCon=(HttpsURLConnection)connection;
    if (utils.relaxHostname())     sslCon.setHostnameVerifier(verifier);
    if (sslContextSupplier != null) {
      sslCon.setSSLSocketFactory(sslContextSupplier.get().getSocketFactory());
    }
 else     if (utils.trustAllCerts()) {
      sslCon.setSSLSocketFactory(untrustedSSLContextProvider.get().getSocketFactory());
    }
  }
  connection.setConnectTimeout(utils.getConnectionTimeout());
  connection.setReadTimeout(utils.getSocketOpenTimeout());
  connection.setAllowUserInteraction(false);
  connection.setInstanceFollowRedirects(false);
  try {
    connection.setRequestMethod(request.getMethod());
  }
 catch (  ProtocolException e) {
    try {
      methodField.set(connection,request.getMethod());
    }
 catch (    IllegalAccessException e1) {
      logger.error(e,"could not set request method: ",request.getMethod());
      propagate(e1);
    }
  }
  for (  Map.Entry<String,String> entry : request.getHeaders().entries()) {
    connection.setRequestProperty(entry.getKey(),entry.getValue());
  }
  String host=request.getEndpoint().getHost();
  if (request.getEndpoint().getPort() != -1) {
    host+=":" + request.getEndpoint().getPort();
  }
  connection.setRequestProperty(HOST,host);
  if (connection.getRequestProperty(USER_AGENT) == null) {
    connection.setRequestProperty(USER_AGENT,DEFAULT_USER_AGENT);
  }
  Payload payload=request.getPayload();
  if (payload != null) {
    MutableContentMetadata md=payload.getContentMetadata();
    for (    Map.Entry<String,String> entry : contentMetadataCodec.toHeaders(md).entries()) {
      connection.setRequestProperty(entry.getKey(),entry.getValue());
    }
    if (chunked) {
      connection.setChunkedStreamingMode(8196);
    }
 else {
      long length=checkNotNull(md.getContentLength(),"payload.getContentLength");
      checkArgument(length < Integer.MAX_VALUE,"JDK 1.6 does not support >2GB chunks. Use chunked encoding, if possible.");
      connection.setRequestProperty(CONTENT_LENGTH,length + "");
      if (length > 0) {
        writePayloadToConnection(payload,connection);
      }
    }
  }
 else {
    connection.setRequestProperty(CONTENT_LENGTH,"0");
    if (ImmutableSet.of("POST","PUT").contains(connection.getRequestMethod())) {
      connection.setFixedLengthStreamingMode(0);
      connection.setDoOutput(true);
    }
  }
  return connection;
}
