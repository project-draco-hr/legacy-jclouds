{
  String instanceName=vmName + "_" + i;
  IMachine adminNode=manager.getVBox().findMachine(adminNodeName);
  IMachine clonedVM=manager.getVBox().createMachine(settingsFile,instanceName,osTypeId,vmId,forceOverwrite);
  List<CloneOptions> options=new ArrayList<CloneOptions>();
  options.add(CloneOptions.Link);
  IProgress progress=adminNode.getCurrentSnapshot().getMachine().cloneTo(clonedVM,CloneMode.MachineState,options);
  if (progress.getCompleted())   logger().debug("clone done");
  manager.getVBox().registerMachine(clonedVM);
  ISession session=manager.getSessionObject();
  clonedVM.lockMachine(session,LockType.Write);
  IMachine mutable=session.getMachine();
  String hostInterface=null;
  String command="vboxmanage list bridgedifs";
  try {
    Process child=Runtime.getRuntime().exec(command);
    BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(child.getInputStream()));
    String line="";
    boolean found=false;
    while ((line=bufferedReader.readLine()) != null && !found) {
      System.out.println("line: " + line);
      if (line.split(":")[0].contains("Name")) {
        hostInterface=line.substring(line.indexOf(":") + 1);
      }
      if (line.split(":")[0].contains("Status") && line.split(":")[1].contains("Up")) {
        System.out.println("bridge: " + hostInterface.trim());
        found=true;
      }
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  mutable.getNetworkAdapter(new Long(0)).setAttachmentType(NetworkAttachmentType.Bridged);
  mutable.getNetworkAdapter(new Long(0)).setAdapterType(NetworkAdapterType.Am79C973);
  mutable.getNetworkAdapter(new Long(0)).setMACAddress("0800279DA478");
  mutable.getNetworkAdapter(new Long(0)).setBridgedInterface(hostInterface.trim());
  mutable.getNetworkAdapter(new Long(0)).setEnabled(true);
  mutable.saveSettings();
  session.unlockMachine();
  System.out.println("\nLaunching VM named " + clonedVM.getName() + " ...");
  launchVMProcess(clonedVM,manager.getSessionObject());
  clonedVM=manager.getVBox().findMachine(instanceName);
  try {
    boolean gotIp=false;
    while (!gotIp) {
      Node node=cache.get(instanceName);
      if (node.getHostname() != null) {
        gotIp=true;
      }
 else {
        cache.invalidate(node);
        Thread.sleep(1000);
        System.out.println("waiting for IP: got IP");
      }
    }
  }
 catch (  ExecutionException e) {
  }
  logger().debug("Trying echo...");
  runScriptOnNode(instanceName,"echo ciao");
}
