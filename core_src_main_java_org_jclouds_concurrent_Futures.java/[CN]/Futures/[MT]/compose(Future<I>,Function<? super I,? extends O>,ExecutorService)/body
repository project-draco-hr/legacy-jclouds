{
  if (future instanceof Futures.ListenableFutureAdapter<?>) {
    Futures.ListenableFutureAdapter<I> lf=(ListenableFutureAdapter<I>)future;
    if (lf.futureListener.adapterExecutor.getClass().isAnnotationPresent(SingleThreaded.class))     return Futures.LazyListenableFutureFunctionAdapter.create(((org.jclouds.concurrent.Futures.ListenableFutureAdapter<I>)future).futureListener,function);
 else     return com.google.common.util.concurrent.Futures.transform(lf,function,executorService);
  }
 else   if (executorService.getClass().isAnnotationPresent(SingleThreaded.class)) {
    return Futures.LazyListenableFutureFunctionAdapter.create(future,function,executorService);
  }
 else {
    return com.google.common.util.concurrent.Futures.transform(Futures.makeListenable(future,executorService),function,executorService);
  }
}
