{
  final int numTimesToIterate=2;
  final int NUM_BLOBS=31;
  ListContainerOptions containerOptions=ListContainerOptions.Builder.maxResults(10);
  BlobStoreContext context=blobStoreContext();
  BlobStore blobStore=null;
  try {
    blobStore=context.getBlobStore();
    blobStore.createContainerInLocation(null,containerName);
    Set<String> expectedNames=Sets.newHashSet();
    for (int i=0; i < NUM_BLOBS; i++) {
      String blobName="myname" + i;
      blobStore.putBlob(containerName,blobStore.blobBuilder(blobName).payload("payload" + i).build());
      expectedNames.add(blobName);
    }
    ListAllOptions listAllOptions=ListAllOptions.Builder.eager(eager);
    Iterable<StorageMetadata> iterable=BlobStores.listAll(blobStore,containerName,containerOptions,listAllOptions);
    for (int i=0; i < numTimesToIterate; i++) {
      Iterable<String> iterableNames=Iterables.transform(iterable,new Function<StorageMetadata,String>(){
        @Override public String apply(        StorageMetadata input){
          return input.getName();
        }
      }
);
      assertEquals(ImmutableSet.copyOf(iterableNames),expectedNames);
    }
  }
  finally {
    if (blobStore != null)     blobStore.deleteContainer(containerName);
    context.close();
  }
}
