{
  if (qName.endsWith("public_addresses")) {
    inPublicAddresses=false;
  }
 else   if (qName.endsWith("private_addresses")) {
    inPrivateAddresses=false;
  }
  if (qName.equalsIgnoreCase("owner_id")) {
    this.ownerId=currentOrNull(currentText);
  }
 else   if (qName.equalsIgnoreCase("name")) {
    this.name=currentOrNull(currentText);
  }
 else   if (qName.equalsIgnoreCase("keyname")) {
    this.keyName=currentOrNull(currentText);
  }
 else   if (qName.equalsIgnoreCase("username")) {
    this.credentialsBuilder.user(currentOrNull(currentText));
  }
 else   if (qName.equalsIgnoreCase("password")) {
    this.credentialsBuilder.password(currentOrNull(currentText));
  }
 else   if (qName.equalsIgnoreCase("authentication")) {
    if (keyName != null) {
      this.authentication=new KeyAuthentication(keyName);
    }
 else {
      LoginCredentials creds=credentialsBuilder.build();
      if (creds != null && creds.identity != null)       this.authentication=new PasswordAuthentication(creds);
    }
    this.keyName=null;
    this.credentialsBuilder=LoginCredentials.builder();
  }
 else   if (qName.equalsIgnoreCase("state")) {
    this.state=Instance.State.fromValue(currentOrNull(currentText));
  }
 else   if (qName.equalsIgnoreCase("address")) {
    if (inPublicAddresses)     this.publicAddresses.add(currentOrNull(currentText));
 else     if (inPrivateAddresses)     this.privateAddresses.add(currentOrNull(currentText));
  }
 else   if (qName.equalsIgnoreCase("instance")) {
    this.instance=new Instance(href,id,ownerId,name,image,hardwareProfile,realm,state,actions,authentication,publicAddresses,privateAddresses);
    this.href=null;
    this.id=null;
    this.ownerId=null;
    this.name=null;
    this.image=null;
    this.hardwareProfile=null;
    this.realm=null;
    this.state=null;
    this.authentication=null;
    this.actions=Maps.newLinkedHashMap();
    this.publicAddresses=Sets.newLinkedHashSet();
    this.privateAddresses=Sets.newLinkedHashSet();
  }
  currentText=new StringBuilder();
}
