{
  try {
    Folder rootFolder=client.getRootFolder();
    VirtualMachine from=(VirtualMachine)new InventoryNavigator(rootFolder).searchManagedEntity("VirtualMachine",tag);
    if (from == null) {
      client.getServerConnection().logout();
      return null;
    }
    VirtualMachineCloneSpec cloneSpec=new VirtualMachineCloneSpec();
    VirtualMachineRelocateSpec virtualMachineRelocateSpec=new VirtualMachineRelocateSpec();
    if (!vmwareHostName.equals("") && !datastoreName.equals("") && !resourcePoolName.equals("")) {
      ResourcePool rp=(ResourcePool)new InventoryNavigator(rootFolder).searchManagedEntity("ResourcePool",resourcePoolName);
      if (rp == null)       throw new Exception("The resourcePool specified '" + resourcePoolName + "' doesn't exist");
      virtualMachineRelocateSpec.setPool(rp.getMOR());
      Datastore ds=(Datastore)new InventoryNavigator(rootFolder).searchManagedEntity("Datastore",datastoreName);
      HostSystem host=null;
      host=(HostSystem)new InventoryNavigator(rootFolder).searchManagedEntity("HostSystem",vmwareHostName);
      HostDatastoreBrowser hdb=host.getDatastoreBrowser();
      if (ds == null)       throw new Exception("Cannot relocate this cloned machine to the specified datastore '" + datastoreName + "'");
      Datastore dsFound=null;
      Datastore[] dsArray=hdb.getDatastores();
      for (      Datastore d : dsArray) {
        if (d.getName().equalsIgnoreCase(ds.getName()))         dsFound=d;
      }
      if (dsFound == null)       throw new Exception("Cannot relocate this cloned machine to the specified datastore '" + datastoreName + "'");
      virtualMachineRelocateSpec.setDatastore(dsFound.getMOR());
    }
    CustomizationSpec custSpec=new CustomizationSpec();
    CustomizationAdapterMapping cam=new CustomizationAdapterMapping();
    CustomizationIPSettings cip=new CustomizationIPSettings();
    cip.setIp(new CustomizationDhcpIpGenerator());
    cam.setAdapter(cip);
    CustomizationGlobalIPSettings custGlobalIPSetting=new CustomizationGlobalIPSettings();
    CustomizationIdentitySettings custIdentitySet=new CustomizationIdentitySettings();
    CustomizationSysprep custSysprep=new CustomizationSysprep();
    CustomizationGuiUnattended guiUnattended=new CustomizationGuiUnattended();
    guiUnattended.setAutoLogon(false);
    guiUnattended.setAutoLogonCount(0);
    guiUnattended.setTimeZone(190);
    CustomizationPassword custPasswd=new CustomizationPassword();
    custPasswd.setPlainText(true);
    custPasswd.setValue("password");
    CustomizationIdentification custIdentification=new CustomizationIdentification();
    custIdentification.setDomainAdmin("Administrator");
    custIdentification.setDomainAdminPassword(custPasswd);
    custIdentification.setJoinWorkgroup("WORKGROUP");
    CustomizationUserData custUserData=new CustomizationUserData();
    CustomizationFixedName custFixedName=new CustomizationFixedName();
    custFixedName.setName("mycomputer");
    custUserData.setComputerName(custFixedName);
    custUserData.setFullName("sjain");
    custUserData.setOrgName("vmware");
    custUserData.setProductId("PDRXT-M9X8G-898BR-4K427-J2FFY");
    CustomizationWinOptions customizationWinOptions=new CustomizationWinOptions();
    customizationWinOptions.setChangeSID(true);
    customizationWinOptions.setDeleteAccounts(false);
    CustomizationLicenseFilePrintData custLPD=new CustomizationLicenseFilePrintData();
    custLPD.setAutoMode(CustomizationLicenseDataMode.perServer);
    custSysprep.setLicenseFilePrintData(custLPD);
    custSysprep.setUserData(custUserData);
    custSysprep.setGuiUnattended(guiUnattended);
    custSysprep.setIdentification(custIdentification);
    custSpec.setIdentity(custSysprep);
    custSpec.setNicSettingMap(new CustomizationAdapterMapping[]{cam});
    custSpec.setGlobalIPSettings(custGlobalIPSetting);
    custSpec.setOptions(customizationWinOptions);
    cloneSpec.setCustomization(custSpec);
    cloneSpec.setLocation(virtualMachineRelocateSpec);
    cloneSpec.setPowerOn(false);
    cloneSpec.setTemplate(false);
    Task task=from.cloneVM_Task((Folder)from.getParent(),vmClonedName,cloneSpec);
    String result=task.waitForTask();
    return (VirtualMachine)new InventoryNavigator(rootFolder).searchManagedEntity("VirtualMachine",vmClonedName);
  }
 catch (  RemoteException e) {
    return propogate(e);
  }
catch (  Exception e) {
    return propogate(e);
  }
}
