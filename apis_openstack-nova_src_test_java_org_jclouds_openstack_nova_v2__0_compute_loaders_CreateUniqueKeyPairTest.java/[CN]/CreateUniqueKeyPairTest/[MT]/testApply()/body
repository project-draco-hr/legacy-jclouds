{
  final NovaApi api=createMock(NovaApi.class);
  KeyPairApi keyApi=createMock(KeyPairApi.class);
  KeyPair pair=createMock(KeyPair.class);
  Optional optKeyApi=Optional.of(keyApi);
  expect(api.getKeyPairExtensionForZone("zone")).andReturn(optKeyApi).atLeastOnce();
  expect(keyApi.create("group-1")).andReturn(pair);
  replay(api,keyApi);
  CreateUniqueKeyPair parser=Guice.createInjector(new AbstractModule(){
    @Override protected void configure(){
      bind(new TypeLiteral<Supplier<String>>(){
      }
).toInstance(Suppliers.ofInstance("1"));
      bind(NovaApi.class).toInstance(api);
    }
  }
).getInstance(CreateUniqueKeyPair.class);
  assertEquals(parser.load(ZoneAndName.fromZoneAndName("zone","group")),pair);
  verify(api,keyApi);
}
