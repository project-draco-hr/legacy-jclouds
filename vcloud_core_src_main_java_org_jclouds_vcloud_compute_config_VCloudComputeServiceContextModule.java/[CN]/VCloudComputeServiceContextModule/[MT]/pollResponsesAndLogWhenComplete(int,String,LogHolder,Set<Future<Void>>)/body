{
  int complete=0;
  long start=System.currentTimeMillis();
  long timeOut=60 * 1000;
  do {
    Set<Future<Void>> retries=Sets.newHashSet();
    for (    Future<Void> future : responses) {
      try {
        future.get(100,TimeUnit.MILLISECONDS);
        complete++;
      }
 catch (      ExecutionException e) {
        Throwables.propagate(e);
      }
catch (      TimeoutException e) {
        retries.add(future);
      }
    }
    responses=Sets.newHashSet(retries);
  }
 while (responses.size() > 0 && System.currentTimeMillis() < start + timeOut);
  long duration=System.currentTimeMillis() - start;
  if (duration > timeOut)   throw new TimeoutException(String.format("TIMEOUT: %s(%d/%d) rate: %f %s/second%n",description,complete,total,((double)complete) / (duration / 1000.0),description));
  for (  Future<Void> future : responses)   future.get(30,TimeUnit.SECONDS);
  holder.logger.debug("<< %s(%d) rate: %f %s/second%n",description,total,((double)complete) / (duration / 1000.0),description);
}
