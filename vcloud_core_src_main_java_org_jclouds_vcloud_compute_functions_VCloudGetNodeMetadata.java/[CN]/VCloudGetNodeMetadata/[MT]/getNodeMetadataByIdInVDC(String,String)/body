{
  VApp vApp=client.getVApp(id);
  String tag=null;
  Image image=null;
  Matcher matcher=TAG_PATTERN_WITH_TEMPLATE.matcher(vApp.getName());
  final Location location=findLocationForResourceInVDC.apply(vApp,vDCId);
  if (matcher.find()) {
    tag=matcher.group(1);
    String templateIdInHexWithoutLeadingZeros=matcher.group(2).replaceAll("^[0]+","");
    final String templateId=Integer.parseInt(templateIdInHexWithoutLeadingZeros,16) + "";
    try {
      image=Iterables.find(images,new Predicate<Image>(){
        @Override public boolean apply(        Image input){
          return input.getId().equals(templateId) && input.getLocation().equals(location);
        }
      }
);
    }
 catch (    NoSuchElementException e) {
      logger.warn("could not find a matching image for vapp %s; vapptemplate %s in location %s",vApp,templateId,location);
    }
  }
 else {
    matcher=TAG_PATTERN_WITHOUT_TEMPLATE.matcher(vApp.getName());
    if (matcher.find()) {
      tag=matcher.group(1);
    }
 else {
      tag="NOTAG-" + vApp.getName();
    }
  }
  return new NodeMetadataImpl(vApp.getId(),vApp.getName(),location,vApp.getLocation(),ImmutableMap.<String,String>of(),tag,image,vAppStatusToNodeState.get(vApp.getStatus()),computeClient.getPublicAddresses(id),computeClient.getPrivateAddresses(id),getExtra.apply(vApp),null);
}
