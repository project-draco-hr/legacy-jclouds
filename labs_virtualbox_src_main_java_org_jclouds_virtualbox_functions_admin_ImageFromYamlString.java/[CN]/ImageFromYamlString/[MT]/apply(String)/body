{
  Constructor constructor=new Constructor(Config.class);
  TypeDescription imageDesc=new TypeDescription(YamlImage.class);
  imageDesc.putListPropertyType("images",String.class);
  constructor.addTypeDescription(imageDesc);
  Yaml yaml=new Yaml(constructor);
  Config config=(Config)yaml.load(source);
  checkState(config != null,"missing config: class");
  checkState(config.images != null,"missing images: collection");
  Map<String,Image> backingMap=Maps.uniqueIndex(Iterables.transform(config.images,YamlImage.toImage),new Function<Image,String>(){
    public String apply(    Image image){
      return image.getId();
    }
  }
);
  LoadingCache<String,Image> cache=CacheBuilder.newBuilder().build(CacheLoader.from(Functions.forMap(backingMap)));
  for (  String node : backingMap.keySet())   cache.getUnchecked(node);
  return cache;
}
