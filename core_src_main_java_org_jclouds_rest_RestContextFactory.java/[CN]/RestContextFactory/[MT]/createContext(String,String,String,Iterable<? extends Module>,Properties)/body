{
  checkNotNull(hint,"hint");
  checkNotNull(account,"account");
  checkNotNull(key,"key");
  checkNotNull(modules,"modules");
  checkNotNull(overrides,"overrides");
  String propertiesBuilderKey=String.format("%s.propertiesbuilder",hint);
  String propertiesBuilderClassName=checkNotNull(properties.getProperty(propertiesBuilderKey),hint + " service not supported");
  String contextBuilderKey=String.format("%s.contextbuilder",hint);
  String contextBuilderClassName=checkNotNull(properties.getProperty(contextBuilderKey),contextBuilderKey);
  try {
    Class<HttpPropertiesBuilder> propertiesBuilderClass=(Class<HttpPropertiesBuilder>)Class.forName(propertiesBuilderClassName);
    Class<B> contextBuilderClass=(Class<B>)Class.forName(contextBuilderClassName);
    HttpPropertiesBuilder builder=propertiesBuilderClass.getConstructor(Properties.class).newInstance(overrides).withCredentials(account,key);
    return (T)contextBuilderClass.getConstructor(Properties.class).newInstance(builder.build()).withModules(Iterables.toArray(modules,Module.class)).buildContext();
  }
 catch (  Exception e) {
    throw new RuntimeException("error instantiating " + contextBuilderClassName,e);
  }
}
