{
  checkNotNull(contextSpec,"contextSpec");
  Properties props=new Properties();
  props.setProperty(contextSpec.provider + ".endpoint",contextSpec.endpoint);
  props.setProperty(contextSpec.provider + ".apiversion",contextSpec.apiVersion);
  props.setProperty(contextSpec.provider + "." + LocationConstants.ISO3166_CODES,contextSpec.iso3166Codes);
  props.setProperty(contextSpec.provider + ".identity",contextSpec.identity);
  if (contextSpec.credential != null)   props.setProperty(contextSpec.provider + ".credential",contextSpec.credential);
  if (contextSpec.sync != null) {
    props.setProperty(contextSpec.provider + ".sync",contextSpec.sync.getName());
    props.setProperty(contextSpec.provider + ".async",checkNotNull(contextSpec.async,"contextSpec.async").getName());
  }
 else {
    props.setProperty(contextSpec.provider + ".contextbuilder",checkNotNull(contextSpec.contextBuilderClass,"contextSpec.contextBuilderClass").getName());
    props.setProperty(contextSpec.provider + ".propertiesbuilder",checkNotNull(contextSpec.propertiesBuilderClass,"contextSpec.propertiesBuilderClass").getName());
  }
  if (size(contextSpec.modules) > 0) {
    props.setProperty(contextSpec.provider + ".modules",Joiner.on(',').join(transform(contextSpec.modules,new Function<Module,String>(){
      @Override public String apply(      Module from){
        return from.getClass().getName();
      }
    }
)));
  }
  return props;
}
