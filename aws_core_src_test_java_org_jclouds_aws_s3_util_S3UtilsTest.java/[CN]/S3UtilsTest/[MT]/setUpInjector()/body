{
  Injector injector=Guice.createInjector(new RestModule(),new S3RestClientModule(),new ExecutorServiceModule(sameThreadExecutor(),sameThreadExecutor()),new AbstractModule(){
    protected void configure(){
      Names.bindProperties(binder(),checkNotNull(new S3PropertiesBuilder("foo","bar")).build());
      bind(TransformingHttpCommandExecutorService.class).toInstance(createMock(TransformingHttpCommandExecutorService.class));
    }
  }
);
  utils=injector.getInstance(S3Utils.class);
  response=new HttpResponse();
  response.setStatusCode(400);
  response.getHeaders().put(S3Headers.REQUEST_ID,"requestid");
  response.getHeaders().put(S3Headers.REQUEST_TOKEN,"requesttoken");
  command=new HttpCommand(){
    public int getRedirectCount(){
      return 0;
    }
    public int incrementRedirectCount(){
      return 0;
    }
    public boolean isReplayable(){
      return false;
    }
    public void changeSchemeHostAndPortTo(    String scheme,    String host,    int port){
    }
    public void changeToGETRequest(){
    }
    public Exception getException(){
      return null;
    }
    public int getFailureCount(){
      return 0;
    }
    public HttpRequest getRequest(){
      return null;
    }
    public int incrementFailureCount(){
      return 0;
    }
    public void setException(    Exception exception){
    }
    @Override public void changePathTo(    String newPath){
    }
  }
;
}
