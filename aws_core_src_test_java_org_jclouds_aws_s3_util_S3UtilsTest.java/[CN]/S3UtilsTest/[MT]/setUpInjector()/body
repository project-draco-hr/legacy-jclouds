{
  Injector injector=Guice.createInjector(new S3RestClientModule(),new ParserModule(),new AbstractModule(){
    @Override protected void configure(){
      bind(ExecutorService.class).toInstance(Executors.newCachedThreadPool());
      bindConstant().annotatedWith(Jsr330.named(S3Constants.PROPERTY_AWS_ACCESSKEYID)).to("user");
      bindConstant().annotatedWith(Jsr330.named(S3Constants.PROPERTY_AWS_SECRETACCESSKEY)).to("key");
      bindConstant().annotatedWith(Jsr330.named(S3Constants.PROPERTY_S3_SESSIONINTERVAL)).to("2");
      bindConstant().annotatedWith(Jsr330.named(S3Constants.PROPERTY_S3_ENDPOINT)).to("https://s3.amazonaws.com");
    }
  }
);
  utils=injector.getInstance(S3Utils.class);
  response=new HttpResponse();
  response.setStatusCode(400);
  response.getHeaders().put(S3Headers.REQUEST_ID,"requestid");
  response.getHeaders().put(S3Headers.REQUEST_TOKEN,"requesttoken");
  command=new HttpCommand(){
    public int getRedirectCount(){
      return 0;
    }
    public int incrementRedirectCount(){
      return 0;
    }
    public boolean isReplayable(){
      return false;
    }
    public void redirect(    String host,    int port){
    }
    public void redirectAsGet(){
    }
    public Exception getException(){
      return null;
    }
    public int getFailureCount(){
      return 0;
    }
    public HttpRequest getRequest(){
      return null;
    }
    public int incrementFailureCount(){
      return 0;
    }
    public void setException(    Exception exception){
    }
    @Override public void redirectPath(    String newPath){
    }
  }
;
}
