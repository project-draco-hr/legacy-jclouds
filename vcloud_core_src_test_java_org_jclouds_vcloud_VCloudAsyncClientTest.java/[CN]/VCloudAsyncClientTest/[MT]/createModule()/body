{
  return new AbstractModule(){
    @Override protected void configure(){
      Properties props=new Properties();
      props.setProperty(PROPERTY_VCLOUD_DEFAULT_DHCP_ENABLED,"false");
      props.setProperty(PROPERTY_VCLOUD_DEFAULT_FENCEMODE,FenceMode.ALLOW_IN_OUT.toString());
      props.put(PROPERTY_VCLOUD_DEFAULT_NETWORK,"https://vcloud.safesecureweb.com/network/1990");
      props.setProperty(PROPERTY_VCLOUD_XML_NAMESPACE,"http://www.vmware.com/vcloud/v0.8");
      props.setProperty(PROPERTY_VCLOUD_XML_SCHEMA,"http://vcloud.safesecureweb.com/ns/vcloud.xsd");
      Jsr330.bindProperties(binder(),props);
      bind(URI.class).annotatedWith(Org.class).toInstance(URI.create("http://org"));
      bind(URI.class).annotatedWith(Catalog.class).toInstance(URI.create("http://catalog"));
      bind(String.class).annotatedWith(CatalogItemRoot.class).toInstance("http://catalogItem");
      bind(String.class).annotatedWith(VAppTemplateRoot.class).toInstance("https://vcloud.safesecureweb.com/api/v0.8/vAppTemplate");
      bind(String.class).annotatedWith(VAppRoot.class).toInstance("https://services.vcloudexpress.terremark.com/api/vapp");
      bind(URI.class).annotatedWith(VDC.class).toInstance(URI.create("http://vdc"));
      bind(URI.class).annotatedWith(TasksList.class).toInstance(URI.create("http://tasksList"));
      bind(URI.class).annotatedWith(VCloudApi.class).toInstance(URI.create("http://vcloud"));
      bind(SetVCloudTokenCookie.class).toInstance(new SetVCloudTokenCookie(new Provider<String>(){
        public String get(){
          return "token";
        }
      }
));
      bind(Logger.LoggerFactory.class).toInstance(new LoggerFactory(){
        public Logger getLogger(        String category){
          return Logger.NULL;
        }
      }
);
    }
  }
;
}
