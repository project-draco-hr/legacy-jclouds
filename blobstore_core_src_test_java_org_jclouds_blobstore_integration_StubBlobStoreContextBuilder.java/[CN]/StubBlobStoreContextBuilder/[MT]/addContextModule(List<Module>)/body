{
  modules.add(new AbstractModule(){
    @Override protected void configure(){
    }
    @SuppressWarnings("unused") @Provides @Singleton BlobStoreContext<BlobStore<ContainerMetadata,BlobMetadata,Blob<BlobMetadata>>,ContainerMetadata,BlobMetadata,Blob<BlobMetadata>> provideContext(    BlobMap.Factory<BlobMetadata,Blob<BlobMetadata>> blobMapFactory,    InputStreamMap.Factory<BlobMetadata> inputStreamMapFactory,    Closer closer,    Provider<Blob<BlobMetadata>> blobProvider,    BlobStore<ContainerMetadata,BlobMetadata,Blob<BlobMetadata>> api){
      return new BlobStoreContextImpl<BlobStore<ContainerMetadata,BlobMetadata,Blob<BlobMetadata>>,ContainerMetadata,BlobMetadata,Blob<BlobMetadata>>(blobMapFactory,inputStreamMapFactory,closer,blobProvider,api,URI.create("http://localhost/blobstub"),"foo");
    }
  }
);
}
