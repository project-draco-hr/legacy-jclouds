{
  try {
    newSettings=settings.toBuilder().generalSettings(newGeneralSettings).vAppLeaseSettings(newVAppLeaseSettings).vAppTemplateLeaseSettings(newVAppTemplateLeaseSettings).ldapSettings(newLdapSettings).emailSettings(newEmailSettings).passwordPolicy(newPasswordPolicy).build();
    settings=orgClient.updateSettings(orgRef.getURI(),newSettings);
    assertTrue(equal(settings.getGeneralSettings(),newGeneralSettings),String.format(OBJ_FIELD_UPDATABLE,"orgSettings","generalSettings"));
    assertTrue(equal(settings.getVAppLeaseSettings(),newVAppLeaseSettings),String.format(OBJ_FIELD_UPDATABLE,"orgSettings","vAppLeaseSettings"));
    assertTrue(equal(settings.getVAppTemplateLeaseSettings(),newVAppTemplateLeaseSettings),String.format(OBJ_FIELD_UPDATABLE,"orgSettings","vAppTemplateLeaseSettings"));
    assertTrue(equal(settings.getLdapSettings(),newLdapSettings),String.format(OBJ_FIELD_UPDATABLE,"orgSettings","ldapSettings"));
    assertTrue(equal(settings.getEmailSettings(),newEmailSettings),String.format(OBJ_FIELD_UPDATABLE,"orgSettings","emailSettings"));
    assertTrue(equal(settings.getPasswordPolicy(),newPasswordPolicy),String.format(OBJ_FIELD_UPDATABLE,"orgSettings","passwordPolicy"));
    Checks.checkOrgSettings(settings);
  }
  finally {
    settings=settings.toBuilder().generalSettings(generalSettings).vAppLeaseSettings(vAppLeaseSettings).vAppTemplateLeaseSettings(vAppTemplateLeaseSettings).ldapSettings(ldapSettings).emailSettings(emailSettings).passwordPolicy(passwordPolicy).build();
    settings=orgClient.updateSettings(orgRef.getURI(),settings);
  }
}
