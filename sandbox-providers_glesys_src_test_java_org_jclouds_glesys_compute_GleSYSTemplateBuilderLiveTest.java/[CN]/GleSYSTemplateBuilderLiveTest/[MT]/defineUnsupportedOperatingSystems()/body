{
  return Predicates.not(new Predicate<OsFamilyVersion64Bit>(){
    @Override public boolean apply(    OsFamilyVersion64Bit input){
switch (input.family) {
case UBUNTU:
        return (input.version.equals("") || input.version.equals("11.04")) && input.is64Bit;
case DEBIAN:
      return input.version.equals("") || input.version.matches("[56].0");
case FEDORA:
    return input.version.equals("") || input.version.equals("13") || input.version.equals("15");
case CENTOS:
  return input.version.equals("") || input.version.equals("5") || input.version.equals("5.0")|| input.version.equals("6.0");
default :
return false;
}
}
}
);
}
