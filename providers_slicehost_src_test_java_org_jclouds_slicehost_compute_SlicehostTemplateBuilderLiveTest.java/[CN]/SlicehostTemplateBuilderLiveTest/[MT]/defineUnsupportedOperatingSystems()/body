{
  return Predicates.not(new Predicate<OsFamilyVersion64Bit>(){
    @Override public boolean apply(    OsFamilyVersion64Bit input){
switch (input.family) {
case UBUNTU:
        return input.version.equals("") || input.version.startsWith("10") || input.version.equals("9.10");
case DEBIAN:
      return !input.version.equals("6.0");
case RHEL:
    return input.version.equals("") && input.is64Bit;
case CENTOS:
  return input.version.equals("") || input.version.matches("5.[45]") || (input.version.equals("5.0") && input.is64Bit);
case WINDOWS:
return input.version.equals("") || (input.version.equals("2008 SP2") && !input.is64Bit) || input.version.equals("")|| (input.version.equals("2008 R2") && input.is64Bit);
default :
return false;
}
}
}
);
}
