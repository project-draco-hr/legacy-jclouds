{
  if (from.size() == 0)   return null;
  if (from.size() == 0)   return null;
  DriveInfo.Builder builder=new DriveInfo.Builder();
  builder.name(from.get("name"));
  if (from.containsKey("use"))   builder.use(Splitter.on(' ').split(from.get("use")));
  if (from.containsKey("status"))   builder.status(DriveStatus.fromValue(from.get("status")));
  builder.metrics(buildMetrics(from));
  builder.user(from.get("user"));
  builder.encryptionCipher(from.get("encryption:cipher"));
  builder.uuid(from.get("drive"));
  if (from.containsKey("claim:type"))   builder.claimType(ClaimType.fromValue(from.get("claim:type")));
  if (from.containsKey("claimed"))   builder.claimed(Splitter.on(' ').split(from.get("claimed")));
  if (from.containsKey("readers"))   builder.readers(Splitter.on(' ').split(from.get("readers")));
  if (from.containsKey("size"))   builder.size(new Long(from.get("size")));
  Map<String,String> metadata=Maps.newLinkedHashMap();
  for (  Entry<String,String> entry : from.entrySet()) {
    if (entry.getKey().startsWith("user:"))     metadata.put(entry.getKey().substring(entry.getKey().indexOf(':') + 1),entry.getValue());
  }
  if (from.containsKey("use"))   builder.use(Splitter.on(' ').split(from.get("use")));
  if (from.containsKey("bits"))   builder.bits(new Integer(from.get("bits")));
  if (from.containsKey("url"))   builder.url(URI.create(from.get("url")));
  builder.encryptionKey(from.get("encryption:key"));
  builder.description(from.get("description"));
  builder.installNotes(from.get("install_notes"));
  builder.os(from.get("os"));
  if (from.containsKey("drive_type"))   builder.driveType(Splitter.on(',').split(from.get("drive_type")));
  if (from.containsKey("autoexpanding"))   builder.autoexpanding(new Boolean(from.get("autoexpanding")));
  if (from.containsKey("free"))   builder.free(new Boolean(from.get("free")));
  if (from.containsKey("type"))   builder.type(DriveType.fromValue(from.get("type")));
  return builder.build();
}
