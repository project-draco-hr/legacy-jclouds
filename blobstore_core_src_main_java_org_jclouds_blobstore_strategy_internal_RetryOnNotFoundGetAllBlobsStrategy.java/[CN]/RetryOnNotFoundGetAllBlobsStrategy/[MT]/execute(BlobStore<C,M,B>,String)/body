{
  SortedSet<B> objects=Sets.<B>newTreeSet(new Comparator<B>(){
    public int compare(    B o1,    B o2){
      return (o1 == o2) ? 0 : o1.getName().compareTo(o2.getName());
    }
  }
);
  Map<String,Future<B>> futureObjects=Maps.newHashMap();
  for (  M md : getAllBlobMetadata.execute(connection,container)) {
    futureObjects.put(md.getName(),connection.getBlob(container,md.getName()));
  }
  for (  Entry<String,Future<B>> futureObjectEntry : futureObjects.entrySet()) {
    try {
      ifNotFoundRetryOtherwiseAddToSet(futureObjectEntry.getKey(),futureObjectEntry.getValue(),objects);
    }
 catch (    Exception e) {
      Utils.<BlobRuntimeException>rethrowIfRuntimeOrSameType(e);
      throw new BlobRuntimeException(String.format("Error getting value from blob %1$s",container),e);
    }
  }
  return objects;
}
