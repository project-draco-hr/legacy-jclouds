{
  try {
    parameterizedCtorFactory.create(gson,TypeToken.get(WithDeserializationConstructorButWithoutSerializedName.class));
    fail();
  }
 catch (  IllegalArgumentException actual) {
    assertEquals(actual.getMessage(),"org.jclouds.json.internal.DeserializationConstructorAndReflectiveTypeAdapterFactoryTest$WithDeserializationConstructorButWithoutSerializedName(int)" + " parameter 0 failed to be named by AnnotationBasedNamingStrategy requiring one of javax.inject.Named");
  }
}
