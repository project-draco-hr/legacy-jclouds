{
  InputStream is=getClass().getResourceAsStream("/vdc.xml");
  Injector injector=Guice.createInjector(new SaxParserModule());
  Factory factory=injector.getInstance(ParseSax.Factory.class);
  VDC result=factory.create(injector.getInstance(VDCHandler.class)).parse(is);
  assertEquals(result.getName(),"demo_vpdcname");
  assertEquals(result.getDescription(),"ServiceProfileName = Balanced; ServiceLocation = North America; Email = jim@company.com;");
  assertEquals(result.getStatus(),Status.DEPLOYED);
  assertEquals(result.getResourceEntities(),ImmutableSet.<Resource>of(new Resource("1001","DemoHost-1",VCloudMediaType.VAPP_XML,URI.create("https://api.sandbox.symphonyvpdc.savvis.net/rest/api/v0.8/org/100000.0/vdc/2736/vApp/1001")),new Resource("1002","DemoHost-2",VCloudMediaType.VAPP_XML,URI.create("https://api.sandbox.symphonyvpdc.savvis.net/rest/api/v0.8/org/100000.0/vdc/2736/vApp/1002")),new Resource("1003","DemoHost-3",VCloudMediaType.VAPP_XML,URI.create("https://api.sandbox.symphonyvpdc.savvis.net/rest/api/v0.8/org/100000.0/vdc/2736/vApp/1003")),new Resource("1234","CustomerTemplateName",VCloudMediaType.VAPPTEMPLATE_XML,URI.create("https://api.sandbox.symphonyvpdc.savvis.net/rest/api/v0.8/org/100000.0/vdc/2736/vAppTemplate/1234")),new Resource("FirewallService","firewall","api.symphonyvpdc.savvis.net+xml",URI.create("https://api.sandbox.symphonyvpdc.savvis.net/rest/api/v0.8/org/100000.0/vdc/2736/FirewallService"))));
  assertEquals(result.getAvailableNetworks(),ImmutableSet.of());
}
