{
  setupCredentials();
  Properties overrides=new VirtualBoxPropertiesBuilder(setupProperties()).build();
  CacheNodeStoreModule hostModule=new CacheNodeStoreModule(ImmutableMap.of("host",Node.builder().id("host").name("host installing virtualbox").hostname("localhost").osFamily(OsFamily.LINUX.toString()).osDescription(System.getProperty("os.name")).osVersion(System.getProperty("os.version")).group("ssh").username(System.getProperty("user.name")).credentialUrl(URI.create("file://" + System.getProperty("user.home") + "/.ssh/id_rsa")).build()));
  context=new ComputeServiceContextFactory().createContext(provider,identity,credential,ImmutableSet.<Module>of(new SLF4JLoggingModule(),new SshjSshClientModule(),hostModule,new ExecutorServiceModule(singleThreadExec,singleThreadExec)),overrides);
  context.utils().injector().injectMembers(this);
  imageId="ubuntu-11.04-server-i386";
  isosDir=workingDir + File.separator + "isos";
  hostVersion=Iterables.get(Splitter.on('r').split(context.getProviderSpecificContext().getBuildVersion()),0);
  operatingSystemIso=String.format("%s/%s.iso",isosDir,imageId);
  guestAdditionsIso=String.format("%s/VBoxGuestAdditions_%s.iso",isosDir,hostVersion);
  Template template=context.getComputeService().templateBuilder().build();
  checkNotNull(mastersCache.apply(template.getImage()));
}
