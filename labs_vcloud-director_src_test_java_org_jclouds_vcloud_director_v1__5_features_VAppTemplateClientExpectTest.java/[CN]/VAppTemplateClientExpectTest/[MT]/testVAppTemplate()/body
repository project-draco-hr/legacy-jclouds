{
  final String templateId="/vAppTemplate/vAppTemplate/vappTemplate-xxxx-xxxx-xxxx-xxx";
  Reference vappTemplateRef=Reference.builder().href(URI.create(endpoint + templateId)).build();
  VAppTemplateClient client=orderedRequestsSendResponses(loginRequest,sessionResponse,new VcloudHttpRequestPrimer().apiCommand("GET",templateId).acceptMedia(VAPP_TEMPLATE).httpRequestBuilder().build(),new VcloudHttpResponsePrimer().xmlFilePayload("/vapptemplate/vAppTemplate.xml",VAPP_TEMPLATE).httpResponseBuilder().build(),new VcloudHttpRequestPrimer().apiCommand("PUT",templateId).xmlFilePayload("/vapptemplate/vAppTemplate.xml",VAPP_TEMPLATE).acceptMedia(TASK).httpRequestBuilder().build(),new VcloudHttpResponsePrimer().xmlFilePayload("/task/task.xml",TASK).httpResponseBuilder().build(),new VcloudHttpRequestPrimer().apiCommand("DELETE",templateId).acceptMedia(TASK).httpRequestBuilder().build(),new VcloudHttpResponsePrimer().xmlFilePayload("/task/task.xml",TASK).httpResponseBuilder().build()).getVAppTemplateClient();
  assertNotNull(client);
  VAppTemplate template=client.getVAppTemplate(vappTemplateRef);
  assertEquals(template,exampleTemplate());
  Task task=client.editVAppTemplate(vappTemplateRef,template);
  assertNotNull(task);
  task=client.deleteVappTemplate(vappTemplateRef);
  assertNotNull(task);
}
