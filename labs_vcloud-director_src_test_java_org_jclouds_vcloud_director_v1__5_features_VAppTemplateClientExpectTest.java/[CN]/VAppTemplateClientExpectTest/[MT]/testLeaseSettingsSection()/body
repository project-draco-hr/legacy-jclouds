{
  final String templateId="/vAppTemplate/vAppTemplate/vappTemplate-ef4415e6-d413-4cbb-9262-f9bbec5f2ea9";
  Reference vappTemplateRef=Reference.builder().href(URI.create(endpoint + templateId)).build();
  VAppTemplateClient client=orderedRequestsSendResponses(loginRequest,sessionResponse,new VcloudHttpRequestPrimer().apiCommand("GET",templateId + "/leaseSettingsSection").acceptMedia(LEASE_SETTINGS_SECTION).httpRequestBuilder().build(),new VcloudHttpResponsePrimer().xmlFilePayload("/vapptemplate/leaseSettingsSection.xml",LEASE_SETTINGS_SECTION).httpResponseBuilder().build(),new VcloudHttpRequestPrimer().apiCommand("PUT",templateId + "/leaseSettingsSection").xmlFilePayload("/vapptemplate/leaseSettingsSection.xml",LEASE_SETTINGS_SECTION).acceptMedia(TASK).httpRequestBuilder().build(),new VcloudHttpResponsePrimer().xmlFilePayload("/task/task.xml",TASK).httpResponseBuilder().build()).getVAppTemplateClient();
  assertNotNull(client);
  LeaseSettingsSection section=client.getVappTemplateLeaseSettingsSection(vappTemplateRef);
  assertEquals(section,exampleLeaseSettingsSection());
  Task task=client.editVappTemplateLeaseSettingsSection(vappTemplateRef,section);
  assertNotNull(task);
}
