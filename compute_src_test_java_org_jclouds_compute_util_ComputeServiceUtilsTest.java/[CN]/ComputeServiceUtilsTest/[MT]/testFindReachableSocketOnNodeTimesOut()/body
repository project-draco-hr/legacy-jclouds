{
  final long timeoutSecs=2;
  final long timeoutMs=timeoutSecs * 1000;
  final long SLOW_GRACE=500;
  final long EARLY_GRACE=10;
  SocketOpen socketTester=SocketOpenPredicates.alwaysFail;
  NodeMetadata node=createMock(NodeMetadata.class);
  expect(node.getPublicAddresses()).andReturn(ImmutableSet.of("1.2.3.4")).atLeastOnce();
  expect(node.getPrivateAddresses()).andReturn(ImmutableSet.of("1.2.3.5")).atLeastOnce();
  replay(node);
  Stopwatch stopwatch=new Stopwatch();
  stopwatch.start();
  try {
    ComputeServiceUtils.findReachableSocketOnNode(socketTester,node,1234,timeoutMs,TimeUnit.MILLISECONDS,Logger.CONSOLE);
    fail();
  }
 catch (  NoSuchElementException success) {
  }
  long timetaken=stopwatch.elapsedMillis();
  assertTrue(timetaken >= timeoutMs - EARLY_GRACE && timetaken <= timeoutMs + SLOW_GRACE,"timetaken=" + timetaken);
  verify(node);
}
