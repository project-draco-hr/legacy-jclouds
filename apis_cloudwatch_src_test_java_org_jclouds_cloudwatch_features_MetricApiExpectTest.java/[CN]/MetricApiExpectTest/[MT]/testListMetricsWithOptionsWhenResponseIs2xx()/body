{
  HttpRequest listMetricsWithOptions=HttpRequest.builder().method("POST").endpoint("https://monitoring.us-east-1.amazonaws.com/").addHeader("Host","monitoring.us-east-1.amazonaws.com").payload(payloadFromStringWithContentType("Action=ListMetrics" + "&Dimensions.member.1.Name=InstanceId" + "&Dimensions.member.1.Value=SOMEINSTANCEID"+ "&MetricName=CPUUtilization"+ "&Namespace=SOMENEXTTOKEN"+ "&NextToken=AWS/EC2"+ "&Signature=G05HKEx9FJpGZBk02OVYwt3u4g/ilAY9nU5hJI9LDXA%3D"+ "&SignatureMethod=HmacSHA256"+ "&SignatureVersion=2"+ "&Timestamp=2009-11-08T15%3A54%3A08.897Z"+ "&Version=2010-08-01"+ "&AWSAccessKeyId=identity","application/x-www-form-urlencoded")).build();
  HttpResponse listMetricsWithOptionsResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/list_metrics.xml","text/xml")).build();
  CloudWatchApi apiWhenMetricsWithOptionsExist=requestSendsResponse(listMetricsWithOptions,listMetricsWithOptionsResponse);
  assertEquals(apiWhenMetricsWithOptionsExist.getMetricApiForRegion(null).list(ListMetricsOptions.Builder.dimension(new Dimension(EC2Constants.Dimension.INSTANCE_ID,"SOMEINSTANCEID")).metricName(EC2Constants.MetricName.CPU_UTILIZATION).namespace("SOMENEXTTOKEN").afterMarker(Namespaces.EC2)).toString(),"[Metric{namespace=AWS/EC2, metricName=CPUUtilization, dimension=[Dimension{name=InstanceId, value=i-689fcf0f}]}]");
}
