{
  VirtualBoxManager manager=createMock(VirtualBoxManager.class);
  IVirtualBox vBox=createMock(IVirtualBox.class);
  IMachine registeredMachine=createMock(IMachine.class);
  IProgress progress=createNiceMock(IProgress.class);
  List<IMedium> media=new ArrayList<IMedium>();
  List<IMedium> mediums=Collections.unmodifiableList(media);
  StorageController ideController=StorageController.builder().name(ideControllerName).bus(StorageBus.IDE).attachISO(0,0,"/tmp/ubuntu-11.04-server-i386.iso").attachHardDisk(HardDisk.builder().diskpath("/tmp/testadmin.vdi").controllerPort(0).deviceSlot(1).build()).attachISO(1,1,"/tmp/VBoxGuestAdditions_4.1.2.iso").build();
  VmSpec vmSpecification=VmSpec.builder().id(vmId).name(vmName).memoryMB(512).osTypeId(osTypeId).controller(ideController).forceOverwrite(true).cleanUpMode(CleanupMode.Full).natNetworkAdapter(0,NatAdapter.builder().tcpRedirectRule("127.0.0.1",2222,"",22).build()).build();
  expect(manager.getVBox()).andReturn(vBox).anyTimes();
  expect(vBox.findMachine(vmName)).andReturn(registeredMachine);
  expect(registeredMachine.unregister(mode)).andReturn(mediums);
  expectLastCall().anyTimes();
  expect(registeredMachine.delete(mediums)).andReturn(progress);
  expectLastCall().anyTimes();
  replay(manager,vBox,registeredMachine,progress);
  new UnregisterMachineIfExistsAndDeleteItsMedia(vmSpecification).apply(registeredMachine);
}
