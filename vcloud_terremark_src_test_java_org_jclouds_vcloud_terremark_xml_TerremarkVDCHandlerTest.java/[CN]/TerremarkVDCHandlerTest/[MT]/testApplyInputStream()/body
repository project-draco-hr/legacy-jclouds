{
  InputStream is=getClass().getResourceAsStream("/terremark/vdc.xml");
  Injector injector=Guice.createInjector(new SaxParserModule());
  Factory factory=injector.getInstance(ParseSax.Factory.class);
  TerremarkVDC result=(TerremarkVDC)factory.create(injector.getInstance(TerremarkVDCHandler.class)).parse(is);
  assertEquals(result.getName(),"Miami Environment 1");
  assertEquals(result.getId(),URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vdc/32"));
  assertEquals(result.getResourceEntities(),ImmutableMap.<String,NamedResource>of("adriantest",new NamedResourceImpl("adriantest",VCloudMediaType.VAPP_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vapp/15124")),"centos-53",new NamedResourceImpl("centos-53",VCloudMediaType.VAPP_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vapp/15120"))));
  assertEquals(result.getAvailableNetworks(),ImmutableMap.of("10.114.34.128/26",new NamedResourceImpl("10.114.34.128/26","application/vnd.vmware.vcloud.network+xml",URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/network/1708"))));
  assertEquals(result.getCatalog(),new NamedResourceImpl("Miami Environment 1",CATALOG_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vdc/32/catalog")));
  assertEquals(result.getPublicIps(),new NamedResourceImpl("Public IPs","application/xml",URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vdc/32/publicIps")));
  assertEquals(result.getInternetServices(),new NamedResourceImpl("Internet Services","application/xml",URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vdc/32/internetServices")));
}
