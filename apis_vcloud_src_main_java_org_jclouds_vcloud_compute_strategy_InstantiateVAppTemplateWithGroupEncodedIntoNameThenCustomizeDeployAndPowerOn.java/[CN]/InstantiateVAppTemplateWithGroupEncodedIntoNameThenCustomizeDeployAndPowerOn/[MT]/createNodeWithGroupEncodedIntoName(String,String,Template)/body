{
  ComputerNameValidator.INSTANCE.validate(name);
  VApp vAppResponse=instantiateVAppFromTemplate(name,template);
  waitForTask(vAppResponse.getTasks().get(0));
  logger.debug("<< instantiated VApp(%s)",vAppResponse.getName());
  vAppResponse=client.getVAppClient().getVApp(vAppResponse.getHref());
  Vm vm=get(vAppResponse.getChildren(),0);
  VCloudTemplateOptions vOptions=VCloudTemplateOptions.class.cast(template.getOptions());
  logger.trace(">> updating customization vm(%s) name->(%s)",vm.getName(),name);
  waitForTask(updateVmWithNameAndCustomizationScript(vm,name,vOptions.getCustomizationScript()));
  logger.trace("<< updated customization vm(%s)",name);
  ensureVmHasAllocationModeOrPooled(vAppResponse,vOptions.getIpAddressAllocationMode());
  int cpuCount=new Double(getCores(template.getHardware())).intValue();
  logger.trace(">> updating cpuCount(%d) vm(%s)",cpuCount,vm.getName());
  waitForTask(updateCPUCountOfVm(vm,cpuCount));
  logger.trace("<< updated cpuCount vm(%s)",vm.getName());
  int memoryMB=template.getHardware().getRam();
  logger.trace(">> updating memoryMB(%d) vm(%s)",memoryMB,vm.getName());
  waitForTask(updateMemoryMBOfVm(vm,memoryMB));
  logger.trace("<< updated memoryMB vm(%s)",vm.getName());
  logger.trace(">> deploying vApp(%s)",vAppResponse.getName());
  waitForTask(client.getVAppClient().deployVApp(vAppResponse.getHref()));
  logger.trace("<< deployed vApp(%s)",vAppResponse.getName());
  vAppResponse=client.getVAppClient().getVApp(vAppResponse.getHref());
  logger.trace(">> powering on vApp(%s)",vAppResponse.getName());
  client.getVAppClient().powerOnVApp(vAppResponse.getHref());
  return new NodeAndInitialCredentials<VApp>(vAppResponse,vAppResponse.getHref().toASCIIString(),getCredentialsFrom(vAppResponse));
}
