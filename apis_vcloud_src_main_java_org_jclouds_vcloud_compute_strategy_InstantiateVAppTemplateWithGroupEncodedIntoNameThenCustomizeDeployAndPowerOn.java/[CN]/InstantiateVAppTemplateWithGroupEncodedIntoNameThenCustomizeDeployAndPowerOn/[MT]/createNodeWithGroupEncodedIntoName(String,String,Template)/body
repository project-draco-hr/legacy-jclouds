{
  InstantiateVAppTemplateOptions options=new InstantiateVAppTemplateOptions();
  String customizationScript=VCloudTemplateOptions.class.cast(template.getOptions()).getCustomizationScript();
  IpAddressAllocationMode ipAddressAllocationMode=VCloudTemplateOptions.class.cast(template.getOptions()).getIpAddressAllocationMode();
  options.description(VCloudTemplateOptions.class.cast(template.getOptions()).getDescription());
  options.customizeOnInstantiate(false);
  options.deploy(false);
  options.powerOn(false);
  if (!template.getOptions().shouldBlockUntilRunning())   options.block(false);
  URI VDC=URI.create(template.getLocation().getId());
  URI templateId=URI.create(template.getImage().getId());
  logger.debug(">> instantiating vApp vDC(%s) template(%s) name(%s) options(%s) ",VDC,templateId,name,options);
  VApp vAppResponse=client.getVAppTemplateClient().createVAppInVDCByInstantiatingTemplate(name,VDC,templateId,options);
  waitForTask(vAppResponse.getTasks().get(0),vAppResponse);
  logger.debug("<< instantiated VApp(%s)",vAppResponse.getName());
  Vm vm=Iterables.get(client.getVAppClient().getVApp(vAppResponse.getHref()).getChildren(),0);
  if (customizationScript != null) {
    logger.trace(">> updating customization vm(%s) ",vm.getName());
    waitForTask(updateVmWithCustomizationScript(vm,customizationScript),vAppResponse);
    logger.trace("<< updated customization vm(%s) ",vm.getName());
  }
  if (ipAddressAllocationMode != null) {
    logger.trace(">> updating ipAddressAllocationMode(%s) vm(%s) ",ipAddressAllocationMode,vm.getName());
    waitForTask(updateVmWithIpAddressAllocationMode(vm,ipAddressAllocationMode),vAppResponse);
    logger.trace("<< updated ipAddressAllocationMode vm(%s) ",vm.getName());
  }
  int cpuCount=new Double(getCores(template.getHardware())).intValue();
  logger.trace(">> updating cpuCount(%d) vm(%s) ",cpuCount,vm.getName());
  waitForTask(updateCPUCountOfVm(vm,cpuCount),vAppResponse);
  logger.trace("<< updated cpuCount vm(%s) ",vm.getName());
  int memoryMB=template.getHardware().getRam();
  logger.trace(">> updating memoryMB(%d) vm(%s) ",memoryMB,vm.getName());
  waitForTask(updateMemoryMBOfVm(vm,memoryMB),vAppResponse);
  logger.trace("<< updated memoryMB vm(%s) ",vm.getName());
  logger.trace(">> deploying and powering on vApp(%s) ",vAppResponse.getName());
  return blockOnDeployAndPowerOnIfConfigured(options,vAppResponse,client.getVAppClient().deployAndPowerOnVApp(vAppResponse.getHref()));
}
