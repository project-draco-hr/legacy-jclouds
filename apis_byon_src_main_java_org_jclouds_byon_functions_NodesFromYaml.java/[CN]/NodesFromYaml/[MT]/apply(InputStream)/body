{
  Constructor constructor=new Constructor(Config.class);
  TypeDescription nodeDesc=new TypeDescription(CrappyNode.class);
  nodeDesc.putListPropertyType("tags",String.class);
  constructor.addTypeDescription(nodeDesc);
  TypeDescription configDesc=new TypeDescription(Config.class);
  configDesc.putListPropertyType("nodes",CrappyNode.class);
  constructor.addTypeDescription(configDesc);
  Yaml yaml=new Yaml(new Loader(constructor));
  Config config=(Config)yaml.load(source);
  checkState(config != null,"missing config: class");
  checkState(config.nodes != null,"missing nodes: collection");
  return Maps.uniqueIndex(Iterables.transform(config.nodes,new Function<CrappyNode,Node>(){
    @Override public Node apply(    CrappyNode arg0){
      return Node.builder().id(arg0.id).name(arg0.name).description(arg0.description).locationId(arg0.location_id).hostname(arg0.hostname).osArch(arg0.os_arch).osFamily(arg0.os_family).osDescription(arg0.os_description).osVersion(arg0.os_version).group(arg0.group).tags(arg0.tags).username(arg0.username).credential(arg0.credential).credentialUrl(arg0.credential_url != null ? URI.create(arg0.credential_url) : null).sudoPassword(arg0.sudo_password).build();
    }
  }
),new Function<Node,String>(){
    public String apply(    Node node){
      return node.getId();
    }
  }
);
}
