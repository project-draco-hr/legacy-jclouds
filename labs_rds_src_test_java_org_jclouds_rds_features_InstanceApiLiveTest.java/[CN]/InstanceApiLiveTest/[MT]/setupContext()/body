{
  super.setupContext();
  securityGroup=createSecurityGroupAndAuthorizeIngressToAll(INSTANCE);
  SocketOpen socketOpen=context.utils().injector().getInstance(SocketOpen.class);
  socketTester=retry(socketOpen,180,1,1,SECONDS);
  instanceAvailable=retry(new Predicate<Instance>(){
    public boolean apply(    Instance input){
      return api().get(input.getId()).getStatus() == Instance.Status.AVAILABLE;
    }
  }
,600,5,5,SECONDS);
  instanceGone=retry(new Predicate<Instance>(){
    public boolean apply(    Instance input){
      return api().get(input.getId()) == null;
    }
  }
,600,5,5,SECONDS);
}
