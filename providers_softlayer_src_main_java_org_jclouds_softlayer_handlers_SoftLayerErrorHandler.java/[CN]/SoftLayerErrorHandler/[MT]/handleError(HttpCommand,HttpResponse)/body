{
  String message=parseMessage(response);
  Exception exception=message != null ? new HttpResponseException(command,response,message) : new HttpResponseException(command,response);
  try {
    message=message != null ? message : String.format("%s -> %s",command.getCurrentRequest().getRequestLine(),response.getStatusLine());
switch (response.getStatusCode()) {
case 401:
case 403:
      exception=new AuthorizationException(message,exception);
    break;
case 404:
  if (!command.getCurrentRequest().getMethod().equals("DELETE")) {
    exception=new ResourceNotFoundException(message,exception);
  }
break;
case 500:
if (message != null) {
if (message.indexOf("Unable to determine package for") != -1) {
  exception=new ResourceNotFoundException(message,exception);
}
 else if (message.indexOf("currently an active transaction") != -1) {
  exception=new IllegalStateException(message,exception);
}
}
}
}
  finally {
Closeables.closeQuietly(response.getPayload());
command.setException(exception);
}
}
