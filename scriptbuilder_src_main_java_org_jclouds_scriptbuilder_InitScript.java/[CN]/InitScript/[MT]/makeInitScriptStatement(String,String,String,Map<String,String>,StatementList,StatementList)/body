{
  Map<String,String> defaultExports=ImmutableMap.of("instanceName",instanceName,"instanceHome",instanceHome,"logDir",logDir);
  String exitStatusFile=format("%s/rc",logDir);
  run=new StatementList(ImmutableList.<Statement>builder().add(interpret("rm -f " + exitStatusFile)).add(interpret(format("trap 'echo $?>%s' 0 1 2 3 15",exitStatusFile))).addAll(run.delegate()).build());
  CreateRunScript createRunScript=createRunScript(instanceName,concat(exports.keySet(),defaultExports.keySet()),"{varl}INSTANCE_HOME{varr}",run);
  return new ScriptBuilder().addEnvironmentVariableScope("default",defaultExports).addEnvironmentVariableScope(instanceName,exports).addStatement(switchArg(1,new ImmutableMap.Builder<String,Statement>().put("init",newStatementList(call("default"),call(instanceName),init,createRunScript)).put("status",newStatementList(call("default"),findPid("{varl}INSTANCE_NAME{varr}"),interpret("echo [{varl}FOUND_PID{varr}]{lf}"))).put("stop",newStatementList(call("default"),findPid("{varl}INSTANCE_NAME{varr}"),kill())).put("start",newStatementList(call("default"),forget("{varl}INSTANCE_NAME{varr}","{varl}INSTANCE_HOME{varr}{fs}{varl}INSTANCE_NAME{varr}.{sh}","{varl}LOG_DIR{varr}"))).put("stdout",newStatementList(call("default"),interpret("cat {varl}LOG_DIR{varr}{fs}stdout.log{lf}"))).put("stderr",newStatementList(call("default"),interpret("cat {varl}LOG_DIR{varr}{fs}stderr.log{lf}"))).put("exitstatus",newStatementList(call("default"),interpret("[ -f $LOG_DIR/rc ] && cat $LOG_DIR/rc"))).put("tail",newStatementList(call("default"),interpret("tail {varl}LOG_DIR{varr}{fs}stdout.log{lf}"))).put("tailerr",newStatementList(call("default"),interpret("tail {varl}LOG_DIR{varr}{fs}stderr.log{lf}"))).put("run",newStatementList(call("default"),interpret("{varl}INSTANCE_HOME{varr}{fs}{varl}INSTANCE_NAME{varr}.{sh}{lf}"))).build()));
}
