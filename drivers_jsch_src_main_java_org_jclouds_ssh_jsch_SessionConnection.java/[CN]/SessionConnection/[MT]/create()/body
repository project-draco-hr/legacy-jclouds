{
  JSch jsch=new JSch();
  session=jsch.getSession(loginCredentials.getUser(),hostAndPort.getHostText(),hostAndPort.getPortOrDefault(22));
  if (sessionTimeout != 0)   session.setTimeout(sessionTimeout);
  if (loginCredentials.getPrivateKey() == null) {
    session.setPassword(loginCredentials.getPassword());
  }
 else {
    byte[] privateKey=loginCredentials.getPrivateKey().getBytes();
    if (CredentialUtils.isPrivateKeyEncrypted(privateKey)) {
      throw new IllegalArgumentException("JschSshClientModule does not support private keys that require a passphrase");
    }
    jsch.addIdentity(loginCredentials.getUser(),Arrays.copyOf(privateKey,privateKey.length),null,emptyPassPhrase);
  }
  java.util.Properties config=new java.util.Properties();
  config.put("StrictHostKeyChecking","no");
  session.setConfig(config);
  session.connect(connectTimeout);
  return session;
}
