{
  CostCode costcode2=CostCode.builder(env.context.getApiContext()).name(PREFIX + "ccdefaultprice").description("description").build();
  costcodeprice=new CostCodePrice(currency,new BigDecimal(100));
  this.defaultPrices=new ArrayList<CostCodePrice>();
  defaultPrices.add(costcodeprice);
  costcode2.setDefaultPrices(defaultPrices);
  costcode2.save();
  CostCode apiCostCode=env.context.getPricingService().findCostCode(PricingPredicates.costCode(PREFIX + "ccdefaultprice"));
  assertNotNull(apiCostCode);
  assertEquals(PREFIX + "ccdefaultprice",apiCostCode.getName());
  Iterable<CostCodeCurrency> costcodecurrencies=env.context.getPricingService().getCostCodeCurrencies(costcode2.getId(),currency.getId());
  for (  CostCodeCurrency costcodecurrency : costcodecurrencies) {
    assertEquals(costcodecurrency.getPrice().compareTo(new BigDecimal(100)),0);
  }
  costcode2.delete();
}
