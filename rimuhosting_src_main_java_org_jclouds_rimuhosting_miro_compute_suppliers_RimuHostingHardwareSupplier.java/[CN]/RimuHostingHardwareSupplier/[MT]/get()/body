{
  final Set<Hardware> sizes=Sets.newHashSet();
  logger.debug(">> providing sizes");
  for (  final PricingPlan from : sync.getPricingPlanList()) {
    try {
      final Location location=Iterables.find(locations.get(),new Predicate<Location>(){
        @Override public boolean apply(        Location input){
          return input.getId().equals(from.getDataCenter().getId());
        }
      }
);
      sizes.add(new HardwareBuilder().ids(from.getId()).location(location).processors(ImmutableList.of(new Processor(1,1.0))).ram(from.getRam()).volumes(ImmutableList.<Volume>of(new VolumeImpl((float)from.getDiskSize(),true,true))).build());
    }
 catch (    NullPointerException e) {
      logger.warn("datacenter not present in " + from.getId());
    }
  }
  logger.debug("<< sizes(%d)",sizes.size());
  return sizes;
}
