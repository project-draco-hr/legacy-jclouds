{
  Template mutableTemplate=templateBuilderProvider.get().fromTemplate(template).build();
  NovaTemplateOptions templateOptions=NovaTemplateOptions.class.cast(mutableTemplate.getOptions());
  String zone=mutableTemplate.getLocation().getId();
  if (templateOptions.shouldAutoAssignFloatingIp()) {
    checkArgument(novaClient.getFloatingIPExtensionForZone(zone).isPresent(),"Floating IPs are required by options, but the extension is not available! options: %s",templateOptions);
  }
  boolean securityGroupExensionPresent=novaClient.getSecurityGroupExtensionForZone(zone).isPresent();
  List<Integer> inboundPorts=Ints.asList(templateOptions.getInboundPorts());
  if (templateOptions.getSecurityGroupNames().size() > 0) {
    checkArgument(novaClient.getSecurityGroupExtensionForZone(zone).isPresent(),"Security groups are required by options, but the extension is not available! options: %s",templateOptions);
  }
 else   if (securityGroupExensionPresent && inboundPorts.size() > 0) {
    String securityGroupName="jclouds#" + group;
    try {
      securityGroupCache.get(new ZoneSecurityGroupNameAndPorts(zone,securityGroupName,inboundPorts));
    }
 catch (    ExecutionException e) {
      throw Throwables.propagate(e.getCause());
    }
    templateOptions.securityGroupNames(securityGroupName);
  }
  return super.execute(group,count,mutableTemplate,goodNodes,badNodes,customizationResponses);
}
