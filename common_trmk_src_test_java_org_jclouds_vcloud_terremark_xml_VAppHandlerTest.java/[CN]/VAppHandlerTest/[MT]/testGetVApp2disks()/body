{
  InputStream is=getClass().getResourceAsStream("/terremark/get_vapp2disks.xml");
  VCloudExpressVApp vApp=factory.create(injector.getInstance(VCloudExpressVAppHandler.class)).parse(is);
  assertEquals(vApp.getName(),"eduardo");
  assertEquals(vApp.getStatus(),Status.OFF);
  assertEquals(vApp.getSize().longValue(),30408704);
  assertEquals(vApp.getOperatingSystemDescription(),"Ubuntu Linux (32-bit)");
  assertEquals(vApp.getHref(),URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vapp/15639"));
  assertEquals(vApp.getVDC(),new ReferenceTypeImpl(null,VCloudExpressMediaType.VDC_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vdc/32")));
  VirtualSystemSettingData system=VirtualSystemSettingData.builder().instanceID("0").elementName("Virtual Hardware Family").virtualSystemIdentifier("eduardo").virtualSystemType("vmx-07").build();
  assertEquals(vApp.getSystem().toString(),system.toString());
  assertEquals(vApp.getNetworkToAddresses().get("Internal"),ImmutableList.of("10.114.34.131"));
  ResourceAllocationSettingData cpu=ResourceAllocationSettingData.builder().instanceID("1").elementName("2 virtual CPU(s)").description("Number of Virtual CPUs").resourceType(ResourceType.PROCESSOR).virtualQuantity(2l).virtualQuantityUnits("hertz * 10^6").build();
  ResourceAllocationSettingData controller=ResourceAllocationSettingData.builder().instanceID("3").elementName("SCSI Controller 0").description("SCSI Controller").resourceType(ResourceType.PARALLEL_SCSI_HBA).resourceSubType("lsilogic").address("0").virtualQuantity(1l).build();
  ResourceAllocationSettingData memory=ResourceAllocationSettingData.builder().instanceID("2").elementName("1024MB of memory").description("Memory Size").resourceType(ResourceType.MEMORY).virtualQuantity(1024l).virtualQuantityUnits("byte * 2^20").build();
  ResourceAllocationSettingData disk=ResourceAllocationSettingData.builder().instanceID("9").elementName("Hard Disk 1").resourceType(ResourceType.DISK_DRIVE).hostResource("4194304").addressOnParent("0").virtualQuantity(4194304l).virtualQuantityUnits("byte * 2^20").build();
  ResourceAllocationSettingData disk2=ResourceAllocationSettingData.builder().instanceID("9").elementName("Hard Disk 2").resourceType(ResourceType.DISK_DRIVE).hostResource("26214400").addressOnParent("1").virtualQuantity(26214400l).virtualQuantityUnits("byte * 2^20").build();
  assertEquals(vApp.getResourceAllocations(),ImmutableSet.of(cpu,memory,controller,disk,disk2));
  assertEquals(find(vApp.getResourceAllocations(),CIMPredicates.resourceTypeIn(ResourceType.PROCESSOR)).getVirtualQuantity().intValue(),2);
  find(vApp.getResourceAllocations(),CIMPredicates.resourceTypeIn(ResourceType.PARALLEL_SCSI_HBA));
  assertEquals(find(vApp.getResourceAllocations(),CIMPredicates.resourceTypeIn(ResourceType.MEMORY)).getVirtualQuantity().longValue(),1024);
  List<ResourceAllocationSettingData> disks=Lists.newArrayList(Iterables.filter(vApp.getResourceAllocations(),CIMPredicates.resourceTypeIn(ResourceType.DISK_DRIVE)));
  assertEquals(disks.get(0).getVirtualQuantity().longValue(),4194304);
  assertEquals(disks.get(1).getVirtualQuantity().longValue(),26214400);
}
