{
  HttpResponse listInstanceProfilesResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/list_instance_profiles_marker.xml","text/xml")).build();
  HttpRequest listInstanceProfiles2=HttpRequest.builder().method("POST").endpoint("https://iam.amazonaws.com/").addHeader("Host","iam.amazonaws.com").addFormParam("Action","ListInstanceProfilesForRole").addFormParam("Marker","MARKER").addFormParam("RoleName","WebServer").addFormParam("Signature","LHwKxeK/Hwqbv90tSG0tRJl/4BLrPqi%2BMvBnXvxUybs%3D").addFormParam("SignatureMethod","HmacSHA256").addFormParam("SignatureVersion","2").addFormParam("Timestamp","2009-11-08T15%3A54%3A08.897Z").addFormParam("Version","2010-05-08").addFormParam("AWSAccessKeyId","identity").build();
  HttpResponse listInstanceProfiles2Response=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/list_instance_profiles.xml","text/xml")).build();
  IAMApi apiWhenExist=requestsSendResponses(listInstanceProfiles,listInstanceProfilesResponse,listInstanceProfiles2,listInstanceProfiles2Response);
  assertEquals(apiWhenExist.getRoleApi().listInstanceProfiles("WebServer").concat().toList(),ImmutableList.copyOf(Iterables.concat(new ListInstanceProfilesResponseTest().expected(),new ListInstanceProfilesResponseTest().expected())));
}
