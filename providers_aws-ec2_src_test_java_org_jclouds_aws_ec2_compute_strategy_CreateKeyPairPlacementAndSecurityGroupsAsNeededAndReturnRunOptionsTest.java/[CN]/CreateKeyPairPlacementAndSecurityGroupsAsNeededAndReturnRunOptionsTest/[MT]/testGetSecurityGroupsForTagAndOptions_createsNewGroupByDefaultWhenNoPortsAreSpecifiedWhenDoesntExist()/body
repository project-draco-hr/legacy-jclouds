{
  String region=Region.AP_SOUTHEAST_1;
  String group="group";
  String generatedMarkerGroup="jclouds#group#" + Region.AP_SOUTHEAST_1;
  Set<String> groupIds=ImmutableSet.<String>of();
  int[] ports=new int[]{};
  boolean shouldAuthorizeSelf=true;
  boolean groupExisted=false;
  Set<String> returnVal=ImmutableSet.<String>of(generatedMarkerGroup);
  CreateKeyPairPlacementAndSecurityGroupsAsNeededAndReturnRunOptions strategy=setupStrategy();
  AWSEC2TemplateOptions options=createMock(AWSEC2TemplateOptions.class);
  expect(options.getGroupIds()).andReturn(groupIds).atLeastOnce();
  expect(options.getInboundPorts()).andReturn(ports).atLeastOnce();
  RegionNameAndIngressRules regionNameAndIngressRules=new RegionNameAndIngressRules(region,generatedMarkerGroup,ports,shouldAuthorizeSelf);
  expect(strategy.securityGroupMap.containsKey(regionNameAndIngressRules)).andReturn(groupExisted);
  expect(strategy.createSecurityGroupIfNeeded.apply(regionNameAndIngressRules)).andReturn(generatedMarkerGroup);
  expect(strategy.securityGroupMap.put(regionNameAndIngressRules,generatedMarkerGroup)).andReturn(null);
  replay(options);
  replayStrategy(strategy);
  assertEquals(strategy.getSecurityGroupsForTagAndOptions(region,group,options),returnVal);
  verify(options);
  verifyStrategy(strategy);
}
