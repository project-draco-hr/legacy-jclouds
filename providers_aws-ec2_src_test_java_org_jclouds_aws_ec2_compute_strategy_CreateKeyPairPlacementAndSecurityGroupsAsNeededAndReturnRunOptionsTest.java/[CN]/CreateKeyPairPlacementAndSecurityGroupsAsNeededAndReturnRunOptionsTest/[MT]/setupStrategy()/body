{
  Function<RegionAndName,KeyPair> makeKeyPair=createMock(Function.class);
  ConcurrentMap<RegionAndName,KeyPair> credentialsMap=createMock(ConcurrentMap.class);
  LoadingCache<RegionAndName,String> securityGroupMap=createMock(LoadingCache.class);
  LoadingCache<RegionAndName,String> placementGroupMap=createMock(LoadingCache.class);
  Function<RegionNameAndPublicKeyMaterial,KeyPair> importExistingKeyPair=createMock(Function.class);
  CreatePlacementGroupIfNeeded createPlacementGroupIfNeeded=createMock(CreatePlacementGroupIfNeeded.class);
  GroupNamingConvention.Factory namingConventionFactory=createMock(GroupNamingConvention.Factory.class);
  GroupNamingConvention namingConvention=createMock(GroupNamingConvention.class);
  expect(namingConventionFactory.create()).andReturn(namingConvention).anyTimes();
  expect(namingConvention.sharedNameForGroup("group")).andReturn("jclouds#group").anyTimes();
  replay(namingConventionFactory);
  replay(namingConvention);
  return new CreateKeyPairPlacementAndSecurityGroupsAsNeededAndReturnRunOptions(makeKeyPair,credentialsMap,securityGroupMap,OPTIONS_PROVIDER,placementGroupMap,createPlacementGroupIfNeeded,importExistingKeyPair,namingConventionFactory);
}
