{
  String region=Region.AP_SOUTHEAST_1;
  String group="group";
  AWSEC2TemplateOptions options=keyPair(group).authorizePublicKey("ssh-rsa");
  CreateKeyPairPlacementAndSecurityGroupsAsNeededAndReturnRunOptions strategy=setupStrategy();
  KeyPair keyPair=new KeyPair(region,"jclouds#" + group,"fingerprint",null);
  ConcurrentMap<RegionAndName,KeyPair> backing=createMock(ConcurrentMap.class);
  expect(strategy.credentialsMap.asMap()).andReturn(backing).atLeastOnce();
  expect(backing.containsKey(new RegionAndName(region,group))).andReturn(false);
  expect(strategy.importExistingKeyPair.apply(new RegionNameAndPublicKeyMaterial(region,group,"ssh-rsa"))).andReturn(keyPair);
  expect(backing.put(new RegionAndName(region,group),keyPair)).andReturn(null);
  replay(backing);
  replayStrategy(strategy);
  assertEquals(strategy.createNewKeyPairUnlessUserSpecifiedOtherwise(region,group,options),"jclouds#" + group);
  verify(backing);
  verifyStrategy(strategy);
}
