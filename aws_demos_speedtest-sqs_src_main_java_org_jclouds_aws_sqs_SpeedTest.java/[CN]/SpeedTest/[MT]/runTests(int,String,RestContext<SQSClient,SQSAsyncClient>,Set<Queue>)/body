{
  String message="1";
  long timeOut=messageCount * 200;
  for (  Queue queue : queues) {
    logger.info("context: %s, region: %s, queueName: %s",contextName,queue.getRegion(),queue.getName());
    Map<QueueMessage,Future<byte[]>> responses=Maps.newHashMap();
    for (int i=0; i < messageCount; i++) {
      responses.put(new QueueMessage(queue,message),context.getAsyncApi().sendMessage(queue,message));
    }
    Map<QueueMessage,Exception> exceptions=awaitCompletion(responses,MoreExecutors.sameThreadExecutor(),timeOut,traceLogger,String.format("context: %s, region: %s",contextName,queue.getRegion()));
    if (exceptions.size() > 0)     logger.error("problems in context: %s, region: %s: %s",contextName,queue.getRegion(),exceptions);
    System.gc();
    logger.info("pausing 5 seconds before the next run");
    Thread.sleep(5000);
  }
}
