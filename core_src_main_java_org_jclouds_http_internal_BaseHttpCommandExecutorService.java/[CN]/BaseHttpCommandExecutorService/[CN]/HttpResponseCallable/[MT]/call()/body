{
  HttpResponse response=null;
  for (; ; ) {
    HttpRequest request=command.getRequest();
    Q nativeRequest=null;
    try {
      for (      HttpRequestFilter filter : request.getFilters()) {
        filter.filter(request);
      }
      logger.debug("Sending request %s: %s",request.hashCode(),request.getRequestLine());
      if (request.getPayload() != null && wire.enabled())       request.setPayload(Payloads.newPayload(wire.output(request.getPayload().getRawContent())));
      nativeRequest=convert(request);
      HttpUtils.logRequest(headerLog,request,">>");
      try {
        response=invoke(nativeRequest);
      }
 catch (      IOException e) {
        if (ioRetryHandler.shouldRetryRequest(command,e)) {
          continue;
        }
 else {
          command.setException(new HttpResponseException(e.getMessage() + " connecting to " + command.getRequest().getRequestLine(),command,new HttpResponse(),e));
          break;
        }
      }
      logger.debug("Receiving response %s: %s",request.hashCode(),response.getStatusLine());
      HttpUtils.logResponse(headerLog,response,"<<");
      if (response.getContent() != null && wire.enabled())       response.setContent(wire.input(response.getContent()));
      int statusCode=response.getStatusCode();
      if (statusCode >= 300) {
        if (shouldContinue(response))         continue;
 else         break;
      }
 else {
        break;
      }
    }
  finally {
      cleanup(nativeRequest);
    }
  }
  if (command.getException() != null)   throw command.getException();
  return response;
}
