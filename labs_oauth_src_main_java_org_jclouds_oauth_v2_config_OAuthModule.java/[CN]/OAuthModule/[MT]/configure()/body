{
  bind(new TypeLiteral<Function<byte[],byte[]>>(){
  }
).to(SignOrProduceMacForToken.class);
  bind(new TypeLiteral<Map<Type,Object>>(){
  }
).toInstance(ImmutableMap.<Type,Object>of(Header.class,new HeaderTypeAdapter(),ClaimSet.class,new ClaimSetTypeAdapter()));
  bind(new TypeLiteral<Supplier<OAuthCredentials>>(){
  }
).to(OAuthCredentialsSupplier.class);
  bind(new TypeLiteral<Function<GeneratedHttpRequest<?>,TokenRequest>>(){
  }
).to(BuildTokenRequest.class);
  bind(new TypeLiteral<Function<TokenRequest,Token>>(){
  }
).to(FetchToken.class);
}
