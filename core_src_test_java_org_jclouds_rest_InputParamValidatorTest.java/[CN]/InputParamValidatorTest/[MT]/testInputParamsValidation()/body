{
  Invokable<?,?> allParamsValidatedMethod=method(InputParamValidatorForm.class,"allParamsValidated",String.class,String.class);
  Invokable<?,?> oneParamValidatedMethod=method(InputParamValidatorForm.class,"oneParamValidated",String.class,String.class);
  restAnnotationProcessor.apply(Invocation.create(allParamsValidatedMethod,ImmutableList.<Object>of("blah","blah")));
  restAnnotationProcessor.apply(Invocation.create(oneParamValidatedMethod,ImmutableList.<Object>of("blah","blah")));
  try {
    restAnnotationProcessor.apply(Invocation.create(allParamsValidatedMethod,ImmutableList.<Object>of("BLAH","blah")));
    throw new TestException("AllLowerCaseValidator shouldn't have passed 'BLAH' as a parameter because it's uppercase.");
  }
 catch (  IllegalArgumentException e) {
  }
  restAnnotationProcessor.apply(Invocation.create(oneParamValidatedMethod,ImmutableList.<Object>of("BLAH","blah")));
  try {
    restAnnotationProcessor.apply(Invocation.create(oneParamValidatedMethod,ImmutableList.<Object>of("blah","BLAH")));
    throw new TestException("AllLowerCaseValidator shouldn't have passed 'BLAH' as the second parameter because it's uppercase.");
  }
 catch (  IllegalArgumentException e) {
  }
}
