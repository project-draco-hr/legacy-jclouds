{
  Invokable<?,?> allParamsValidatedMethod=Invokable.from(InputParamValidatorForm.class.getMethod("allParamsValidated",String.class,String.class));
  Invokable<?,?> oneParamValidatedMethod=Invokable.from(InputParamValidatorForm.class.getMethod("oneParamValidated",String.class,String.class));
  restAnnotationProcessor.createRequest(allParamsValidatedMethod,ImmutableList.<Object>of("blah","blah"));
  restAnnotationProcessor.createRequest(oneParamValidatedMethod,ImmutableList.<Object>of("blah","blah"));
  try {
    restAnnotationProcessor.createRequest(allParamsValidatedMethod,ImmutableList.<Object>of("BLAH","blah"));
    throw new TestException("AllLowerCaseValidator shouldn't have passed 'BLAH' as a parameter because it's uppercase.");
  }
 catch (  IllegalArgumentException e) {
  }
  restAnnotationProcessor.createRequest(oneParamValidatedMethod,ImmutableList.<Object>of("BLAH","blah"));
  try {
    restAnnotationProcessor.createRequest(oneParamValidatedMethod,ImmutableList.<Object>of("blah","BLAH"));
    throw new TestException("AllLowerCaseValidator shouldn't have passed 'BLAH' as the second parameter because it's uppercase.");
  }
 catch (  IllegalArgumentException e) {
  }
}
