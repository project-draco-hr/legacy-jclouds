{
  Iterable<DriveInfo> drives=transformParallel(preinstalledImages.keySet(),new Function<String,Future<DriveInfo>>(){
    @Override public Future<DriveInfo> apply(    String input){
      try {
        return Futures.immediateFuture(cache.getUnchecked(input));
      }
 catch (      CacheLoader.InvalidCacheLoadException e) {
        logger.debug("drive %s not found",input);
      }
catch (      UncheckedExecutionException e) {
        logger.warn(e,"error finding drive %s: %s",input,e.getMessage());
      }
      return Futures.immediateFuture(null);
    }
    @Override public String toString(){
      return "seedDriveCache()";
    }
  }
,executor,null,logger,"drives");
  return filter(drives,notNull());
}
