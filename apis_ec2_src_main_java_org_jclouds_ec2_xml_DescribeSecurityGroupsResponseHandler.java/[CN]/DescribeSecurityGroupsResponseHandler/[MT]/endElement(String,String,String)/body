{
  if (equalsOrSuffix(qName,"groupName")) {
    if (!inGroups)     this.groupName=currentOrNull(currentText);
 else     this.userIdGroupName=currentOrNull(currentText);
  }
 else   if (equalsOrSuffix(qName,"groupId")) {
    this.groupId=currentOrNull(currentText);
  }
 else   if (equalsOrSuffix(qName,"ownerId")) {
    this.ownerId=currentOrNull(currentText);
  }
 else   if (equalsOrSuffix(qName,"userId")) {
    this.userId=currentOrNull(currentText);
  }
 else   if (equalsOrSuffix(qName,"groupDescription")) {
    this.groupDescription=currentOrNull(currentText);
  }
 else   if (equalsOrSuffix(qName,"ipProtocol")) {
    this.ipProtocol=IpProtocol.fromValue(currentOrNegative(currentText));
  }
 else   if (equalsOrSuffix(qName,"fromPort")) {
    this.fromPort=Integer.parseInt(currentOrNegative(currentText));
  }
 else   if (equalsOrSuffix(qName,"toPort")) {
    this.toPort=Integer.parseInt(currentOrNegative(currentText));
  }
 else   if (equalsOrSuffix(qName,"cidrIp")) {
    this.ipRanges.add(currentOrNull(currentText));
  }
 else   if (equalsOrSuffix(qName,"ipPermissions")) {
    inIpPermissions=false;
  }
 else   if (equalsOrSuffix(qName,"ipRanges")) {
    inIpRanges=false;
  }
 else   if (equalsOrSuffix(qName,"groups")) {
    inGroups=false;
  }
 else   if (equalsOrSuffix(qName,"item")) {
    if (inIpPermissions && !inIpRanges && !inGroups) {
      ipPermissions.add(new IpPermissionImpl(ipProtocol,fromPort,toPort,groups,ImmutableSet.<String>of(),ipRanges));
      this.fromPort=-1;
      this.toPort=-1;
      this.groups=LinkedHashMultimap.create();
      this.ipProtocol=null;
      this.ipRanges=Sets.newLinkedHashSet();
    }
 else     if (inIpPermissions && !inIpRanges && inGroups) {
      this.groups.put(userId,userIdGroupName);
      this.userId=null;
      this.userIdGroupName=null;
    }
 else     if (!inIpPermissions && !inIpRanges && !inGroups) {
      String region=AWSUtils.findRegionInArgsOrNull(getRequest());
      if (region == null)       region=defaultRegion.get();
      securtyGroups.add(new SecurityGroup(region,groupId,groupName,ownerId,groupDescription,ipPermissions));
      this.groupName=null;
      this.groupId=null;
      this.ownerId=null;
      this.groupDescription=null;
      this.ipPermissions=Sets.newLinkedHashSet();
    }
  }
  currentText=new StringBuilder();
}
