{
  List<HttpRequestFilter> filters=newArrayList();
  if (invocation.getInterfaceType().isAnnotationPresent(RequestFilters.class)) {
    for (    Class<? extends HttpRequestFilter> clazz : invocation.getInterfaceType().getAnnotation(RequestFilters.class).value()) {
      HttpRequestFilter instance=injector.getInstance(clazz);
      filters.add(instance);
      logger.trace("adding filter %s from annotation on %s",instance,invocation.getInterfaceType().getName());
    }
  }
  if (invocation.getInvokable().isAnnotationPresent(RequestFilters.class)) {
    if (invocation.getInvokable().isAnnotationPresent(OverrideRequestFilters.class))     filters.clear();
    for (    Class<? extends HttpRequestFilter> clazz : invocation.getInvokable().getAnnotation(RequestFilters.class).value()) {
      HttpRequestFilter instance=injector.getInstance(clazz);
      filters.add(instance);
      logger.trace("adding filter %s from annotation on %s",instance,invocation.getInvokable().getName());
    }
  }
  return filters;
}
