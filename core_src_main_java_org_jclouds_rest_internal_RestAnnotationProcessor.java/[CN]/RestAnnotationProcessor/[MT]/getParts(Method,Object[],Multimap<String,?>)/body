{
  ImmutableList.Builder<Part> parts=ImmutableList.<Part>builder();
  LoadingCache<Integer,Set<Annotation>> indexToPartParam=methodToIndexOfParamToPartParamAnnotations.getUnchecked(method);
  for (  Entry<Integer,Set<Annotation>> entry : ImmutableSortedMap.copyOf(indexToPartParam.asMap()).entrySet()) {
    for (    Annotation key : entry.getValue()) {
      PartParam param=(PartParam)key;
      PartOptions options=new PartOptions();
      if (!PartParam.NO_CONTENT_TYPE.equals(param.contentType()))       options.contentType(param.contentType());
      if (!PartParam.NO_FILENAME.equals(param.filename()))       options.filename(replaceTokens(param.filename(),tokenValues));
      Object arg=args[entry.getKey()];
      checkNotNull(arg,param.name());
      Part part=Part.create(param.name(),newPayload(arg),options);
      parts.add(part);
    }
  }
  return parts.build();
}
