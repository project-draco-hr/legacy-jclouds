{
  Function<HttpResponse,?> transformer;
  Class<? extends HandlerWithResult<?>> handler=getSaxResponseParserClassOrNull(method);
  if (handler != null) {
    transformer=parserFactory.create(injector.getInstance(handler));
  }
 else {
    transformer=getTransformerForMethod(method,injector);
  }
  if (transformer instanceof InvocationContext<?>) {
    ((InvocationContext<?>)transformer).setContext(request);
  }
  if (method.isAnnotationPresent(Transform.class)) {
    Function<?,?> wrappingTransformer=injector.getInstance(method.getAnnotation(Transform.class).value());
    if (wrappingTransformer instanceof InvocationContext<?>) {
      ((InvocationContext<?>)wrappingTransformer).setContext(request);
    }
    transformer=Functions.compose(Function.class.cast(wrappingTransformer),transformer);
  }
  return transformer;
}
