{
  if (args != null) {
    for (    Object arg : args) {
      if (arg instanceof Object[]) {
        Object[] postBinders=(Object[])arg;
        if (postBinders.length == 0) {
        }
 else         if (postBinders.length == 1) {
          if (postBinders[0] instanceof org.jclouds.rest.MapBinder) {
            org.jclouds.rest.MapBinder binder=(org.jclouds.rest.MapBinder)postBinders[0];
            injector.injectMembers(binder);
            return binder;
          }
        }
 else {
          if (postBinders[0] instanceof org.jclouds.rest.MapBinder) {
            throw new IllegalArgumentException("we currently do not support multiple varargs postBinders in: " + method.getName());
          }
        }
      }
 else       if (arg instanceof org.jclouds.rest.MapBinder) {
        org.jclouds.rest.MapBinder binder=(org.jclouds.rest.MapBinder)arg;
        injector.injectMembers(binder);
        return binder;
      }
    }
  }
  if (method.isAnnotationPresent(MapBinder.class)) {
    return injector.getInstance(method.getAnnotation(MapBinder.class).value());
  }
 else   if (method.isAnnotationPresent(org.jclouds.rest.annotations.Payload.class)) {
    return injector.getInstance(BindMapToStringPayload.class);
  }
 else   if (method.isAnnotationPresent(WrapWith.class)) {
    return injector.getInstance(BindToJsonPayloadWrappedWith.Factory.class).create(method.getAnnotation(WrapWith.class).value());
  }
  return null;
}
