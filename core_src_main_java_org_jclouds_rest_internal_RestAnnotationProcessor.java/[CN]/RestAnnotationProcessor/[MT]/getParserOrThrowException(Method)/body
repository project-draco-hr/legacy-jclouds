{
  ResponseParser annotation=method.getAnnotation(ResponseParser.class);
  if (annotation == null) {
    if (method.getReturnType().equals(void.class) || TypeLiteral.get(method.getGenericReturnType()).equals(futureVoidLiteral)) {
      return Key.get(ReleasePayloadAndReturn.class);
    }
 else     if (method.getReturnType().equals(boolean.class) || method.getReturnType().equals(Boolean.class) || TypeLiteral.get(method.getGenericReturnType()).equals(futureBooleanLiteral)) {
      return Key.get(ReturnTrueIf2xx.class);
    }
 else     if (method.getReturnType().equals(InputStream.class) || TypeLiteral.get(method.getGenericReturnType()).equals(futureInputStreamLiteral)) {
      return Key.get(ReturnInputStream.class);
    }
 else     if (method.getReturnType().equals(HttpResponse.class) || TypeLiteral.get(method.getGenericReturnType()).equals(futureHttpResponseLiteral)) {
      return Key.get((Class)IdentityFunction.class);
    }
 else     if (getAcceptHeadersOrNull(method).contains(MediaType.APPLICATION_JSON)) {
      return getJsonParserKeyForMethod(method);
    }
 else     if (method.getReturnType().equals(String.class) || TypeLiteral.get(method.getGenericReturnType()).equals(futureStringLiteral)) {
      return Key.get(ReturnStringIf2xx.class);
    }
 else     if (method.getReturnType().equals(URI.class) || TypeLiteral.get(method.getGenericReturnType()).equals(futureURILiteral)) {
      return Key.get(ParseURIFromListOrLocationHeaderIf20x.class);
    }
 else {
      throw new IllegalStateException("You must specify a ResponseParser annotation on: " + method.toString());
    }
  }
  return Key.get(annotation.value());
}
