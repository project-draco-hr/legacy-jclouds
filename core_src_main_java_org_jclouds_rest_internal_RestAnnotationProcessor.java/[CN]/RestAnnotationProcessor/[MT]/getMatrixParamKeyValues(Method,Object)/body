{
  Multimap<String,String> matrixParamValues=LinkedHashMultimap.create();
  matrixParamValues.putAll(constants);
  Map<Integer,Set<Annotation>> indexToMatrixParam=methodToindexOfParamToMatrixParamAnnotations.get(method);
  Map<Integer,Set<Annotation>> indexToParamExtractor=methodToindexOfParamToParamParserAnnotations.get(method);
  for (  Entry<Integer,Set<Annotation>> entry : indexToMatrixParam.entrySet()) {
    for (    Annotation key : entry.getValue()) {
      Set<Annotation> extractors=indexToParamExtractor.get(entry.getKey());
      String paramKey=((MatrixParam)key).value();
      String paramValue;
      if (extractors != null && extractors.size() > 0) {
        ParamParser extractor=(ParamParser)extractors.iterator().next();
        paramValue=injector.getInstance(extractor.value()).apply(args[entry.getKey()]);
      }
 else {
        paramValue=args[entry.getKey()].toString();
      }
      matrixParamValues.put(paramKey,paramValue);
    }
  }
  if (method.isAnnotationPresent(MatrixParam.class) && method.isAnnotationPresent(ParamParser.class)) {
    String paramKey=method.getAnnotation(MatrixParam.class).value();
    String paramValue=injector.getInstance(method.getAnnotation(ParamParser.class).value()).apply(args);
    matrixParamValues.put(paramKey,paramValue);
  }
  return matrixParamValues;
}
