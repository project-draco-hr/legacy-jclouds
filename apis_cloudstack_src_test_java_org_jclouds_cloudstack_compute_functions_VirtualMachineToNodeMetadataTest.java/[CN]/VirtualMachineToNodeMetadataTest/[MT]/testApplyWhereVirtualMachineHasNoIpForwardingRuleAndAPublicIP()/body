{
  Supplier<Set<? extends Location>> locationSupplier=Suppliers.<Set<? extends Location>>ofInstance(ImmutableSet.<Location>of(ZoneToLocationTest.one,ZoneToLocationTest.two));
  Supplier<Set<? extends Image>> imageSupplier=Suppliers.<Set<? extends Image>>ofInstance(ImmutableSet.<Image>of(TemplateToImageTest.one,TemplateToImageTest.two));
  VirtualMachineToNodeMetadata parser=new VirtualMachineToNodeMetadata(new FindLocationForVirtualMachine(locationSupplier),new FindImageForVirtualMachine(imageSupplier),CacheBuilder.newBuilder().<Long,Set<IPForwardingRule>>build(new CacheLoader<Long,Set<IPForwardingRule>>(){
    @Override public Set<IPForwardingRule> load(    Long arg0) throws Exception {
      return ImmutableSet.of();
    }
  }
),namingConvention);
  VirtualMachine guest=VirtualMachine.builder().id(54).name("i-3-54-VM").displayName("i-3-54-VM").account("adrian").domainId(1).domain("ROOT").created(new SimpleDateFormatDateService().iso8601SecondsDateParse("2011-02-16T14:28:37-0800")).state(VirtualMachine.State.STARTING).isHAEnabled(false).zoneId(1).zoneName("San Jose 1").templateId(2).templateName("CentOS 5.3(64-bit) no GUI (XenServer)").templateDisplayText("CentOS 5.3(64-bit) no GUI (XenServer)").passwordEnabled(false).serviceOfferingId(1).serviceOfferingName("Small Instance").cpuCount(1).cpuSpeed(500).memory(512).guestOSId(11).rootDeviceId(0).rootDeviceType("NetworkFilesystem").jobId(63l).jobStatus(0).nics(ImmutableSet.of(NIC.builder().id(72).networkId(204).netmask("255.255.255.0").gateway("1.1.1.1").IPAddress("1.1.1.5").trafficType(TrafficType.GUEST).guestIPType(GuestIPType.VIRTUAL).isDefault(true).build())).hypervisor("XenServer").build();
  NodeMetadata node=parser.apply(guest);
  assertEquals(node.toString(),new NodeMetadataBuilder().id("54").providerId("54").name("i-3-54-VM").group("i-3-54").location(ZoneToLocationTest.one).state(NodeState.PENDING).hostname("i-3-54-VM").privateAddresses(ImmutableSet.<String>of()).publicAddresses(ImmutableSet.<String>of("1.1.1.5")).hardware(addHypervisor(ServiceOfferingToHardwareTest.one,"XenServer")).imageId(TemplateToImageTest.one.getId()).operatingSystem(TemplateToImageTest.one.getOperatingSystem()).build().toString());
}
