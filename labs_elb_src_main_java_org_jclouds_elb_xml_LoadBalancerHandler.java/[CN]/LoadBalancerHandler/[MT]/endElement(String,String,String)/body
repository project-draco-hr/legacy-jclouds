{
  if (equalsOrSuffix(qName,"member")) {
    endMember(uri,name,qName);
    memberDepth--;
  }
 else   if (equalsOrSuffix(qName,"ListenerDescriptions")) {
    inListeners=false;
  }
 else   if (equalsOrSuffix(qName,"AvailabilityZones")) {
    inAvailabilityZones=false;
  }
 else   if (equalsOrSuffix(qName,"SecurityGroups")) {
    inSecurityGroups=false;
  }
 else   if (equalsOrSuffix(qName,"Subnets")) {
    inSubnets=false;
  }
 else   if (equalsOrSuffix(qName,"HealthCheck")) {
    builder.healthCheck(healthCheckHandler.getResult());
    inHealthCheck=false;
  }
 else   if (equalsOrSuffix(qName,"SourceSecurityGroup")) {
    if (sourceSecurityGroupBuilder != null)     builder.sourceSecurityGroup(sourceSecurityGroupBuilder.build());
    sourceSecurityGroupBuilder=null;
  }
 else   if (equalsOrSuffix(qName,"LoadBalancerName")) {
    builder.name(currentOrNull(currentText));
  }
 else   if (equalsOrSuffix(qName,"CreatedTime")) {
    builder.createdTime(dateService.iso8601DateParse(currentOrNull(currentText)));
  }
 else   if (equalsOrSuffix(qName,"DNSName")) {
    builder.dnsName(currentOrNull(currentText));
  }
 else   if (equalsOrSuffix(qName,"InstanceId")) {
    builder.instanceId(currentOrNull(currentText));
  }
 else   if (equalsOrSuffix(qName,"GroupName")) {
    sourceSecurityGroupBuilder.name(currentOrNull(currentText));
  }
 else   if (equalsOrSuffix(qName,"OwnerAlias")) {
    sourceSecurityGroupBuilder.owner(currentOrNull(currentText));
  }
 else   if (equalsOrSuffix(qName,"Scheme")) {
    builder.scheme(Scheme.fromValue(currentOrNull(currentText)));
  }
 else   if (equalsOrSuffix(qName,"VPCId")) {
    builder.VPCId(currentOrNull(currentText));
  }
 else   if (equalsOrSuffix(qName,"CanonicalHostedZoneName")) {
    builder.hostedZoneName(currentOrNull(currentText));
  }
 else   if (equalsOrSuffix(qName,"CanonicalHostedZoneNameID")) {
    builder.hostedZoneId(currentOrNull(currentText));
  }
 else   if (inHealthCheck) {
    healthCheckHandler.endElement(uri,name,qName);
  }
 else   if (inListeners) {
    listenerHandler.endElement(uri,name,qName);
  }
  currentText=new StringBuilder();
}
