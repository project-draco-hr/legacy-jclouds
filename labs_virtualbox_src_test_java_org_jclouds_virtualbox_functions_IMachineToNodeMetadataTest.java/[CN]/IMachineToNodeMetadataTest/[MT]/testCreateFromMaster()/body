{
  IMachine vm=createNiceMock(IMachine.class);
  VirtualBoxManager vbm=createNiceMock(VirtualBoxManager.class);
  IVirtualBox vBox=createNiceMock(IVirtualBox.class);
  IGuestOSType iGuestOSType=createNiceMock(IGuestOSType.class);
  INetworkAdapter nat=createNiceMock(INetworkAdapter.class);
  INATEngine natEng=createNiceMock(INATEngine.class);
  expect(vm.getName()).andReturn(VIRTUALBOX_IMAGE_PREFIX + MASTER_NAME).anyTimes();
  expect(vm.getState()).andReturn(MachineState.PoweredOff).anyTimes();
  expect(vm.getNetworkAdapter(eq(0l))).andReturn(nat).once();
  expect(vm.getNetworkAdapter(eq(1l))).andReturn(null).once();
  expect(nat.getAttachmentType()).andReturn(NetworkAttachmentType.NAT).once();
  expect(nat.getNATEngine()).andReturn(natEng).anyTimes();
  expect(natEng.getHostIP()).andReturn("127.0.0.1").once();
  expect(natEng.getRedirects()).andReturn(ImmutableList.of("0,1,127.0.0.1,2222,,22"));
  expect(vbm.getVBox()).andReturn(vBox).anyTimes();
  expect(vm.getOSTypeId()).andReturn("RedHat_64").anyTimes();
  expect(vBox.getGuestOSType(vm.getOSTypeId())).andReturn(iGuestOSType);
  INetworkAdapter hostOnly=createNiceMock(INetworkAdapter.class);
  NetworkUtils networkUtils=createNiceMock(NetworkUtils.class);
  replay(vm,vBox,iGuestOSType,nat,natEng,hostOnly,networkUtils);
  NodeMetadata node=new IMachineToNodeMetadata(Suppliers.ofInstance(vbm),VirtualBoxComputeServiceContextModule.toPortableNodeStatus,networkUtils,map).apply(vm);
  assertEquals(MASTER_NAME,node.getName());
  assertEquals(1,node.getPrivateAddresses().size());
  assertEquals(1,node.getPublicAddresses().size());
  assertEquals("127.0.0.1",Iterables.get(node.getPublicAddresses(),0));
  assertEquals(NetworkUtils.MASTER_PORT,node.getLoginPort());
  assertEquals("",node.getGroup());
}
