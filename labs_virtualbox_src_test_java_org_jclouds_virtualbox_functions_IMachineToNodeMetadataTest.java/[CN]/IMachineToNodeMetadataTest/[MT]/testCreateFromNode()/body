{
  IMachine vm=createNiceMock(IMachine.class);
  String group="my-cluster-group";
  String name="a-name-with-a-code-338";
  expect(vm.getName()).andReturn(VIRTUALBOX_NODE_PREFIX + MASTER_NAME + VIRTUALBOX_NODE_NAME_SEPARATOR+ group+ VIRTUALBOX_NODE_NAME_SEPARATOR+ name).anyTimes();
  expect(vm.getState()).andReturn(MachineState.PoweredOff).anyTimes();
  INetworkAdapter nat=createNiceMock(INetworkAdapter.class);
  INATEngine natEng=createNiceMock(INATEngine.class);
  INetworkAdapter hostOnly=createNiceMock(INetworkAdapter.class);
  expect(vm.getNetworkAdapter(eq(0l))).andReturn(nat).once();
  expect(vm.getNetworkAdapter(eq(1l))).andReturn(hostOnly).once();
  expect(nat.getAttachmentType()).andReturn(NetworkAttachmentType.NAT).once();
  expect(nat.getNatDriver()).andReturn(natEng).anyTimes();
  expect(natEng.getHostIP()).andReturn("127.0.0.1").once();
  expect(natEng.getRedirects()).andReturn(ImmutableList.of("0,1,127.0.0.1,3000,,22"));
  MachineUtils machineUtils=createNiceMock(MachineUtils.class);
  replay(vm,nat,natEng,hostOnly,machineUtils);
  NodeMetadata node=new IMachineToNodeMetadata(machineUtils).apply(vm);
  assertEquals(name,node.getName());
  assertEquals(group,node.getGroup());
  assertEquals(1,node.getPublicAddresses().size());
}
