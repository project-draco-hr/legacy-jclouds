{
  IMachine vm=createNiceMock(IMachine.class);
  expect(vm.getName()).andReturn("mocked-vm").anyTimes();
  expect(vm.getState()).andReturn(MachineState.PoweredOff).anyTimes();
  INetworkAdapter nat=createNiceMock(INetworkAdapter.class);
  INATEngine natEng=createNiceMock(INATEngine.class);
  expect(vm.getNetworkAdapter(eq(0l))).andReturn(nat).once();
  expect(nat.getAttachmentType()).andReturn(NetworkAttachmentType.NAT).once();
  expect(nat.getNatDriver()).andReturn(natEng).anyTimes();
  expect(natEng.getHostIP()).andReturn("127.0.0.1").once();
  expect(natEng.getRedirects()).andReturn(ImmutableList.of("0,1,127.0.0.1,3000,,22"));
  INetworkAdapter hostOnly=createNiceMock(INetworkAdapter.class);
  replay(vm,nat,natEng,hostOnly);
  NodeMetadata node=new IMachineToNodeMetadata().apply(vm);
  assertEquals("mocked-vm",node.getName());
  assertEquals(1,node.getPrivateAddresses().size());
  assertEquals((NodeCreator.VMS_NETWORK + 2),Iterables.get(node.getPrivateAddresses(),0));
  assertEquals(1,node.getPublicAddresses().size());
  assertEquals((NodeCreator.VMS_NETWORK + 2),Iterables.get(node.getPublicAddresses(),0));
  assertEquals(22,node.getLoginPort());
}
