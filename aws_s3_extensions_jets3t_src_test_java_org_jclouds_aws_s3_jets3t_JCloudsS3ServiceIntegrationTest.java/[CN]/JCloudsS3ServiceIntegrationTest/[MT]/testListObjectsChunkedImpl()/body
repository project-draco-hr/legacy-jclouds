{
  String bucketName=bucketPrefix + ".testListAllBucketsImplString".toLowerCase();
  createBucket(bucketName);
  addObjectToBucket(bucketName,"item1/subobject2");
  addObjectToBucket(bucketName,"item2");
  addObjectToBucket(bucketName,"object1");
  addObjectToBucket(bucketName,"object2/subobject1");
  S3ObjectsChunk chunk;
  chunk=service.listObjectsChunked(bucketName,null,null,1000,null,true);
  assertEquals(chunk.getObjects().length,4);
  assertEquals(chunk.getCommonPrefixes().length,0);
  assertNull(chunk.getDelimiter());
  assertNull(chunk.getPrefix());
  assertNull(chunk.getPriorLastKey());
  chunk=service.listObjectsChunked(bucketName,null,null,2,null,false);
  assertEquals(chunk.getObjects().length,2);
  assertEquals(chunk.getCommonPrefixes().length,0);
  assertNull(chunk.getDelimiter());
  assertNull(chunk.getPrefix());
  assertEquals(chunk.getPriorLastKey(),"item2");
  chunk=service.listObjectsChunked(bucketName,null,null,2,null,true);
  assertEquals(chunk.getObjects().length,4);
  assertEquals(chunk.getCommonPrefixes().length,0);
  assertNull(chunk.getDelimiter());
  assertNull(chunk.getPrefix());
  assertNull(chunk.getPriorLastKey());
  chunk=service.listObjectsChunked(bucketName,null,null,1000,"item1/subobject2",true);
  assertEquals(chunk.getObjects().length,3);
  assertEquals(chunk.getCommonPrefixes().length,0);
  assertNull(chunk.getDelimiter());
  assertNull(chunk.getPrefix());
  assertNull(chunk.getPriorLastKey());
  chunk=service.listObjectsChunked(bucketName,null,null,1000,"object1",true);
  assertEquals(chunk.getObjects().length,1);
  assertEquals(chunk.getCommonPrefixes().length,0);
  assertNull(chunk.getDelimiter());
  assertNull(chunk.getPrefix());
  assertNull(chunk.getPriorLastKey());
  chunk=service.listObjectsChunked(bucketName,"item",null,1000,null,true);
  assertEquals(chunk.getObjects().length,2);
  assertEquals(chunk.getCommonPrefixes().length,0);
  assertNull(chunk.getDelimiter());
  assertEquals(chunk.getPrefix(),"item");
  assertNull(chunk.getPriorLastKey());
  chunk=service.listObjectsChunked(bucketName,null,"/",1000,null,true);
  assertEquals(chunk.getObjects().length,2);
  assertEquals(chunk.getCommonPrefixes().length,2);
  assertEquals(chunk.getDelimiter(),"/");
  assertNull(chunk.getPrefix());
  assertNull(chunk.getPriorLastKey());
  chunk=service.listObjectsChunked(bucketName,"item","/",1000,null,true);
  assertEquals(chunk.getObjects().length,1);
  assertEquals(chunk.getCommonPrefixes().length,1);
  assertEquals(chunk.getDelimiter(),"/");
  assertEquals(chunk.getPrefix(),"item");
  assertNull(chunk.getPriorLastKey());
  client.deleteObject(bucketName,"item1/subobject2");
  client.deleteObject(bucketName,"item2");
  client.deleteObject(bucketName,"object1");
  client.deleteObject(bucketName,"object2/subobject1");
  client.deleteBucketIfEmpty(bucketName);
}
