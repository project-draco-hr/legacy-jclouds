{
  String objectKey="putObject";
  S3Object requestObject, jsResultObject;
  org.jclouds.aws.s3.domain.S3Object jcObject;
  requestObject=new S3Object(objectKey);
  jsResultObject=service.putObject(new S3Bucket(commonTestingBucketName),requestObject);
  jcObject=client.getObject(commonTestingBucketName,objectKey).get(10,TimeUnit.SECONDS);
  assertEquals(jcObject.getKey(),objectKey);
  assertEquals(jcObject.getMetadata().getSize(),0);
  assertEquals(jcObject.getMetadata().getContentType(),ContentTypes.BINARY);
  assertEquals(jsResultObject.getKey(),requestObject.getKey());
  assertEquals(jsResultObject.getContentLength(),0);
  assertEquals(jsResultObject.getContentType(),ContentTypes.BINARY);
  requestObject=new S3Object("?n???d?-object");
  jsResultObject=service.putObject(new S3Bucket(commonTestingBucketName),requestObject);
  jcObject=client.getObject(commonTestingBucketName,requestObject.getKey()).get(10,TimeUnit.SECONDS);
  assertEquals(jcObject.getKey(),requestObject.getKey());
  assertEquals(jcObject.getMetadata().getSize(),0);
  assertEquals(jcObject.getMetadata().getContentType(),ContentTypes.BINARY);
  assertEquals(jsResultObject.getKey(),requestObject.getKey());
  assertEquals(jsResultObject.getContentLength(),0);
  assertEquals(jsResultObject.getContentType(),ContentTypes.BINARY);
  String data="This is my ?n???d? data";
  requestObject=new S3Object(objectKey,data);
  jsResultObject=service.putObject(new S3Bucket(commonTestingBucketName),requestObject);
  jcObject=client.getObject(commonTestingBucketName,objectKey).get(10,TimeUnit.SECONDS);
  assertEquals(jcObject.getMetadata().getSize(),data.getBytes("UTF-8").length);
  assertTrue(jcObject.getMetadata().getContentType().startsWith("text/plain"));
  assertEquals(jsResultObject.getContentLength(),data.getBytes("UTF-8").length);
  assertTrue(jsResultObject.getContentType().startsWith("text/plain"));
  requestObject=new S3Object(objectKey);
  requestObject.addMetadata(S3Constants.USER_METADATA_PREFIX + "my-metadata-1","value-1");
  jsResultObject=service.putObject(new S3Bucket(commonTestingBucketName),requestObject);
  jcObject=client.getObject(commonTestingBucketName,objectKey).get(10,TimeUnit.SECONDS);
  assertEquals(Iterables.getLast(jcObject.getMetadata().getUserMetadata().get(S3Constants.USER_METADATA_PREFIX + "my-metadata-1")),"value-1");
  assertEquals(jsResultObject.getMetadata(S3Constants.USER_METADATA_PREFIX + "my-metadata-1"),"value-1");
  requestObject=new S3Object(objectKey);
  requestObject.setAcl(AccessControlList.REST_CANNED_PUBLIC_READ);
  jsResultObject=service.putObject(new S3Bucket(commonTestingBucketName),requestObject);
  jcObject=client.getObject(commonTestingBucketName,objectKey).get(10,TimeUnit.SECONDS);
  assertEquals(jsResultObject.getAcl(),AccessControlList.REST_CANNED_PUBLIC_READ);
  emptyBucket(commonTestingBucketName);
}
