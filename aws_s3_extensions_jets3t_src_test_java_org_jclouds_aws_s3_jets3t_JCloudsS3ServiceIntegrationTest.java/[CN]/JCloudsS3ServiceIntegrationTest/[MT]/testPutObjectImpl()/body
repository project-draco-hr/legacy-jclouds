{
  String bucketName=getBucketName();
  try {
    String objectKey="putObject";
    S3Object requestObject, jsResultObject;
    org.jclouds.aws.s3.domain.S3Object jcObject;
    requestObject=new S3Object(objectKey);
    jsResultObject=service.putObject(new S3Bucket(bucketName),requestObject);
    jcObject=client.getObject(bucketName,objectKey).get(10,TimeUnit.SECONDS);
    assertEquals(jcObject.getKey(),objectKey);
    assertEquals(jcObject.getMetadata().getSize(),0);
    assertEquals(jcObject.getMetadata().getContentType(),MediaType.APPLICATION_OCTET_STREAM);
    assertEquals(jsResultObject.getKey(),requestObject.getKey());
    assertEquals(jsResultObject.getContentLength(),0);
    assertEquals(jsResultObject.getContentType(),MediaType.APPLICATION_OCTET_STREAM);
    requestObject=new S3Object("?n???d?-object");
    jsResultObject=service.putObject(new S3Bucket(bucketName),requestObject);
    jcObject=client.getObject(bucketName,requestObject.getKey()).get(10,TimeUnit.SECONDS);
    assertEquals(jcObject.getKey(),requestObject.getKey());
    assertEquals(jcObject.getMetadata().getSize(),0);
    assertEquals(jcObject.getMetadata().getContentType(),MediaType.APPLICATION_OCTET_STREAM);
    assertEquals(jsResultObject.getKey(),requestObject.getKey());
    assertEquals(jsResultObject.getContentLength(),0);
    assertEquals(jsResultObject.getContentType(),MediaType.APPLICATION_OCTET_STREAM);
    String data="This is my ?n???d? data";
    requestObject=new S3Object(objectKey,data);
    jsResultObject=service.putObject(new S3Bucket(bucketName),requestObject);
    jcObject=client.getObject(bucketName,objectKey).get(10,TimeUnit.SECONDS);
    assertEquals(jcObject.getMetadata().getSize(),data.getBytes("UTF-8").length);
    assertTrue(jcObject.getMetadata().getContentType().startsWith("text/plain"));
    assertEquals(jsResultObject.getContentLength(),data.getBytes("UTF-8").length);
    assertTrue(jsResultObject.getContentType().startsWith("text/plain"));
    requestObject=new S3Object(objectKey);
    requestObject.addMetadata(S3Constants.USER_METADATA_PREFIX + "my-metadata-1","value-1");
    jsResultObject=service.putObject(new S3Bucket(bucketName),requestObject);
    jcObject=client.getObject(bucketName,objectKey).get(10,TimeUnit.SECONDS);
    assertEquals(Iterables.getLast(jcObject.getMetadata().getUserMetadata().get(S3Constants.USER_METADATA_PREFIX + "my-metadata-1")),"value-1");
    assertEquals(jsResultObject.getMetadata(S3Constants.USER_METADATA_PREFIX + "my-metadata-1"),"value-1");
    requestObject=new S3Object(objectKey);
    requestObject.setAcl(AccessControlList.REST_CANNED_PUBLIC_READ);
    jsResultObject=service.putObject(new S3Bucket(bucketName),requestObject);
    org.jclouds.aws.s3.domain.AccessControlList jcACL=client.getObjectACL(bucketName,objectKey).get(10,TimeUnit.SECONDS);
    assertTrue(jcACL.hasPermission(GroupGranteeURI.ALL_USERS,Permission.READ));
    assertTrue(jcACL.hasPermission(jcACL.getOwner().getId(),Permission.FULL_CONTROL));
    assertEquals(jcACL.getGrants().size(),2);
    requestObject=new S3Object(objectKey);
    data="Here is some d?t? for you";
    requestObject.setDataInputStream(new ByteArrayInputStream(data.getBytes("UTF-8")));
    jsResultObject=service.putObject(new S3Bucket(bucketName),requestObject);
    jcObject=client.getObject(bucketName,objectKey).get(10,TimeUnit.SECONDS);
    assertTrue(jsResultObject.verifyData(data.getBytes("UTF-8")));
    assertEquals(jsResultObject.getMd5HashAsHex(),HttpUtils.toHexString(jcObject.getMetadata().getETag()));
  }
  finally {
    returnBucket(bucketName);
  }
}
