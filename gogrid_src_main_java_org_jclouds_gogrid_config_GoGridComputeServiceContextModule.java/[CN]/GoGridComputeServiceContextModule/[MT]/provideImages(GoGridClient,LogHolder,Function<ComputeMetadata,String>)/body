{
  final Set<Image> images=Sets.newHashSet();
  holder.logger.debug(">> providing images");
  Set<ServerImage> allImages=sync.getImageServices().getImageList();
  for (  ServerImage from : allImages) {
    OsFamily os=null;
    Architecture arch=(from.getDescription().indexOf("64") == -1 && from.getOs().getName().indexOf("64") == -1) ? Architecture.X86_32 : Architecture.X86_64;
    String osDescription;
    String version="";
    osDescription=from.getOs().getName();
    String matchedOs=GoGridUtils.parseStringByPatternAndGetNthMatchGroup(from.getOs().getName(),GOGRID_OS_NAME_PATTERN,1);
    try {
      os=OsFamily.fromValue(matchedOs.toLowerCase());
    }
 catch (    IllegalArgumentException e) {
      holder.logger.debug("<< didn't match os(%s)",matchedOs);
    }
    version=GoGridUtils.parseStringByPatternAndGetNthMatchGroup(from.getOs().getName(),GOGRID_OS_VERSION_PATTERN,2);
    images.add(new ImageImpl(from.getName(),from.getDescription(),null,null,ImmutableMap.<String,String>of(),from.getDescription(),version,os,osDescription,arch));
  }
  holder.logger.debug("<< images(%d)",images.size());
  return Maps.uniqueIndex(images,indexer);
}
