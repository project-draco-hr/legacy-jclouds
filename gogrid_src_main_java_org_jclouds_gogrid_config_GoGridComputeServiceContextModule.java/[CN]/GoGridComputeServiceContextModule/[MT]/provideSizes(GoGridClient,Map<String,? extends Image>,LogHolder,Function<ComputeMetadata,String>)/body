{
  final Set<Size> sizes=Sets.newHashSet();
  holder.logger.debug(">> providing sizes");
  sizes.add(new SizeImpl("1","1",null,null,ImmutableMap.<String,String>of(),0,512,0,ImmutableSet.<Architecture>of(Architecture.X86_32,Architecture.X86_64)));
  sizes.add(new SizeImpl("2","2",null,null,ImmutableMap.<String,String>of(),0,1024,0,ImmutableSet.<Architecture>of(Architecture.X86_32,Architecture.X86_64)));
  sizes.add(new SizeImpl("3","3",null,null,ImmutableMap.<String,String>of(),0,2048,0,ImmutableSet.<Architecture>of(Architecture.X86_32,Architecture.X86_64)));
  sizes.add(new SizeImpl("4","4",null,null,ImmutableMap.<String,String>of(),0,4096,0,ImmutableSet.<Architecture>of(Architecture.X86_32,Architecture.X86_64)));
  sizes.add(new SizeImpl("5","5",null,null,ImmutableMap.<String,String>of(),0,8192,0,ImmutableSet.<Architecture>of(Architecture.X86_32,Architecture.X86_64)));
  holder.logger.debug("<< sizes(%d)",sizes.size());
  return Maps.uniqueIndex(sizes,indexer);
}
