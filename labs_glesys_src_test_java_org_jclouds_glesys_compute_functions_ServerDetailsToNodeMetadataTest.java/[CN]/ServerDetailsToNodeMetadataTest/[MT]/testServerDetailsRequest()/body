{
  ServerDetailsToNodeMetadata toTest=injectorForKnownArgumentsAndConstantPassword(ImmutableMap.<HttpRequest,HttpResponse>builder().put(HttpRequest.builder().method("POST").endpoint(URI.create("https://api.glesys.com/server/details/format/json")).headers(ImmutableMultimap.<String,String>builder().put("Accept","application/json").put("Authorization","Basic aWRlbnRpdHk6Y3JlZGVudGlhbA==").build()).payload(newUrlEncodedFormPayload(ImmutableMultimap.<String,String>builder().put("serverid","xm3276891").build())).build(),HttpResponse.builder().statusCode(200).payload(payloadFromResource("/server_details.json")).build()).build()).getInstance(ServerDetailsToNodeMetadata.class);
  NodeMetadata actual=toTest.apply(ServerClientExpectTest.expectedServerDetails());
  assertNotNull(actual);
  assertEquals(actual.toString(),new NodeMetadataBuilder().ids("vz1840356").name("test-email-jclouds").hostname("test-email-jclouds").group("glesys-s").imageId("Ubuntu 10.04 LTS 32-bit").operatingSystem(OperatingSystem.builder().name("Ubuntu 10.04 LTS 32-bit").family(OsFamily.UBUNTU).version("10.04").is64Bit(false).description("Ubuntu 10.04 LTS 32-bit").build()).publicAddresses(ImmutableSet.of("31.192.231.254")).hardware(new HardwareBuilder().ids("vz1840356").ram(512).processors(ImmutableList.of(new Processor(1,1.0))).volumes(ImmutableList.<Volume>of(new VolumeImpl(5f,true,true))).hypervisor("OpenVZ").build()).status(Status.RUNNING).build().toString());
}
