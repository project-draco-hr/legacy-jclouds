{
  if (from.size() == 0)   return null;
  ServerInfo.Builder builder=new ServerInfo.Builder();
  builder.name(from.get("name"));
  builder.description(from.get("description"));
  builder.persistent(Boolean.parseBoolean(from.get("persistent")));
  if (from.containsKey("use"))   builder.tags(Splitter.on(' ').split(from.get("use")));
  if (from.containsKey("status"))   builder.status(ServerStatus.fromValue(from.get("status")));
  if (from.containsKey("smp") && !"auto".equals(from.get("smp")))   builder.smp(new Integer(from.get("smp")));
  builder.cpu(Integer.parseInt(from.get("cpu")));
  builder.mem(Integer.parseInt(from.get("mem")));
  builder.user(from.get("user"));
  if (from.containsKey("started"))   builder.started(new Date(new Long(from.get("started"))));
  builder.uuid(from.get("server"));
  builder.vnc(new VNC(from.get("vnc:ip"),from.get("vnc:password"),from.containsKey("vnc:tls") && Boolean.valueOf(from.get("vnc:tls"))));
  if (from.containsKey("boot"))   builder.bootDeviceIds(Splitter.on(' ').split(from.get("boot")));
  Map<String,String> metadata=Maps.newLinkedHashMap();
  for (  Entry<String,String> entry : from.entrySet()) {
    if (entry.getKey().startsWith("user:"))     metadata.put(entry.getKey().substring(entry.getKey().indexOf(':') + 1),entry.getValue());
  }
  builder.userMetadata(metadata);
  builder.nics(mapToNICs.apply(from));
  builder.devices(mapToDevices.apply(from));
  builder.metrics(mapToMetrics.apply(from));
  return builder.build();
}
