{
  final Set<Image> images=Sets.newHashSet();
  holder.logger.debug(">> providing images");
  for (  final org.jclouds.slicehost.domain.Image from : sync.listImages()) {
    OsFamily os=null;
    Architecture arch=Architecture.X86_64;
    String osDescription="";
    String version="";
    Matcher matcher=SLICEHOST_PATTERN.matcher(from.getName());
    osDescription=from.getName();
    if (matcher.find()) {
      try {
        os=OsFamily.fromValue(matcher.group(2).toLowerCase());
      }
 catch (      IllegalArgumentException e) {
        holder.logger.debug("<< didn't match os(%s)",matcher.group(2));
      }
    }
    images.add(new ImageImpl(from.getId() + "",from.getName(),from.getId() + "",location,null,ImmutableMap.<String,String>of(),from.getName(),version,os,osDescription,arch,new Credentials("root",null)));
  }
  holder.logger.debug("<< images(%d)",images.size());
  return images;
}
