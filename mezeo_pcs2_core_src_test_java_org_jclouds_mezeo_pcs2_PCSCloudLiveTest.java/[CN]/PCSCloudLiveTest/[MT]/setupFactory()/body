{
  injector=Guice.createInjector(new AbstractModule(){
    @Override protected void configure(){
      bind(URI.class).annotatedWith(PCS.class).toInstance(endpoint);
      bind(Logger.LoggerFactory.class).toInstance(new LoggerFactory(){
        public Logger getLogger(        String category){
          return Logger.NULL;
        }
      }
);
    }
    @SuppressWarnings("unused") @Provides @Singleton public BasicAuthentication provideBasicAuthentication(    EncryptionService encryptionService) throws UnsupportedEncodingException {
      return new BasicAuthentication(user,password,encryptionService);
    }
    @SuppressWarnings("unused") @Provides @Singleton protected PCSCloud provideCloud(    RestClientFactory factory){
      return factory.create(PCSCloud.class);
    }
  }
,new RestModule(),new ExecutorServiceModule(sameThreadExecutor(),sameThreadExecutor()),new JavaUrlHttpCommandExecutorServiceModule());
}
