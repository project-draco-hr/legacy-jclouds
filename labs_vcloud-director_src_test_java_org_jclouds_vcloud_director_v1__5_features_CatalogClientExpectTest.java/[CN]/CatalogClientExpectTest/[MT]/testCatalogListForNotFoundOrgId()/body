{
  HttpRequest catalogRequest=HttpRequest.builder().method("GET").endpoint(URI.create(endpoint + "/catalogsList/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee")).headers(ImmutableMultimap.<String,String>builder().put("Accept","*/*").put("x-vcloud-authorization",token).build()).build();
  HttpResponse catalogResponse=HttpResponse.builder().statusCode(403).payload(payloadFromResourceWithContentType("/catalog/error403.xml",VCloudDirectorMediaType.ERROR + ";version=1.5")).build();
  VCloudDirectorClient client=requestsSendResponses(loginRequest,sessionResponse,catalogRequest,catalogResponse);
  Error expected=Error.builder().message("No access to entity \"com.vmware.vcloud.entity.org:aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\".").majorErrorCode(403).minorErrorCode("ACCESS_TO_RESOURCE_IS_FORBIDDEN").build();
  Reference orgRef=Reference.builder().href(URI.create("https://vcloudbeta.bluelock.com/api/org/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee")).build();
  try {
    client.getCatalogClient().getCatalogList(orgRef);
    fail("Should give HTTP 400 error");
  }
 catch (  VCloudDirectorException vde) {
    assertEquals(vde.getError(),expected);
  }
catch (  Exception e) {
    fail("Should have thrown a VCloudDirectorException");
  }
}
