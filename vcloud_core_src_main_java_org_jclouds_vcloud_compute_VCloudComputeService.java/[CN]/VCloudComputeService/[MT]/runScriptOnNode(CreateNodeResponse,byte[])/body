{
  InetSocketAddress socket=new InetSocketAddress(node.getPublicAddresses().last(),node.getLoginPort());
  socketTester.apply(socket);
  SshClient ssh=isKeyBasedAuth(node) ? sshFactory.create(socket,node.getCredentials().account,node.getCredentials().key.getBytes()) : sshFactory.create(socket,node.getCredentials().account,node.getCredentials().key);
  try {
    ssh.connect();
    String scriptName=node.getId() + ".sh";
    ssh.put(scriptName,new ByteArrayInputStream(script));
    ssh.exec("chmod 755 " + scriptName);
    if (node.getCredentials().account.equals("root")) {
      logger.debug(">> running %s as %s",scriptName,node.getCredentials().account);
      logger.debug("<< complete(%d)",ssh.exec("./" + scriptName).getExitCode());
    }
 else     if (isKeyBasedAuth(node)) {
      logger.debug(">> running sudo %s as %s",scriptName,node.getCredentials().account);
      logger.debug("<< complete(%d)",ssh.exec("sudo ./" + scriptName).getExitCode());
    }
 else {
      logger.debug(">> running sudo -S %s as %s",scriptName,node.getCredentials().account);
      logger.debug("<< complete(%d)",ssh.exec(String.format("echo %s|sudo -S ./%s",node.getCredentials().key,scriptName)).getExitCode());
    }
  }
  finally {
    if (ssh != null)     ssh.disconnect();
  }
}
