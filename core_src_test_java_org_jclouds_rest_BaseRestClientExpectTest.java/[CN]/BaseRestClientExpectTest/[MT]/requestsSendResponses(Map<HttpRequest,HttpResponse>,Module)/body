{
  return createClient(new Function<HttpRequest,HttpResponse>(){
    ImmutableBiMap<HttpRequest,HttpResponse> bimap=ImmutableBiMap.copyOf(requestToResponse);
    @Override public HttpResponse apply(    HttpRequest input){
      if (!(requestToResponse.containsKey(input))) {
        StringBuilder payload=new StringBuilder("\n");
        payload.append("the following request is not configured:\n");
        payload.append("----------------------------------------\n");
        payload.append(renderRequest(input));
        payload.append("----------------------------------------\n");
        payload.append("configured requests:\n");
        for (        HttpRequest request : requestToResponse.keySet()) {
          payload.append("----------------------------------------\n");
          payload.append(renderRequest(request));
        }
        return HttpResponse.builder().statusCode(500).message("no response configured for request").payload(Payloads.newStringPayload(payload.toString())).build();
      }
      HttpResponse response=requestToResponse.get(input);
      assertEquals(renderRequest(input),renderRequest(bimap.inverse().get(response)));
      return response;
    }
  }
,module);
}
