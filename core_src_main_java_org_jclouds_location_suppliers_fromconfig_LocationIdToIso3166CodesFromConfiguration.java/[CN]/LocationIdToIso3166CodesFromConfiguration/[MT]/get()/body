{
  Map<String,String> stringsBoundWithRegionOrZonePrefix=filterStringsBoundByName.apply(new Predicate<String>(){
    @Override public boolean apply(    String input){
      return (input.startsWith(PROPERTY_REGION) || input.startsWith(PROPERTY_ZONE));
    }
  }
);
  Builder<String,Supplier<Set<String>>> codes=ImmutableMap.builder();
  for (  String key : ImmutableSet.of(PROPERTY_REGION,PROPERTY_ZONE)) {
    String regionOrZoneString=stringsBoundWithRegionOrZonePrefix.get(key + "s");
    if (regionOrZoneString == null)     continue;
    for (    String region : Splitter.on(',').split(regionOrZoneString)) {
      String isoCodes=stringsBoundWithRegionOrZonePrefix.get(key + "." + region+ "."+ ISO3166_CODES);
      if (isoCodes != null)       codes.put(region,Suppliers.<Set<String>>ofInstance(ImmutableSet.copyOf(Splitter.on(',').split(isoCodes))));
    }
  }
  return codes.build();
}
