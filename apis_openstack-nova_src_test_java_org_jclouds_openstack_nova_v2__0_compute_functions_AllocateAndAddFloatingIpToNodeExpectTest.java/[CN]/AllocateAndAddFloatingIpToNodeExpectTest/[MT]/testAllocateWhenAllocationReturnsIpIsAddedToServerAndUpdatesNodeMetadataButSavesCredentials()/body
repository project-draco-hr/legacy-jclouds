{
  HttpResponse createFloatingIPResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResource("/floatingip_details.json")).build();
  HttpRequest addFloatingIPRequest=addFloatingIPForAddress("10.0.0.3");
  AllocateAndAddFloatingIpToNode fn=requestsSendResponses(ImmutableMap.<HttpRequest,HttpResponse>builder().put(keystoneAuthWithUsernameAndPasswordAndTenantName,responseWithKeystoneAccess).put(extensionsOfNovaRequest,extensionsOfNovaResponse).put(createFloatingIP,createFloatingIPResponse).put(addFloatingIPRequest,addFloatingIPResponse).build()).getContext().utils().injector().getInstance(AllocateAndAddFloatingIpToNode.class);
  AtomicReference<NodeMetadata> nodeRef=Atomics.newReference(node);
  fn.apply(nodeRef);
  NodeMetadata node1=nodeRef.get();
  assertNotNull(node1);
  assertEquals(node1.getPublicAddresses(),ImmutableSet.of("10.0.0.3"));
  assertEquals(node1.getCredentials(),node.getCredentials());
}
