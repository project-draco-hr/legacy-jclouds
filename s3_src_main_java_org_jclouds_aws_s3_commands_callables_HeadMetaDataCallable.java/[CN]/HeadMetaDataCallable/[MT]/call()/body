{
  if (getResponse().getStatusCode() == 200) {
    S3Object.MetaData metaData=new S3Object.MetaData(key);
    String md5Header=getResponse().getFirstHeaderOrNull("x-amz-meta-object-md5");
    if (md5Header != null) {
      metaData.setMd5(S3Utils.fromHexString(md5Header));
    }
    metaData.setLastModified(dateParser.dateTimeFromHeaderFormat(getResponse().getFirstHeaderOrNull("Last-Modified")));
    String eTag=getResponse().getFirstHeaderOrNull("ETag");
    if (eTag != null) {
      metaData.setMd5(S3Utils.fromHexString(eTag.replaceAll("\"","")));
    }
    metaData.setContentType(getResponse().getFirstHeaderOrNull("Content-Type"));
    metaData.setSize(Long.parseLong(getResponse().getFirstHeaderOrNull("Content-Length")));
    metaData.setServer(getResponse().getFirstHeaderOrNull("Server"));
    return metaData;
  }
 else   if (getResponse().getStatusCode() == 404) {
    return S3Object.MetaData.NOT_FOUND;
  }
 else {
    String reason=null;
    try {
      reason=Utils.toStringAndClose(getResponse().getContent());
    }
 catch (    IOException e) {
      logger.error(e,"error parsing reason");
    }
    throw new HttpException("Error parsing object " + getResponse() + " reason: "+ reason);
  }
}
