{
  if (available.size() < size) {
    if (poolNodes.size() + size > maxSize) {
      throw new IllegalStateException("not enough nodes available  and cannot add enough nodes to pool [available: " + available.size() + " total: "+ poolNodes.size()+ " min: "+ minSize+ " max: "+ maxSize+ " requested: "+ size+ "]");
    }
    increasePoolSize(size - available.size()).get();
  }
  Set<NodeMetadata> groupNodes=Sets.newHashSet();
  Iterator<NodeMetadata> iter=available.iterator();
  for (int i=0; i < size && iter.hasNext(); i++) {
    NodeMetadata node=iter.next();
    assignments.put(groupName,node);
    iter.remove();
    groupNodes.add(toFrontendNodemetadata(node,groupName));
  }
  return groupNodes;
}
