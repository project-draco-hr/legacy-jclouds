{
  checkArgument(tag.indexOf('-') == -1,"tag cannot contain hyphens");
  logger.debug(">> running server image(%s) flavor(%s)",template.getImage().getId(),template.getSize().getId());
  final Set<NodeMetadata> nodes=Sets.newHashSet();
  Set<ListenableFuture<Void>> responses=Sets.newHashSet();
  for (int i=0; i < max; i++) {
    final String name=String.format("%s-%s-%d",account,tag,i + 1);
    responses.add(ConcurrentUtils.makeListenable(executor.submit(new Callable<Void>(){
      @Override public Void call() throws Exception {
        Server server=client.createServer(name,Integer.parseInt(template.getImage().getId()),Integer.parseInt(template.getSize().getId()));
        NodeMetadata node=new NodeMetadataImpl(server.getId() + "",name,null,null,server.getMetadata(),tag,NodeState.RUNNING,server.getAddresses().getPublicAddresses(),server.getAddresses().getPrivateAddresses(),ImmutableMap.<String,String>of(),new Credentials("root",server.getAdminPass()));
        nodes.add(node);
        logger.debug("<< started server(%s)",server.getId());
        serverActive.apply(server);
        logger.debug("<< running server(%s)",server.getId());
        if (template.getOptions().getRunScript() != null) {
          utils.runScriptOnNode(node,template.getOptions().getRunScript());
        }
        return null;
      }
    }
),executor));
  }
  ConcurrentUtils.awaitCompletion(responses,executor,null,logger,"nodes");
  return new NodeSetImpl(nodes);
}
