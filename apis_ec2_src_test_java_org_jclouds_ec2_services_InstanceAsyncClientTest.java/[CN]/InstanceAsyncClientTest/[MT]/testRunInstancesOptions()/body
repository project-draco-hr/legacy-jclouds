{
  Method method=InstanceAsyncClient.class.getMethod("runInstancesInRegion",String.class,String.class,String.class,int.class,int.class,Array.newInstance(RunInstancesOptions.class,0).getClass());
  HttpRequest request=processor.createRequest(method,"eu-west-1","eu-west-1a","ami-voo",1,5,new RunInstancesOptions().withKernelId("kernelId").withSecurityGroups("group1","group2"));
  assertRequestLineEquals(request,"POST https://ec2.eu-west-1.amazonaws.com/ HTTP/1.1");
  assertNonPayloadHeadersEqual(request,"Host: ec2.eu-west-1.amazonaws.com\n");
  try {
    assertPayloadEquals(request,"Action=RunInstances&ImageId=ami-voo&MinCount=1&MaxCount=5&KernelId=kernelId&SecurityGroup.1=group1&SecurityGroup.2=group2&Placement.AvailabilityZone=eu-west-1a","application/x-www-form-urlencoded",false);
  }
 catch (  AssertionError e) {
    assertPayloadEquals(request,"Action=RunInstances&ImageId=ami-voo&MaxCount=5&MinCount=1&KernelId=kernelId&SecurityGroup.1=group1&SecurityGroup.2=group2&Placement.AvailabilityZone=eu-west-1a","application/x-www-form-urlencoded",false);
  }
  assertResponseParserClassEquals(method,request,ParseSax.class);
  assertSaxResponseParserClassEquals(method,RunInstancesResponseHandler.class);
  assertFallbackClassEquals(method,null);
  checkFilters(request);
}
