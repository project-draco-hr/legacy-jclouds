{
  InputStream is=getClass().getResourceAsStream("/listnetworkofferingsresponse.json");
  Set<NetworkOffering> expects=ImmutableSortedSet.<NetworkOffering>of(NetworkOffering.builder().id(6).name("DefaultVirtualizedNetworkOffering").displayText("Virtual Vlan").trafficType(TrafficType.GUEST).isDefault(true).supportsVLAN(false).availability("Required").networkRate(200).build(),NetworkOffering.builder().id(7).name("DefaultDirectNetworkOffering").displayText("Direct").trafficType(TrafficType.PUBLIC).isDefault(true).supportsVLAN(false).availability("Required").networkRate(200).build());
  UnwrapOnlyNestedJsonValue<Set<NetworkOffering>> parser=i.getInstance(Key.get(new TypeLiteral<UnwrapOnlyNestedJsonValue<Set<NetworkOffering>>>(){
  }
));
  Set<NetworkOffering> response=parser.apply(new HttpResponse(200,"ok",Payloads.newInputStreamPayload(is)));
  assertEquals(Sets.newTreeSet(response),expects);
}
