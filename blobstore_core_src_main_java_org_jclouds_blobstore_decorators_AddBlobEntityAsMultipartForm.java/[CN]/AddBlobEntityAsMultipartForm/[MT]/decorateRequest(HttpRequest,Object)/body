{
  Blob<?> object=(Blob<?>)entity;
  Key key=BlobStoreUtils.parseKey(new Key("junk",object.getKey()));
  Multimap<String,String> partHeaders=ImmutableMultimap.of("Content-Disposition",String.format("form-data; name=\"%s\"; filename=\"%s\"",key.getKey(),key.getKey()),HttpHeaders.CONTENT_TYPE,checkNotNull(object.getMetadata().getContentType(),"object.metadata.contentType()"));
  Object data=checkNotNull(object.getData(),"object.getData()");
  Part part;
  try {
    if (data instanceof byte[]) {
      part=new Part(partHeaders,(byte[])data);
    }
 else     if (data instanceof String) {
      part=new Part(partHeaders,(String)data);
    }
 else     if (data instanceof File) {
      part=new Part(partHeaders,(File)data);
    }
 else     if (data instanceof InputStream) {
      part=new Part(partHeaders,(InputStream)data,object.getContentLength());
    }
 else {
      throw new IllegalArgumentException("type of part not supported: " + data.getClass().getCanonicalName() + "; "+ object);
    }
  }
 catch (  FileNotFoundException e) {
    throw new IllegalArgumentException("file for part not found: " + object);
  }
  MultipartForm form=new MultipartForm(BOUNDARY,part);
  request.setEntity(form.getData());
  request.getHeaders().put(HttpHeaders.CONTENT_TYPE,"multipart/form-data; boundary=" + BOUNDARY);
  request.getHeaders().put(HttpHeaders.CONTENT_LENGTH,form.getSize() + "");
  return request;
}
