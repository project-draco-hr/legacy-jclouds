{
  ParameterizedTypeHandlerMap<JsonSerializer<?>> map=new ParameterizedTypeHandlerMap<JsonSerializer<?>>();
  map.registerForTypeHierarchy(Enum.class,ENUM_TYPE_ADAPTER);
  map.register(URL.class,URL_TYPE_ADAPTER);
  map.register(URI.class,URI_TYPE_ADAPTER);
  map.register(UUID.class,UUUID_TYPE_ADAPTER);
  map.register(Locale.class,LOCALE_TYPE_ADAPTER);
  map.registerForTypeHierarchy(Collection.class,COLLECTION_TYPE_ADAPTER);
  map.registerForTypeHierarchy(Map.class,MAP_TYPE_ADAPTER);
  map.register(Date.class,DATE_TYPE_ADAPTER);
  map.register(java.sql.Date.class,JAVA_SQL_DATE_TYPE_ADAPTER);
  map.register(Timestamp.class,DATE_TYPE_ADAPTER);
  map.register(Time.class,TIME_TYPE_ADAPTER);
  map.register(Calendar.class,GREGORIAN_CALENDAR_TYPE_ADAPTER);
  map.register(GregorianCalendar.class,GREGORIAN_CALENDAR_TYPE_ADAPTER);
  map.register(BigDecimal.class,BIG_DECIMAL_TYPE_ADAPTER);
  map.register(BigInteger.class,BIG_INTEGER_TYPE_ADAPTER);
  map.register(Boolean.class,BOOLEAN_TYPE_ADAPTER);
  map.register(boolean.class,BOOLEAN_TYPE_ADAPTER);
  map.register(Byte.class,BYTE_TYPE_ADAPTER);
  map.register(byte.class,BYTE_TYPE_ADAPTER);
  map.register(Character.class,CHARACTER_TYPE_ADAPTER);
  map.register(char.class,CHARACTER_TYPE_ADAPTER);
  map.register(Integer.class,INTEGER_TYPE_ADAPTER);
  map.register(int.class,INTEGER_TYPE_ADAPTER);
  map.register(Number.class,NUMBER_TYPE_ADAPTER);
  map.register(Short.class,SHORT_TYPE_ADAPTER);
  map.register(short.class,SHORT_TYPE_ADAPTER);
  map.register(String.class,STRING_TYPE_ADAPTER);
  map.makeUnmodifiable();
  return map;
}
