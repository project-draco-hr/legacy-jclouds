{
  if (masters.containsKey(key.getId())) {
    return masters.get(key.getId());
  }
  String guestAdditionsFileName=String.format("VBoxGuestAdditions_%s.iso",version);
  String guestAdditionsIso=String.format("%s/%s",isosDir,guestAdditionsFileName);
  String guestAdditionsUri="http://download.virtualbox.org/virtualbox/" + version + "/"+ guestAdditionsFileName;
  if (!new File(guestAdditionsIso).exists()) {
    getFilePathOrDownload(guestAdditionsUri);
  }
  checkState(new File(guestAdditionsIso).exists(),"guest additions iso does not exist at: " + guestAdditionsIso);
  YamlImage yamlImage=imageMapping.get(key.getId());
  checkNotNull(yamlImage,"could not find yaml image for image: " + key);
  String localIsoUrl=getFilePathOrDownload(yamlImage.iso);
  String vmName=VIRTUALBOX_IMAGE_PREFIX + yamlImage.id;
  String adminDisk=workingDir + File.separator + vmName+ ".vdi";
  HardDisk hardDisk=HardDisk.builder().diskpath(adminDisk).autoDelete(true).controllerPort(0).deviceSlot(1).build();
  StorageController ideController=StorageController.builder().name("IDE Controller").bus(StorageBus.IDE).attachISO(0,0,localIsoUrl).attachHardDisk(hardDisk).attachISO(1,1,guestAdditionsIso).build();
  VmSpec vmSpecification=VmSpec.builder().id(yamlImage.id).name(vmName).memoryMB(512).osTypeId("").controller(ideController).forceOverwrite(true).cleanUpMode(CleanupMode.Full).build();
  NetworkAdapter networkAdapter=NetworkAdapter.builder().networkAttachmentType(NetworkAttachmentType.NAT).tcpRedirectRule("127.0.0.1",MASTER_PORT,"",22).build();
  NetworkInterfaceCard networkInterfaceCard=NetworkInterfaceCard.builder().addNetworkAdapter(networkAdapter).slot(0L).build();
  NetworkSpec networkSpec=NetworkSpec.builder().addNIC(networkInterfaceCard).build();
  MasterSpec masterSpec=MasterSpec.builder().vm(vmSpecification).iso(IsoSpec.builder().sourcePath(localIsoUrl).installationScript(installationKeySequence.replace("HOSTNAME",vmSpecification.getVmName())).build()).network(networkSpec).build();
  IMachine masterMachine;
  try {
    masterMachine=manager.get().getVBox().findMachine(vmName);
  }
 catch (  VBoxException e) {
    if (machineNotFoundException(e)) {
      masterMachine=masterCreatorAndInstaller.apply(masterSpec);
    }
 else {
      throw e;
    }
  }
  Master master=Master.builder().machine(masterMachine).spec(masterSpec).build();
  masters.put(key.getId(),master);
  return master;
}
