{
  checkNotNull(template,"template was null");
  checkNotNull(template.getOptions(),"template options was null");
  checkArgument(template.getOptions().getClass().isAssignableFrom(SoftLayerTemplateOptions.class),"options class %s should have been assignable from SoftLayerTemplateOptions",template.getOptions().getClass());
  String domainName=template.getOptions().as(SoftLayerTemplateOptions.class).getDomainName();
  VirtualGuest newGuest=VirtualGuest.builder().domain(domainName).hostname(name).build();
  ProductOrder order=ProductOrder.builder().packageId(getProductPackage().getId()).location(template.getLocation().getId()).quantity(1).useHourlyPricing(true).prices(getPrices(template)).virtualGuest(newGuest).build();
  client.getVirtualGuestClient().orderVirtualGuest(order);
  boolean orderInSystem=orderTester.apply(newGuest);
  checkState(orderInSystem,"order for guest %s didn't complete within %dms",newGuest,guestOrderDelay);
  Iterable<VirtualGuest> allGuests=client.getVirtualGuestClient().listVirtualGuests();
  VirtualGuest result=SoftLayerUtils.findVirtualGuest(allGuests,name,domainName);
  Credentials credentials=new Credentials(null,null);
  OperatingSystem os=result.getOperatingSystem();
  if (os != null) {
    Set<Password> passwords=os.getPasswords();
    if (passwords.size() > 0) {
      Password pw=Iterables.get(passwords,0);
      credentials=new Credentials(pw.getUsername(),pw.getPassword());
    }
  }
  credentialStore.put("node#" + result.getId(),credentials);
  return result;
}
