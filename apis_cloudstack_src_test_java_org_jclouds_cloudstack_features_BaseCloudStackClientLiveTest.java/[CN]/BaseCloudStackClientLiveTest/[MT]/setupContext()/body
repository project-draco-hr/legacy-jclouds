{
  super.setupContext();
  computeClient=context.getComputeService();
  cloudStackContext=context.unwrap();
  client=cloudStackContext.getApi();
  user=verifyCurrentUserIsOfType(cloudStackContext,Account.Type.USER);
  domainAdminEnabled=setupDomainAdminProperties() != null;
  if (domainAdminEnabled) {
    domainAdminComputeContext=createContext(setupDomainAdminProperties(),setupModules()).unwrap();
    domainAdminContext=domainAdminComputeContext.getDomainContext();
    domainAdminClient=domainAdminContext.getApi();
    domainAdminUser=verifyCurrentUserIsOfType(domainAdminContext,Account.Type.DOMAIN_ADMIN);
    adminClient=domainAdminContext.getApi();
  }
  globalAdminEnabled=setupGlobalAdminProperties() != null;
  if (globalAdminEnabled) {
    globalAdminComputeContext=createContext(setupGlobalAdminProperties(),setupModules()).unwrap();
    globalAdminContext=globalAdminComputeContext.getGlobalContext();
    globalAdminClient=globalAdminContext.getApi();
    globalAdminUser=verifyCurrentUserIsOfType(globalAdminContext,Account.Type.ADMIN);
    adminClient=globalAdminContext.getApi();
  }
  injector=Guice.createInjector(setupModules());
  sshFactory=injector.getInstance(SshClient.Factory.class);
  socketTester=new RetryablePredicate<IPSocket>(new InetSocketAddressConnect(),180,1,1,TimeUnit.SECONDS);
  injector.injectMembers(socketTester);
  jobComplete=new RetryablePredicate<Long>(new JobComplete(client),1200,1,5,TimeUnit.SECONDS);
  injector.injectMembers(jobComplete);
  adminJobComplete=new RetryablePredicate<Long>(new JobComplete(adminClient),1200,1,5,TimeUnit.SECONDS);
  injector.injectMembers(adminJobComplete);
  virtualMachineRunning=new RetryablePredicate<VirtualMachine>(new VirtualMachineRunning(client),600,5,5,TimeUnit.SECONDS);
  injector.injectMembers(virtualMachineRunning);
  adminVirtualMachineRunning=new RetryablePredicate<VirtualMachine>(new VirtualMachineRunning(adminClient),600,5,5,TimeUnit.SECONDS);
  injector.injectMembers(adminVirtualMachineRunning);
  virtualMachineDestroyed=new RetryablePredicate<VirtualMachine>(new VirtualMachineDestroyed(client),600,5,5,TimeUnit.SECONDS);
  injector.injectMembers(virtualMachineDestroyed);
  adminVirtualMachineDestroyed=new RetryablePredicate<VirtualMachine>(new VirtualMachineDestroyed(adminClient),600,5,5,TimeUnit.SECONDS);
  injector.injectMembers(adminVirtualMachineDestroyed);
  reuseOrAssociate=new ReuseOrAssociateNewPublicIPAddress(client,new BlockUntilJobCompletesAndReturnResult(client,jobComplete));
  injector.injectMembers(reuseOrAssociate);
}
