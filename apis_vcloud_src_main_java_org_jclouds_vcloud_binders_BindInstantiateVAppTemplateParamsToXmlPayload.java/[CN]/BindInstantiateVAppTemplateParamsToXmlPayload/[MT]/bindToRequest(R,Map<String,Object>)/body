{
  checkArgument(checkNotNull(request,"request") instanceof GeneratedHttpRequest,"this binder is only valid for GeneratedHttpRequests!");
  GeneratedHttpRequest gRequest=(GeneratedHttpRequest)request;
  checkState(gRequest.getArgs() != null,"args should be initialized at this point");
  String name=checkNotNull(postParams.remove("name"),"name").toString();
  URI template=URI.create(checkNotNull(postParams.remove("template"),"template").toString());
  Set<NetworkConfig> networkConfig=null;
  NetworkConfigDecorator networkConfigDecorator=new NetworkConfigDecorator(templateCache.getUnchecked(template),defaultNetwork.get().getHref(),defaultFenceMode,defaultNetworkNameInTemplate);
  InstantiateVAppTemplateOptions options=findOptionsInArgsOrNull(gRequest);
  if (options != null) {
    if (options.getNetworkConfig().size() > 0)     networkConfig=ImmutableSet.copyOf(transform(options.getNetworkConfig(),networkConfigDecorator));
  }
 else {
    options=new InstantiateVAppTemplateOptions();
  }
  if (networkConfig == null)   networkConfig=ImmutableSet.of(networkConfigDecorator.apply(null));
  try {
    return stringBinder.bindToRequest(request,generateXml(name,options.getDescription(),options.shouldDeploy(),options.shouldPowerOn(),template,networkConfig));
  }
 catch (  ParserConfigurationException e) {
    throw new RuntimeException(e);
  }
catch (  FactoryConfigurationError e) {
    throw new RuntimeException(e);
  }
catch (  TransformerException e) {
    throw new RuntimeException(e);
  }
}
