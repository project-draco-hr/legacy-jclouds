{
  logger.debug(">> creating securityGroup name(%s)",name);
  try {
    ec2Client.getSecurityGroupServices().createSecurityGroupInRegion(region,name,name);
    logger.debug("<< created securityGroup(%s)",name);
    logger.debug(">> authorizing securityGroup name(%s) ports(%s)",name,Arrays.asList(ports));
    for (    int port : ports) {
      ec2Client.getSecurityGroupServices().authorizeSecurityGroupIngressInRegion(region,name,IpProtocol.TCP,port,port,"0.0.0.0/0");
    }
    logger.debug("<< authorized securityGroup(%s)",name);
  }
 catch (  AWSResponseException e) {
    if (e.getError().getCode().equals("InvalidGroup.Duplicate")) {
      logger.debug("<< reused securityGroup(%s)",name);
    }
 else {
      throw e;
    }
  }
}
