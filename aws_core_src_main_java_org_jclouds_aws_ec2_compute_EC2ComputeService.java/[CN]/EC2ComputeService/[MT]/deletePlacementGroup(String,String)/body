{
  checkNotEmpty(tag,"tag");
  String group=String.format("jclouds#%s#%s",tag,region);
  try {
    if (ec2Client.getPlacementGroupServices().describePlacementGroupsInRegion(region,group).size() > 0) {
      logger.debug(">> deleting placementGroup(%s)",group);
      try {
        ec2Client.getPlacementGroupServices().deletePlacementGroupInRegion(region,group);
        checkState(placementGroupDeleted.apply(new PlacementGroup(region,group,"cluster",State.PENDING)),String.format("placementGroup region(%s) name(%s) failed to delete",region,group));
        placementGroupMap.remove(new RegionAndName(region,group));
        logger.debug("<< deleted placementGroup(%s)",group);
      }
 catch (      AWSResponseException e) {
        if (e.getError().getCode().equals("InvalidPlacementGroup.InUse")) {
          logger.debug("<< inUse placementGroup(%s)",group);
        }
 else {
          throw e;
        }
      }
    }
  }
 catch (  UnsupportedOperationException e) {
  }
catch (  HttpResponseException e) {
    if (!(e.getResponse().getStatusCode() == 400 && context.getProviderSpecificContext().getProvider().equals("eucalyptus")))     throw e;
  }
}
