{
  checkArgument(template instanceof EC2Template,"unexpected template type. should be EC2Template, was: " + template.getClass());
  EC2Template ec2Template=(EC2Template)template;
  KeyPair keyPair=createKeyPairInRegion(ec2Template.getRegion(),name);
  String securityGroupName=name;
  createSecurityGroupInRegion(ec2Template.getRegion(),securityGroupName,options.getOpenPorts());
  logger.debug(">> running instance region(%s) ami(%s) type(%s) keyPair(%s) securityGroup(%s)",ec2Template.getRegion(),ec2Template.getImage().getId(),ec2Template.getSize().getInstanceType(),keyPair.getKeyName(),securityGroupName);
  RunInstancesOptions instanceOptions=withKeyName(keyPair.getKeyName()).asType(ec2Template.getSize().getInstanceType()).withSecurityGroup(securityGroupName).withAdditionalInfo(name);
  if (options.getRunScript() != null)   instanceOptions.withUserData(options.getRunScript());
  RunningInstance runningInstance=Iterables.getOnlyElement(ec2Client.getInstanceServices().runInstancesInRegion(ec2Template.getRegion(),null,ec2Template.getImage().getId(),1,1,instanceOptions));
  logger.debug("<< started instance(%s)",runningInstance.getId());
  instanceStateRunning.apply(runningInstance);
  logger.debug("<< running instance(%s)",runningInstance.getId());
  runningInstance=getOnlyRunningInstanceInRegion(ec2Template.getRegion(),runningInstance.getId());
  Set<InetAddress> publicAddresses=runningInstance.getIpAddress() == null ? ImmutableSet.<InetAddress>of() : ImmutableSet.<InetAddress>of(runningInstance.getIpAddress());
  Set<InetAddress> privateAddresses=runningInstance.getPrivateIpAddress() == null ? ImmutableSet.<InetAddress>of() : ImmutableSet.<InetAddress>of(runningInstance.getPrivateIpAddress());
  return new CreateNodeResponseImpl(runningInstance.getId(),name,runningInstance.getRegion().toString(),null,ImmutableMap.<String,String>of(),instanceToNodeState.get(runningInstance.getInstanceState()),publicAddresses,privateAddresses,22,LoginType.SSH,new Credentials(ec2Template.getImage().getOperatingSystem() == OperatingSystem.UBUNTU ? "ubuntu" : "root",keyPair.getKeyMaterial()),ImmutableMap.<String,String>of());
}
