{
  checkArgument(metadata.getType() == ComputeType.NODE,"this is only valid for nodes, not " + metadata.getType());
  checkNotNull(metadata.getId(),"node.id");
  NodeMetadata node=metadata instanceof NodeMetadata ? NodeMetadata.class.cast(metadata) : getNodeMetadata(metadata);
  String tag=checkNotNull(node.getTag(),"node.tag");
  Region region=getRegionFromNodeOrDefault(node);
  RunningInstance instance=getInstance(node,region);
  if (instance.getInstanceState() != InstanceState.TERMINATED) {
    logger.debug(">> terminating instance(%s)",node.getId());
    boolean success=false;
    while (!success) {
      ec2Client.getInstanceServices().terminateInstancesInRegion(region,node.getId());
      success=instanceStateTerminated.apply(getInstance(node,region));
    }
    logger.debug("<< terminated instance(%s) success(%s)",node.getId(),success);
  }
  if (Iterables.all(doGetNodes(tag),new Predicate<NodeMetadata>(){
    @Override public boolean apply(    NodeMetadata input){
      return input.getState() == NodeState.TERMINATED;
    }
  }
)) {
    deleteKeyPair(region,tag);
    deleteSecurityGroup(region,tag);
  }
}
