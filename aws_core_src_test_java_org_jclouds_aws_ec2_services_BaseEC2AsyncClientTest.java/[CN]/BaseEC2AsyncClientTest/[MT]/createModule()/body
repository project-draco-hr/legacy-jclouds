{
  return new AbstractModule(){
    @Override protected void configure(){
      Names.bindProperties(binder(),checkNotNull(new EC2PropertiesBuilder("user","key").build(),"properties"));
      bind(URI.class).annotatedWith(EC2.class).toInstance(URI.create("https://ec2.amazonaws.com"));
      bind(URI.class).annotatedWith(ELB.class).toInstance(URI.create("https://elasticloadbalancing.us-east-1.amazonaws.com"));
      bind(String.class).annotatedWith(EC2.class).toInstance(Region.US_EAST_1);
      bind(Logger.LoggerFactory.class).toInstance(new LoggerFactory(){
        public Logger getLogger(        String category){
          return Logger.NULL;
        }
      }
);
    }
    @SuppressWarnings("unused") @Provides @TimeStamp String provide(){
      return "2009-11-08T15:54:08.897Z";
    }
    @SuppressWarnings("unused") @Singleton @Provides @EC2 Map<String,URI> provideMap(){
      return ImmutableMap.<String,URI>of(Region.EU_WEST_1,URI.create("https://ec2.eu-west-1.amazonaws.com"),Region.US_EAST_1,URI.create("https://ec2.us-east-1.amazonaws.com"),Region.US_WEST_1,URI.create("https://ec2.us-west-1.amazonaws.com"));
    }
    @SuppressWarnings("unused") @Provides @Singleton @ELB Map<String,URI> provideELBRegions(){
      return ImmutableMap.<String,URI>of(Region.US_EAST_1,URI.create("https://elasticloadbalancing.us-east-1.amazonaws.com"),Region.US_WEST_1,URI.create("https://elasticloadbalancing.us-west-1.amazonaws.com"),Region.EU_WEST_1,URI.create("https://elasticloadbalancing.eu-west-1.amazonaws.com"),Region.AP_SOUTHEAST_1,URI.create("https://elasticloadbalancing.ap-southeast-1.amazonaws.com"));
    }
    @SuppressWarnings("unused") @Singleton @Provides Map<String,String> provideAvailabilityZoneRegionMap(){
      return ImmutableMap.<String,String>of(AvailabilityZone.US_EAST_1A,Region.US_EAST_1);
    }
  }
;
}
