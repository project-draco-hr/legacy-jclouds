{
  Iterable<Org> orgs=checkNotNull(orgMap.get().values(),"orgs");
  Iterable<? extends Iterable<VAppTemplate>> images=transformParallel(orgs,new Function<Org,ListenableFuture<? extends Iterable<VAppTemplate>>>(){
    public ListenableFuture<Iterable<VAppTemplate>> apply(    final Org from){
      checkNotNull(from,"org");
      return userExecutor.submit(new Callable<Iterable<VAppTemplate>>(){
        public Iterable<VAppTemplate> call() throws Exception {
          return imagesInOrg.apply(from);
        }
        public String toString(){
          return "imagesInOrg(" + from.getHref() + ")";
        }
      }
);
    }
  }
,userExecutor,null,logger,"images in " + orgs);
  return newLinkedHashSet(concat(images));
}
