{
  InputStream is=getClass().getResourceAsStream("/express/vdc.xml");
  Injector injector=Guice.createInjector(new SaxParserModule());
  Factory factory=injector.getInstance(ParseSax.Factory.class);
  VDC result=factory.create(injector.getInstance(VDCHandler.class)).parse(is);
  assertEquals(result.getName(),"Miami Environment 1");
  assertEquals(result.getId(),URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vdc/32"));
  assertEquals(result.getDescription(),null);
  assertEquals(result.getStorageCapacity(),new Capacity("bytes * 10^9",100,0,8,0));
  assertEquals(result.getCpuCapacity(),new Capacity("hz * 10^6",5000,0,0,0));
  assertEquals(result.getMemoryCapacity(),new Capacity("bytes * 2^20",10240,0,0,0));
  assertEquals(result.getVmQuota(),0);
  assertEquals(result.getResourceEntities(),ImmutableMap.<String,NamedResource>of("adriantest",new NamedResourceImpl("adriantest",VCloudExpressMediaType.VAPP_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vapp/15124")),"centos-53",new NamedResourceImpl("centos-53",VCloudExpressMediaType.VAPP_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vapp/15120"))));
  assertEquals(result.getAvailableNetworks(),ImmutableMap.of("10.114.34.128/26",new NamedResourceImpl("10.114.34.128/26","application/vnd.vmware.vcloud.network+xml",URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/network/1708"))));
}
