{
  VirtualBoxManager manager=(VirtualBoxManager)context.getProviderSpecificContext().getApi();
  ComputeServiceContext localHostContext=computeServiceForLocalhostAndGuest(hostId,"localhost",guestId,"localhost",new Credentials("toor","password"));
  Predicate<IPSocket> socketTester=new RetryablePredicate<IPSocket>(new InetSocketAddressConnect(),10,1,TimeUnit.SECONDS);
  String workingDir=PropertyUtils.getWorkingDirFromProperty();
  StorageController ideController=StorageController.builder().name(ideControllerName).bus(StorageBus.IDE).attachISO(0,0,workingDir + "/ubuntu-11.04-server-i386.iso").attachHardDisk(0,1,workingDir + "/testadmin.vdi").attachISO(1,1,workingDir + "/VBoxGuestAdditions_4.1.2.iso").build();
  VmSpec vmSpecification=VmSpec.builder().id(vmId).name(vmName).memoryMB(512).osTypeId(osTypeId).controller(ideController).forceOverwrite(true).natNetworkAdapter(0,NatAdapter.builder().tcpRedirectRule("127.0.0.1",2222,"",22).build()).build();
  IMachine imageMachine=new CreateAndInstallVm(manager,guestId,localHostContext,hostId,socketTester,"127.0.0.1",8080,HEADLESS).apply(vmSpecification);
  IMachineToImage iMachineToImage=new IMachineToImage(manager,map);
  Image newImage=iMachineToImage.apply(imageMachine);
  Set<? extends Image> images=context.getComputeService().listImages();
  Iterable<String> imageIds=transform(images,extractId());
  assertTrue(any(imageIds,equalTo(newImage.getId())));
}
