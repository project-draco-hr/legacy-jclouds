{
  super.setupDefaultRequests();
  describeAvailabilityZonesRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","DescribeAvailabilityZones").build());
  describeAvailabilityZonesResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/availabilityZones-" + region + ".xml",MediaType.APPLICATION_XML)).build();
  describeImagesRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","DescribeImages").build());
  describeImagesResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/describe_images.xml",MediaType.APPLICATION_XML)).build();
  createKeyPairRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","CreateKeyPair").addFormParam("KeyName","jclouds#test#0").build());
  createKeyPairResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/create_keypair.xml",MediaType.APPLICATION_XML)).build();
  createSecurityGroupRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","CreateSecurityGroup").addFormParam("GroupDescription","jclouds#test").addFormParam("GroupName","jclouds#test").build());
  createSecurityGroupResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/created_securitygroup.xml",MediaType.APPLICATION_XML)).build();
  describeSecurityGroupRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","DescribeSecurityGroups").addFormParam("GroupName.1","jclouds#test").build());
  describeSecurityGroupResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/new_securitygroup.xml",MediaType.APPLICATION_XML)).build();
  authorizeSecurityGroupIngressRequest22=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","AuthorizeSecurityGroupIngress").addFormParam("CidrIp","0.0.0.0/0").addFormParam("FromPort","22").addFormParam("ToPort","22").addFormParam("GroupName","jclouds#test").addFormParam("IpProtocol","tcp").build());
  authorizeSecurityGroupIngressRequestGroup=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","AuthorizeSecurityGroupIngress").addFormParam("SourceSecurityGroupName","jclouds#test").addFormParam("SourceSecurityGroupOwnerId","993194456877").addFormParam("GroupName","jclouds#test").build());
  authorizeSecurityGroupIngressResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/authorize_securitygroup_ingress_response.xml",MediaType.APPLICATION_XML)).build();
  runInstancesRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","RunInstances").addFormParam("ImageId","ami-be3adfd7").addFormParam("InstanceType","m1.small").addFormParam("KeyName","jclouds#test#0").addFormParam("MaxCount","1").addFormParam("MinCount","1").addFormParam("SecurityGroup.1","jclouds#test").build());
  runInstancesResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/new_instance.xml",MediaType.APPLICATION_XML)).build();
  describeInstanceRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","DescribeInstances").addFormParam("InstanceId.1","i-2baa5550").build());
  describeInstanceResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/describe_instances_running-1.xml",MediaType.APPLICATION_XML)).build();
  describeInstanceMultiIdsRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("Action","DescribeInstances").addFormParam("InstanceId.1","i-2baa5550").addFormParam("InstanceId.2","i-abcd1234").build());
  describeInstanceMultiIdsResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/describe_instances_multiple.xml",MediaType.APPLICATION_XML)).build();
  describeImageRequest=formSigner.filter(HttpRequest.builder().method("POST").endpoint("https://ec2." + region + ".amazonaws.com/").addHeader("Host","ec2." + region + ".amazonaws.com").addFormParam("ImageId.1","ami-aecd60c7").addFormParam("Action","DescribeImages").build());
}
