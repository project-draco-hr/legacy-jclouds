{
  if (method.getName().equals("equals")) {
    return this.equals(o);
  }
 else   if (method.getName().equals("toString")) {
    return this.toString();
  }
 else   if (method.getName().equals("hashCode")) {
    return this.hashCode();
  }
 else   if (method.getName().startsWith("new")) {
    return injector.getInstance(method.getReturnType());
  }
 else   if (method.isAnnotationPresent(Delegate.class)) {
    return delegateMap.get(new ClassMethodArgs(method.getReturnType(),method,args));
  }
 else   if (annotationProcessor.getDelegateOrNull(method) != null && ListenableFuture.class.isAssignableFrom(method.getReturnType())) {
    return createFuture(method,args);
  }
 else {
    throw new RuntimeException("method is intended solely to set constants: " + method);
  }
}
