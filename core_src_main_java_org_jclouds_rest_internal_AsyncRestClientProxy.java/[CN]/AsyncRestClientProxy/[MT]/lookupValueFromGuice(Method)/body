{
  try {
    Type genericReturnType=method.getGenericReturnType();
    try {
      Annotation qualifier=Iterables.find(ImmutableList.copyOf(method.getAnnotations()),isQualifierPresent);
      return getInstanceOfTypeWithQualifier(genericReturnType,qualifier);
    }
 catch (    NoSuchElementException e) {
      return getInstanceOfType(genericReturnType);
    }
  }
 catch (  ProvisionException e) {
    AuthorizationException aex=Throwables2.getFirstThrowableOfType(e,AuthorizationException.class);
    if (aex != null)     throw aex;
    throw e;
  }
}
