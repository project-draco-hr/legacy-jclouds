{
  try {
    Type genericReturnType=method.getReturnType().getType();
    try {
      Annotation qualifier=find(ImmutableList.copyOf(method.getAnnotations()),isQualifierPresent);
      return getInstanceOfTypeWithQualifier(genericReturnType,qualifier);
    }
 catch (    ProvisionException e) {
      throw propagate(e.getCause());
    }
catch (    RuntimeException e) {
      return instanceOfTypeOrPropagate(genericReturnType,e);
    }
  }
 catch (  ProvisionException e) {
    AuthorizationException aex=getFirstThrowableOfType(e,AuthorizationException.class);
    if (aex != null)     throw aex;
    throw e;
  }
}
