{
  Class<?> asyncClass=returnTypeOrTypeOfOptional(method);
  ClassInvokerArgs cma=ClassInvokerArgs.builder().clazz(asyncClass).invoker(method).args(args).build();
  Object returnVal=delegateMap.get(cma);
  if (isReturnTypeOptional(method)) {
    ClassInvokerArgsAndReturnVal cmar=ClassInvokerArgsAndReturnVal.builder().fromClassInvokerArgs(cma).returnVal(returnVal).build();
    return optionalConverter.apply(cmar);
  }
  return returnVal;
}
