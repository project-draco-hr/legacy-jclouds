{
  Class<?> asyncClass=Optionals2.returnTypeOrTypeOfOptional(method);
  ClassMethodArgs cma=new ClassMethodArgs(asyncClass,method,args);
  Object returnVal=delegateMap.get(cma);
  if (Optionals2.isReturnTypeOptional(method)) {
    ClassMethodArgsAndReturnVal cmar=ClassMethodArgsAndReturnVal.builder().fromClassMethodArgs(cma).returnVal(returnVal).build();
    return optionalConverter.apply(cmar);
  }
  return returnVal;
}
