{
  INetworkAdapter networkAdapter=vm.getNetworkAdapter(0L);
  SshClient client=null;
  checkNotNull(networkAdapter);
  String clientIpAddress=null;
  String sshPort="22";
  String guestIdentity=VirtualBoxApiMetadata.defaultProperties().getProperty(VIRTUALBOX_GUEST_IDENTITY);
  String guestCredential=VirtualBoxApiMetadata.defaultProperties().getProperty(VIRTUALBOX_GUEST_CREDENTIAL);
  LoginCredentials loginCredentials=LoginCredentials.builder().user(guestIdentity).password(guestCredential).authenticateSudo(true).build();
  if (networkAdapter.getAttachmentType().equals(NetworkAttachmentType.NAT)) {
    for (    String nameProtocolnumberAddressInboudportGuestTargetport : networkAdapter.getNatDriver().getRedirects()) {
      Iterable<String> stuff=Splitter.on(',').split(nameProtocolnumberAddressInboudportGuestTargetport);
      String protocolNumber=Iterables.get(stuff,1);
      String hostAddress=Iterables.get(stuff,2);
      String inboundPort=Iterables.get(stuff,3);
      String targetPort=Iterables.get(stuff,5);
      if ("1".equals(protocolNumber) && "22".equals(targetPort)) {
        clientIpAddress=hostAddress;
        sshPort=inboundPort;
      }
    }
  }
 else   if (networkAdapter.getAttachmentType().equals(NetworkAttachmentType.Bridged)) {
    String network="1.1.1.1";
    clientIpAddress=getIpAddressFromBridgedNIC(networkAdapter,network);
  }
 else   if (networkAdapter.getAttachmentType().equals(NetworkAttachmentType.HostOnly)) {
    clientIpAddress=machineUtils.getIpAddressFromFirstNIC(vm.getName());
  }
  checkNotNull(clientIpAddress,"clientIpAddress");
  client=sshClientFactory.create(HostAndPort.fromParts(clientIpAddress,Integer.parseInt(sshPort)),loginCredentials);
  checkNotNull(client);
  return client;
}
