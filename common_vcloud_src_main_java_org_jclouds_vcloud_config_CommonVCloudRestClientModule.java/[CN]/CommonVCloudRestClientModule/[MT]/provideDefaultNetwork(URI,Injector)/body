{
  if (authException.get() != null)   throw authException.get();
  try {
    org.jclouds.vcloud.domain.VDC vDC=injector.getInstance(CommonVCloudClient.class).getVDC(defaultVDC);
    Map<String,ReferenceType> networks=vDC.getAvailableNetworks();
    checkState(networks.size() > 0,"No networks present in vDC: " + vDC.getName());
    if (networks.size() == 1)     return Iterables.getLast(networks.values()).getHref();
    String networkName=null;
    try {
      networkName=injector.getInstance(Key.get(String.class,Names.named(PROPERTY_VCLOUD_DEFAULT_NETWORK)));
      ReferenceType network=networks.get(Iterables.find(networks.keySet(),Predicates.containsPattern(networkName)));
      return network.getHref();
    }
 catch (    NoSuchElementException e) {
      throw new IllegalStateException(String.format("network matching [%s] not in %s",networkName,networks.keySet()));
    }
catch (    ConfigurationException e) {
      return findDefaultNetworkForVDC(vDC,networks,injector);
    }
  }
 catch (  AuthorizationException e) {
    authException.set(e);
    throw e;
  }
}
