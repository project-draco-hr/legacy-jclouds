{
  ByteArrayOutputStream out=new ByteArrayOutputStream();
  TeeOutputStream tee=new TeeOutputStream(out,new KeepAliveOutputStream(System.out));
  ByteArrayOutputStream err=new ByteArrayOutputStream();
  TeeOutputStream teeErr=new TeeOutputStream(err,new KeepAliveOutputStream(System.err));
  int ec=-1;
  try {
    final ChannelExec channel;
    session.setTimeout((int)maxwait);
    channel=(ChannelExec)session.openChannel("exec");
    channel.setCommand(cmd);
    channel.setOutputStream(tee);
    channel.setExtOutputStream(tee);
    channel.setErrStream(teeErr);
    channel.connect();
    thread=new Thread(){
      public void run(){
        while (!channel.isClosed()) {
          if (thread == null) {
            return;
          }
          try {
            sleep(RETRY_INTERVAL);
          }
 catch (          Exception e) {
          }
        }
      }
    }
;
    thread.start();
    thread.join(maxwait);
    if (thread.isAlive()) {
      thread=null;
      if (getFailonerror()) {
        throw new BuildException(TIMEOUT_MESSAGE);
      }
 else {
        log(TIMEOUT_MESSAGE,Project.MSG_ERR);
      }
    }
 else {
      if (outputFile != null) {
        writeToFile(out.toString(),append,outputFile);
      }
      if (errorFile != null) {
        writeToFile(err.toString(),append,errorFile);
      }
      ec=channel.getExitStatus();
      if (ec != 0) {
        String msg="Remote command failed with exit status " + ec;
        if (getFailonerror()) {
          throw new BuildException(msg);
        }
 else {
          log(msg,Project.MSG_ERR);
        }
      }
    }
  }
 catch (  BuildException e) {
    throw e;
  }
catch (  JSchException e) {
    if (e.getMessage().indexOf("session is down") >= 0) {
      if (getFailonerror()) {
        throw new BuildException(TIMEOUT_MESSAGE,e);
      }
 else {
        log(TIMEOUT_MESSAGE,Project.MSG_ERR);
      }
    }
 else {
      if (getFailonerror()) {
        throw new BuildException(e);
      }
 else {
        log("Caught exception: " + e.getMessage(),Project.MSG_ERR);
      }
    }
  }
catch (  Exception e) {
    if (getFailonerror()) {
      throw new BuildException(e);
    }
 else {
      log("Caught exception: " + e.getMessage(),Project.MSG_ERR);
    }
  }
  return new ExecResponse(out.toString(),err.toString(),ec);
}
