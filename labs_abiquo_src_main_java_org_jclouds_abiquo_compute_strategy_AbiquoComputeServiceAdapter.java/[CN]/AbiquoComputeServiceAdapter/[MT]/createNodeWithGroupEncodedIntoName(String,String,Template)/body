{
  AbiquoTemplateOptions options=template.getOptions().as(AbiquoTemplateOptions.class);
  Enterprise enterprise=adminService.getCurrentEnterprise();
  Datacenter datacenter=regionMap.get().get(Integer.valueOf(template.getImage().getLocation().getId()));
  VirtualMachineTemplate virtualMachineTemplate=enterprise.getTemplateInRepository(datacenter,Integer.valueOf(template.getImage().getId()));
  VirtualDatacenter vdc=cloudService.getVirtualDatacenter(Integer.valueOf(template.getHardware().getLocation().getId()));
  VirtualAppliance vapp=vdc.findVirtualAppliance(VirtualAppliancePredicates.name(tag));
  if (vapp == null) {
    vapp=VirtualAppliance.builder(context,vdc).name(tag).build();
    vapp.save();
  }
  Integer overrideCores=options.getOverrideCores();
  Integer overrideRam=options.getOverrideRam();
  VirtualMachine vm=VirtualMachine.builder(context,vapp,virtualMachineTemplate).nameLabel(name).cpu(overrideCores != null ? overrideCores : totalCores(template.getHardware())).ram(overrideRam != null ? overrideRam : template.getHardware().getRam()).password(options.getVncPassword()).build();
  vm.save();
  PublicIp publicIp=vdc.findPurchasedPublicIp(IpPredicates.<PublicIp>notUsed());
  if (publicIp != null) {
    List<PublicIp> ips=Lists.newArrayList();
    ips.add(publicIp);
    vm.setNics(ips);
  }
  vm.deploy();
  return new NodeAndInitialCredentials<VirtualMachine>(vm,vm.getId().toString(),null);
}
