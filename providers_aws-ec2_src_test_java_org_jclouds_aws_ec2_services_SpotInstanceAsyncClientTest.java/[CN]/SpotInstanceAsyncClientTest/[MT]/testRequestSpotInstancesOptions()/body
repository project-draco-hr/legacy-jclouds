{
  Method method=SpotInstanceAsyncClient.class.getMethod("requestSpotInstancesInRegion",String.class,float.class,int.class,LaunchSpecification.class,RequestSpotInstancesOptions[].class);
  HttpRequest request=processor.createRequest(method,"eu-west-1",0.01,3,LaunchSpecification.builder().instanceType("m1.small").imageId("ami-voo").availabilityZone("eu-west-1a").kernelId("kernelId").groupId("group1").build(),new RequestSpotInstancesOptions().validFrom(from).validUntil(to).availabilityZoneGroup("availabilityZoneGroup").launchGroup("launchGroup"));
  assertRequestLineEquals(request,"POST https://ec2.eu-west-1.amazonaws.com/ HTTP/1.1");
  assertNonPayloadHeadersEqual(request,"Host: ec2.eu-west-1.amazonaws.com\n");
  assertPayloadEquals(request,"Version=2010-11-15&Action=RequestSpotInstances&InstanceCount=3&SpotPrice=0.01&ValidFrom=1970-05-23T21%3A21%3A18Z&ValidUntil=2009-02-13T23%3A31%3A31Z&AvailabilityZoneGroup=availabilityZoneGroup&LaunchGroup=launchGroup&LaunchSpecification.ImageId=ami-voo&LaunchSpecification.Placement.AvailabilityZone=eu-west-1a&LaunchSpecification.SecurityGroup.1=group1&LaunchSpecification.InstanceType=m1.small&LaunchSpecification.KernelId=kernelId","application/x-www-form-urlencoded",false);
  assertResponseParserClassEquals(method,request,ParseSax.class);
  assertSaxResponseParserClassEquals(method,SpotInstancesHandler.class);
  assertExceptionParserClassEquals(method,null);
  checkFilters(request);
}
