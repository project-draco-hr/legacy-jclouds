{
  Invokable<?,?> method=method(SpotInstanceAsyncClient.class,"requestSpotInstancesInRegion",String.class,float.class,int.class,LaunchSpecification.class,RequestSpotInstancesOptions[].class);
  GeneratedHttpRequest request=processor.createRequest(method,ImmutableList.<Object>of("eu-west-1",0.01,3,LaunchSpecification.builder().instanceType("m1.small").imageId("ami-voo").availabilityZone("eu-west-1a").kernelId("kernelId").securityGroupName("group1").build(),new RequestSpotInstancesOptions().validFrom(from).validUntil(to).availabilityZoneGroup("availabilityZoneGroup").launchGroup("launchGroup")));
  request=(GeneratedHttpRequest)request.getFilters().get(0).filter(request);
  assertRequestLineEquals(request,"POST https://ec2.eu-west-1.amazonaws.com/ HTTP/1.1");
  assertNonPayloadHeadersEqual(request,"Host: ec2.eu-west-1.amazonaws.com\n");
  assertPayloadEquals(request,requestSpotInstancesOptions.getPayload().getRawContent().toString(),"application/x-www-form-urlencoded",false);
  assertResponseParserClassEquals(method,request,ParseSax.class);
  assertSaxResponseParserClassEquals(method,SpotInstancesHandler.class);
  assertFallbackClassEquals(method,null);
  checkFilters(request);
}
