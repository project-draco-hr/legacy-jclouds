{
  Set<Image> images=existingImage == null ? ImmutableSet.<Image>of() : ImmutableSet.of(existingImage);
  Set<Hardware> hardwares=existingHardware == null ? ImmutableSet.<Hardware>of() : ImmutableSet.of(existingHardware);
  Server serverToConvert=new ParseServerTest().expected();
  ServerInZone serverInZoneToConvert=new ServerInZone(serverToConvert,"az-1.region-a.geo-1");
  ServerInZoneToNodeMetadata converter=new ServerInZoneToNodeMetadata(NovaComputeServiceContextModule.toPortableNodeStatus,locationIndex,Suppliers.<Set<? extends Image>>ofInstance(images),Suppliers.<Set<? extends Hardware>>ofInstance(hardwares),namingConvention);
  NodeMetadata convertedNodeMetadata=converter.apply(serverInZoneToConvert);
  assertEquals(serverInZoneToConvert.slashEncode(),convertedNodeMetadata.getId());
  assertEquals(serverToConvert.getId(),convertedNodeMetadata.getProviderId());
  assertEquals(convertedNodeMetadata.getLocation().getScope(),LocationScope.HOST);
  assertEquals(convertedNodeMetadata.getLocation().getId(),"e4d909c290d0fb1ca068ffaddf22cbd0");
  assertEquals(convertedNodeMetadata.getLocation().getParent(),locationIndex.get().get("az-1.region-a.geo-1"));
  assertEquals(serverToConvert.getName(),convertedNodeMetadata.getName());
  assertEquals(convertedNodeMetadata.getGroup(),"sample");
  assertEquals(convertedNodeMetadata.getImageId(),expectedImageId);
  assertEquals(convertedNodeMetadata.getOperatingSystem(),expectedOs);
  assertEquals(convertedNodeMetadata.getHardware(),expectedHardware);
  assertEquals(NovaComputeServiceContextModule.toPortableNodeStatus.get(serverToConvert.getStatus()),convertedNodeMetadata.getStatus());
  assertNotNull(convertedNodeMetadata.getPrivateAddresses());
  assertEquals(convertedNodeMetadata.getPrivateAddresses(),ImmutableSet.of("10.176.42.16"));
  assertNotNull(convertedNodeMetadata.getPublicAddresses());
  assertEquals(convertedNodeMetadata.getPublicAddresses(),ImmutableSet.of("67.23.10.132","67.23.10.131"));
  assertNotNull(convertedNodeMetadata.getUserMetadata());
  assertEquals(convertedNodeMetadata.getUserMetadata(),ImmutableMap.<String,String>of("Server Label","Web Head 1","Image Version","2.1"));
  URI expectedURI=URI.create("http://servers.api.openstack.org/v1.1/1234/servers/52415800-8b69-11e0-9b19-734f6f006e54");
  assertEquals(convertedNodeMetadata.getUri(),expectedURI);
}
