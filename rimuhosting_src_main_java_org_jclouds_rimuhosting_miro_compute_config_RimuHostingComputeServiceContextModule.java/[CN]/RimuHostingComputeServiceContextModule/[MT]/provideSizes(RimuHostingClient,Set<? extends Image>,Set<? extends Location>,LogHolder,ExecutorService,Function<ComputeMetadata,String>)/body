{
  final Set<Size> sizes=Sets.newHashSet();
  holder.logger.debug(">> providing sizes");
  for (  final PricingPlan from : sync.getPricingPlanList()) {
    try {
      final Location location=Iterables.find(locations,new Predicate<Location>(){
        @Override public boolean apply(        Location input){
          return input.getId().equals(from.getDataCenter().getId());
        }
      }
);
      sizes.add(new SizeImpl(from.getId(),from.getId(),from.getId(),location,null,ImmutableMap.<String,String>of(),1,from.getRam(),from.getDiskSize(),ImagePredicates.any()));
    }
 catch (    NullPointerException e) {
      holder.logger.warn("datacenter not present in " + from.getId());
    }
  }
  holder.logger.debug("<< sizes(%d)",sizes.size());
  return sizes;
}
