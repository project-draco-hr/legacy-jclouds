{
  return new AbstractModule(){
    @Override protected void configure(){
      install(new BlobStoreObjectModule<S3AsyncClient,S3Client>(new TypeLiteral<S3AsyncClient>(){
      }
,new TypeLiteral<S3Client>(){
      }
));
      install(new S3ObjectModule());
      bind(URI.class).annotatedWith(S3.class).toInstance(URI.create("http://stub:8080"));
      bindConstant().annotatedWith(Jsr330.named(S3Constants.PROPERTY_AWS_ACCESSKEYID)).to("user");
      bindConstant().annotatedWith(Jsr330.named(S3Constants.PROPERTY_AWS_SECRETACCESSKEY)).to("key");
      bindConstant().annotatedWith(Jsr330.named(BlobStoreConstants.PROPERTY_USER_METADATA_PREFIX)).to("prefix");
      bind(Logger.LoggerFactory.class).toInstance(new LoggerFactory(){
        public Logger getLogger(        String category){
          return Logger.NULL;
        }
      }
);
    }
    @SuppressWarnings("unused") @Provides @TimeStamp String provide(){
      return "timestamp";
    }
  }
;
}
