{
  Builder<Location> locations=ImmutableSet.builder();
  try {
    List<ListenableFuture<VSystemWithDetails>> futures=new ArrayList<ListenableFuture<VSystemWithDetails>>();
    for (    VSystem system : api.getVirtualDCApi().listVirtualSystems().get()) {
      futures.add(api.getVirtualSystemApi().getDetails(system.getId()));
    }
    for (    VSystemWithDetails system : Futures.successfulAsList(futures).get()) {
      Location systemLocation=new LocationBuilder().scope(LocationScope.SYSTEM).parent(Iterables.getOnlyElement(regionProvider.get())).description(system.getName()).id(system.getId()).build();
      for (      VNet net : system.getNetworks()) {
        locations.add(new LocationBuilder().scope(LocationScope.NETWORK).parent(systemLocation).description(net.getNetworkId().replaceFirst(".+(DMZ|SECURE.)","\\1")).id(net.getNetworkId()).build());
      }
    }
  }
 catch (  InterruptedException e) {
    throw Throwables.propagate(e);
  }
catch (  ExecutionException e) {
    throw Throwables.propagate(e);
  }
  return locations.build();
}
