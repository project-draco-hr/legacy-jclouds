{
  Predicate<Image> imagePredicate=new Predicate<Image>(){
    @Override public boolean apply(    Image arg0){
      return size.supportsImage(arg0);
    }
  }
;
  try {
    Iterable<? extends Image> matchingImages=filter(supportedImages,imagePredicate);
    if (logger.isTraceEnabled())     logger.trace("<<   matched images(%s)",matchingImages);
    List<? extends Image> maxImages=multiMax(DEFAULT_IMAGE_ORDERING,matchingImages);
    if (logger.isTraceEnabled())     logger.trace("<<   best images(%s)",maxImages);
    return maxImages.get(maxImages.size() - 1);
  }
 catch (  NoSuchElementException exception) {
    throw new NoSuchElementException("image didn't match: " + toString() + "\n"+ supportedImages);
  }
}
