{
  Size size;
  try {
    Iterable<? extends Size> sizesThatAreCompatibleWithOurImages=filter(sizes.get(),new Predicate<Size>(){
      @Override public boolean apply(      final Size size){
        boolean returnVal=false;
        if (size != null) {
          returnVal=Iterables.any(images,new Predicate<Image>(){
            @Override public boolean apply(            Image input){
              return size.supportsImage(input);
            }
          }
);
        }
        return returnVal;
      }
    }
);
    size=sizeOrdering.max(filter(sizesThatAreCompatibleWithOurImages,sizePredicate));
  }
 catch (  NoSuchElementException exception) {
    throw new NoSuchElementException("sizes don't support any images: " + toString() + "\n"+ sizes.get()+ "\n"+ images);
  }
  logger.debug("<<   matched size(%s)",size);
  return size;
}
