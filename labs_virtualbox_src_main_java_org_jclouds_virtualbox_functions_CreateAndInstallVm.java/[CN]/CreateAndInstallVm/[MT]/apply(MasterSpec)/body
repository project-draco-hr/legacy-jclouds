{
  VmSpec vmSpec=masterSpec.getVmSpec();
  IsoSpec isoSpec=masterSpec.getIsoSpec();
  String vmName=vmSpec.getVmName();
  IMachine vm=createAndRegisterMachineFromIsoIfNotAlreadyExists.apply(masterSpec);
  machineController.ensureMachineIsLaunched(vmName);
  URI uri=preConfiguration.getUnchecked(isoSpec);
  String installationKeySequence=isoSpec.getInstallationKeySequence().replace("PRECONFIGURATION_URL",uri.toASCIIString());
  configureOsInstallationWithKeyboardSequence(vmName,installationKeySequence);
  SshClient client=sshClientForIMachine.apply(vm);
  logger.debug(">> awaiting installation to finish node(%s)",vmName);
  checkState(sshResponds.apply(client),"timed out waiting for guest %s to be accessible via ssh",vmName);
  logger.debug(">> awaiting installation of guest additions on vm: %s",vmName);
  ListenableFuture<ExecResponse> execFuture=machineUtils.runScriptOnNode(imachineToNodeMetadata.apply(vm),new InstallGuestAdditions(vmSpec,version),RunScriptOptions.NONE);
  ExecResponse execResponse=Futures.getUnchecked(execFuture);
  checkState(execResponse.getExitStatus() == 0);
  logger.debug(">> awaiting post-installation actions on vm: %s",vmName);
  NodeMetadata vmMetadata=imachineToNodeMetadata.apply(vm);
  execFuture=machineUtils.runScriptOnNode(vmMetadata,call("cleanupUdevIfNeeded"),RunScriptOptions.NONE);
  execResponse=Futures.getUnchecked(execFuture);
  checkState(execResponse.getExitStatus() == 0);
  logger.debug("<< installation of image complete. Powering down node(%s)",vmName);
  machineController.ensureMachineHasPowerDown(vmName);
  return vm;
}
