{
  VmSpec vmSpec=masterSpec.getVmSpec();
  IsoSpec isoSpec=masterSpec.getIsoSpec();
  String vmName=vmSpec.getVmName();
  IMachine vm=createAndRegisterMachineFromIsoIfNotAlreadyExists.apply(masterSpec);
  machineController.ensureMachineIsLaunched(vmName);
  String installationKeySequence=isoSpec.getInstallationKeySequence().replace("PRECONFIGURATION_URL",preconfigurationUrl);
  configureOsInstallationWithKeyboardSequence(vmName,installationKeySequence);
  try {
    Thread.sleep(30000l);
  }
 catch (  InterruptedException e) {
    Throwables.propagate(e);
  }
  SshClient client=sshClientForIMachine.apply(vm);
  logger.debug(">> awaiting installation to finish node(%s)",vmName);
  checkState(sshResponds.apply(client),"timed out waiting for guest %s to be accessible via ssh",vmName);
  NodeMetadata nodeMetadata=imachineToNodeMetadata.apply(vm);
  logger.debug(">> awaiting post-installation actions on vm: %s",vmName);
  ListenableFuture<ExecResponse> execCleanup=machineUtils.runScriptOnNode(nodeMetadata,call("cleanupUdevIfNeeded"),RunScriptOptions.NONE);
  ExecResponse cleanupResponse=Futures.getUnchecked(execCleanup);
  checkState(cleanupResponse.getExitStatus() == 0);
  logger.debug(">> awaiting installation of guest additions on vm: %s",vmName);
  ListenableFuture<ExecResponse> execInstallGA=machineUtils.runScriptOnNode(nodeMetadata,new InstallGuestAdditions(vmSpec,version),RunScriptOptions.NONE);
  ExecResponse gaInstallationResponse=Futures.getUnchecked(execInstallGA);
  checkState(gaInstallationResponse.getExitStatus() == 0);
  machineController.ensureMachineIsShutdown(vmName);
  Iterable<IMediumAttachment> mediumAttachments=Iterables.filter(vm.getMediumAttachmentsOfController("IDE Controller"),new Predicate<IMediumAttachment>(){
    public boolean apply(    IMediumAttachment in){
      return in.getMedium() != null && in.getMedium().getDeviceType().equals(DeviceType.DVD);
    }
  }
);
  for (  IMediumAttachment iMediumAttachment : mediumAttachments) {
    machineUtils.writeLockMachineAndApply(vm.getName(),new DetachDistroMediumFromMachine(iMediumAttachment.getController(),iMediumAttachment.getPort(),iMediumAttachment.getDevice()));
  }
  return vm;
}
