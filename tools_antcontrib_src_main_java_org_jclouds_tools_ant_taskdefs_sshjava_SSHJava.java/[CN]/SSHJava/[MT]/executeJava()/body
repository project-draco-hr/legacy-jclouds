{
  checkNotNull(remotebase,"remotebase must be set");
  if (localDirectory == null) {
    try {
      localDirectory=File.createTempFile("sshjava","dir");
      localDirectory.delete();
      localDirectory.mkdirs();
    }
 catch (    IOException e) {
      throw new BuildException(e);
    }
  }
  if (remotedir == null)   remotedir=new File(remotebase,id);
  replace.put(localDirectory.getAbsolutePath(),remotedir.getAbsolutePath());
  if (osFamily == OsFamily.UNIX) {
    log("removing old contents: " + remotedir.getAbsolutePath(),Project.MSG_VERBOSE);
    sshexec(exec("rm -rf " + remotedir.getAbsolutePath()).render(osFamily));
  }
 else {
  }
  String command=createInitScript(osFamily,id,remotedir.getAbsolutePath(),env,getCommandLine());
  try {
    BufferedWriter out=new BufferedWriter(new FileWriter(new File(localDirectory,"init." + ShellToken.SH.to(osFamily))));
    out.write(command);
    out.close();
  }
 catch (  IOException e) {
    throw new BuildException(e);
  }
  FileSet cwd=new FileSet();
  cwd.setDir(localDirectory);
  mkdirAndCopyTo(remotedir.getAbsolutePath(),ImmutableList.of(cwd));
  for (  Entry<String,String> entry : shiftMap.entrySet()) {
    FileSet set=new FileSet();
    set.setDir(new File(entry.getKey()));
    mkdirAndCopyTo(remotebase.getAbsolutePath() + ShellToken.FS.to(osFamily) + entry.getValue(),ImmutableList.of(set));
  }
  if (getCommandLine().getClasspath() != null) {
    copyPathTo(getCommandLine().getClasspath(),remotedir.getAbsolutePath() + "/classpath");
  }
  if (getCommandLine().getBootclasspath() != null) {
    copyPathTo(getCommandLine().getBootclasspath(),remotedir.getAbsolutePath() + "/bootclasspath");
  }
  if (osFamily == OsFamily.UNIX) {
    sshexec(exec("chmod 755 " + remotedir.getAbsolutePath() + "{fs}init.{sh}").render(osFamily));
  }
  Statement statement=new StatementList(exec("{cd} " + remotedir.getAbsolutePath()),exec(remotedir.getAbsolutePath() + "{fs}init.{sh} init"),exec(remotedir.getAbsolutePath() + "{fs}init.{sh} run"));
  try {
    return sshexecRedirectStreams(statement);
  }
 catch (  IOException e) {
    throw new BuildException(e,getLocation());
  }
}
