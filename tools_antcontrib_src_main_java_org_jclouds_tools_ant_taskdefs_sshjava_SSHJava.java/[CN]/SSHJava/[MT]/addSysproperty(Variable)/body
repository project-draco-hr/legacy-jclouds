{
  if (sysp.getKey().startsWith("sshjava.shift.")) {
    shiftMap.put(sysp.getKey().replaceFirst("sshjava.shift.",""),sysp.getValue());
  }
 else   if (sysp.getKey().startsWith("sshjava.replace.")) {
    replace.put(sysp.getKey().replaceFirst("sshjava.replace.",""),sysp.getValue());
  }
 else   if (sysp.getKey().equals("sshjava.id")) {
    setId(sysp.getValue());
  }
 else   if (sysp.getKey().equals("sshjava.host")) {
    setHost(sysp.getValue());
  }
 else   if (sysp.getKey().equals("sshjava.port") && !sysp.getValue().equals("")) {
    setPort(Integer.parseInt(sysp.getValue()));
  }
 else   if (sysp.getKey().equals("sshjava.username")) {
    setUsername(sysp.getValue());
  }
 else   if (sysp.getKey().equals("sshjava.password") && !sysp.getValue().equals("")) {
    setPassword(sysp.getValue());
  }
 else   if (sysp.getKey().equals("sshjava.keyfile") && !sysp.getValue().equals("")) {
    setKeyfile(sysp.getValue());
  }
 else   if (sysp.getKey().equals("sshjava.remotebase")) {
    setRemotebase(new File(sysp.getValue()));
  }
 else {
    super.addSysproperty(sysp);
  }
}
