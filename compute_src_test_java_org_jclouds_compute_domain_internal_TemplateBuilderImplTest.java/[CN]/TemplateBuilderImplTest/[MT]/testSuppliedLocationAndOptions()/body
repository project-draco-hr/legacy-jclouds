{
  TemplateOptions from=provideTemplateOptions();
  Supplier<Set<? extends Location>> locations=Suppliers.<Set<? extends Location>>ofInstance(ImmutableSet.<Location>of(region));
  Supplier<Set<? extends Image>> images=Suppliers.<Set<? extends Image>>ofInstance(ImmutableSet.<Image>of());
  Supplier<Set<? extends Hardware>> hardwares=Suppliers.<Set<? extends Hardware>>ofInstance(ImmutableSet.<Hardware>of());
  Provider<TemplateOptions> optionsProvider=createMock(Provider.class);
  Provider<TemplateBuilder> templateBuilderProvider=createMock(Provider.class);
  expect(optionsProvider.get()).andReturn(from).atLeastOnce();
  replay(optionsProvider);
  replay(templateBuilderProvider);
  TemplateBuilderImpl template=createTemplateBuilder(null,locations,images,hardwares,region,optionsProvider,templateBuilderProvider);
  try {
    template.imageId("foo").options(provideTemplateOptions()).locationId("location").build();
    fail("Expected NoSuchElementException");
  }
 catch (  NoSuchElementException e) {
  }
  verify(optionsProvider);
  verify(templateBuilderProvider);
}
