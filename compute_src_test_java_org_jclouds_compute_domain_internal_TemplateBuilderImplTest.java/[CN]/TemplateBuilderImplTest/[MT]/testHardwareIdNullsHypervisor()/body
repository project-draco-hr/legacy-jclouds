{
  Supplier<Set<? extends Location>> locations=Suppliers.<Set<? extends Location>>ofInstance(ImmutableSet.<Location>of());
  Supplier<Set<? extends Image>> images=Suppliers.<Set<? extends Image>>ofInstance(ImmutableSet.<Image>of());
  Supplier<Set<? extends Hardware>> hardwares=Suppliers.<Set<? extends Hardware>>ofInstance(ImmutableSet.<Hardware>of());
  Location defaultLocation=createMock(Location.class);
  Provider<TemplateOptions> optionsProvider=createMock(Provider.class);
  Provider<TemplateBuilder> templateBuilderProvider=createMock(Provider.class);
  replay(defaultLocation);
  replay(optionsProvider);
  replay(templateBuilderProvider);
  TemplateBuilderImpl template=createTemplateBuilder(null,locations,images,hardwares,defaultLocation,optionsProvider,templateBuilderProvider);
  template.hypervisorMatches("OpenVZ");
  assertEquals(template.hardwareId,null);
  assertEquals(template.hypervisor,"OpenVZ");
  template.hardwareId("myid");
  assertEquals(template.hardwareId,"myid");
  assertEquals(template.hypervisor,null);
  verify(defaultLocation);
  verify(optionsProvider);
  verify(templateBuilderProvider);
}
