{
  TemplateOptions from=provideTemplateOptions();
  Hardware hardware=new HardwareBuilder().id("hardwareId").supportsImage(ImagePredicates.idEquals(image.getId())).build();
  Supplier<Set<? extends Location>> locations=Suppliers.<Set<? extends Location>>ofInstance(ImmutableSet.<Location>of(provider,region));
  Supplier<Set<? extends Image>> images=Suppliers.<Set<? extends Image>>ofInstance(ImmutableSet.<Image>of(image));
  Supplier<Set<? extends Hardware>> hardwares=Suppliers.<Set<? extends Hardware>>ofInstance(ImmutableSet.<Hardware>of(hardware));
  Provider<TemplateOptions> optionsProvider=createMock(Provider.class);
  Provider<TemplateBuilder> templateBuilderProvider=createMock(Provider.class);
  TemplateOptions defaultOptions=createMock(TemplateOptions.class);
  expect(optionsProvider.get()).andReturn(from).atLeastOnce();
  replay(defaultOptions,optionsProvider,templateBuilderProvider);
  TemplateBuilderImpl template=createTemplateBuilder(null,locations,images,hardwares,region,optionsProvider,templateBuilderProvider);
  assertEquals(template.imageId(image.getId()).locationId(provider.getId()).build().getLocation(),region);
  verify(defaultOptions,optionsProvider,templateBuilderProvider);
}
