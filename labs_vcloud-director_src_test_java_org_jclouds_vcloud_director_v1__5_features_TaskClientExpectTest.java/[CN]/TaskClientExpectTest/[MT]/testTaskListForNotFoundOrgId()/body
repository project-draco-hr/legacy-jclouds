{
  HttpRequest taskRequest=HttpRequest.builder().method("GET").endpoint(URI.create(endpoint + "/tasksList/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee")).headers(ImmutableMultimap.<String,String>builder().put("Accept","*/*").put("x-vcloud-authorization",token).build()).build();
  HttpResponse taskResponse=HttpResponse.builder().statusCode(403).payload(payloadFromResourceWithContentType("/task/error403.xml",VCloudDirectorMediaType.ERROR + ";version=1.5")).build();
  VCloudDirectorClient client=requestsSendResponses(loginRequest,sessionResponse,taskRequest,taskResponse);
  String orgId="aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee";
  Error expected=Error.builder().message("No access to entity \"com.vmware.vcloud.entity.org:aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\".").majorErrorCode(403).minorErrorCode("ACCESS_TO_RESOURCE_IS_FORBIDDEN").build();
  try {
    client.getTaskClient().getTaskList(orgId);
    fail("Should give HTTP 400 error");
  }
 catch (  VCloudDirectorException vde) {
    assertEquals(vde.getError(),expected);
  }
catch (  Exception e) {
    fail("Should have thrown a VCloudDirectorException");
  }
}
