{
  for (  TypeToken<? extends Throwable> type : throwables) {
    Throwable throwable=getFirstThrowableOfType(exception,(Class<Throwable>)type.getRawType());
    if (throwable != null) {
      return (Exception)throwable;
    }
  }
  for (  Class<Exception> propagatableExceptionType : new Class[]{IllegalStateException.class,AssertionError.class,UnsupportedOperationException.class,IllegalArgumentException.class,AuthorizationException.class,ResourceNotFoundException.class,InsufficientResourcesException.class,HttpResponseException.class}) {
    Throwable throwable=getFirstThrowableOfType(exception,propagatableExceptionType);
    if (throwable != null) {
      if (throwable instanceof AssertionError)       throw (AssertionError)throwable;
 else       throw (Exception)throwable;
    }
  }
  Throwables.propagateIfPossible(exception.getCause(),Exception.class);
  throw exception;
}
