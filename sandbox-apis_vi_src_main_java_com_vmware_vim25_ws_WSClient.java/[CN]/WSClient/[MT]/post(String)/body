{
  HttpURLConnection postCon=(HttpURLConnection)baseUrl.openConnection();
  if (connectTimeout > 0)   postCon.setConnectTimeout(connectTimeout);
  if (readTimeout > 0)   postCon.setReadTimeout(readTimeout);
  try {
    postCon.setRequestMethod("POST");
  }
 catch (  ProtocolException e) {
    e.printStackTrace();
  }
  postCon.setDoOutput(true);
  postCon.setDoInput(true);
  postCon.setRequestProperty(SOAP_ACTION_HEADER,soapAction);
  if (cookie != null) {
    postCon.setRequestProperty("Cookie",cookie);
  }
  OutputStream os=postCon.getOutputStream();
  OutputStreamWriter out=new OutputStreamWriter(os);
  try {
    System.out.printf("%s %s HTTP/1.1%n","POST",baseUrl.toURI().toASCIIString());
    for (    Entry<String,List<String>> i : postCon.getRequestProperties().entrySet()) {
      for (      String v : i.getValue())       System.out.printf("%s: %s%n",i.getKey(),v);
    }
    System.out.println(soapMsg);
  }
 catch (  URISyntaxException e1) {
  }
  out.write(soapMsg);
  out.close();
  InputStream is;
  try {
    is=postCon.getInputStream();
  }
 catch (  IOException ioe) {
    is=postCon.getErrorStream();
  }
  System.out.printf("HTTP/1.1 %d %s",postCon.getResponseCode(),postCon.getResponseMessage());
  for (  Entry<String,List<String>> i : postCon.getHeaderFields().entrySet()) {
    for (    String v : i.getValue())     System.out.printf("%s: %s%n",i.getKey(),v);
  }
  String response=Strings2.toStringAndClose(is);
  System.out.println(response);
  is=new ByteArrayInputStream(response.getBytes());
  if (cookie == null) {
    cookie=postCon.getHeaderField("Set-Cookie");
  }
  return is;
}
