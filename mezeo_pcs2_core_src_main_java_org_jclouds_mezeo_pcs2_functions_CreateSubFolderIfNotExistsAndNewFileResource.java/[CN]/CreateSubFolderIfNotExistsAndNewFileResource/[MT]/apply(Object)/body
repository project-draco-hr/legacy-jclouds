{
  checkState(checkNotNull(from,"args") instanceof Object[],"this must be applied to a method!");
  Object[] args=(Object[])from;
  checkArgument(args[0] instanceof String,"arg[0] must be a container name");
  checkArgument(args[1] instanceof PCSFile,"arg[1] must be a pcsfile");
  String container=args[0].toString();
  PCSFile file=(PCSFile)args[1];
  try {
    String containerId=subFolderMaker.apply(args);
    URI containerUri=UriBuilder.fromUri(pcs).path("containers/" + containerId).build();
    URI newFile=connection.createFile(containerUri,file).get(this.requestTimeoutMilliseconds,TimeUnit.MILLISECONDS);
    String id=PCSUtils.getFileId(newFile);
    fileCache.put(new Key(container,file.getName()),id);
    return id;
  }
 catch (  Exception e) {
    Utils.<ContainerNotFoundException>rethrowIfRuntimeOrSameType(e);
    Utils.<KeyNotFoundException>rethrowIfRuntimeOrSameType(e);
    throw new BlobRuntimeException(String.format("error creating file %s in container %s",file,container),e);
  }
}
