{
  Task deleteMetadataEntry=mediaClient.getMetadataClient().deleteMetadataEntry(media,"testKey");
  Checks.checkTask(deleteMetadataEntry);
  assertTrue(retryTaskSuccess.apply(deleteMetadataEntry),String.format(TASK_COMPLETE_TIMELY,"deleteMetadataEntry"));
  Error expected=Error.builder().message("The access to the resource metadata_item with id testKey is forbidden").majorErrorCode(403).minorErrorCode("ACCESS_TO_RESOURCE_IS_FORBIDDEN").build();
  try {
    metadataValue=mediaClient.getMetadataClient().getMetadataValue(media,"testKey");
    fail("Should give HTTP 403 error");
  }
 catch (  VCloudDirectorException vde) {
    assertEquals(vde.getError(),expected);
    metadataValue=null;
  }
catch (  Exception e) {
    fail("Should have thrown a VCloudDirectorException");
  }
  if (metadataValue != null) {
    assertNull(metadataValue,String.format(OBJ_FIELD_ATTRB_DEL,MEDIA,"Metadata",metadataValue.toString(),"metadataEntry",metadataValue.toString()));
  }
  metadataValue=mediaClient.getMetadataClient().getMetadataValue(media,"key");
  Checks.checkMetadataValueFor(MEDIA,metadataValue);
  media=mediaClient.getMedia(media);
  Checks.checkMediaFor(MEDIA,media);
}
