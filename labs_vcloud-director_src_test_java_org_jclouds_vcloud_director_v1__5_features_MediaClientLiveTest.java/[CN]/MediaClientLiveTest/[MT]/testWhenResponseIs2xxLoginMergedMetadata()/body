{
  Set<MetadataEntry> inputEntries=null;
  MetadataEntry keyEntry=null;
  MetadataEntry updateEntry=null;
  MetadataEntry newEntry=null;
  for (  MetadataEntry entry : metadata.getMetadataEntries()) {
    if (entry.getKey().equals("key")) {
      keyEntry=entry;
    }
 else {
      updateEntry=entry;
    }
    if (updateEntry != null && keyEntry != null) {
      newEntry=MetadataEntry.builder().entry("new " + updateEntry.getKey(),"new " + updateEntry.getValue()).build();
      break;
    }
  }
  if (newEntry != null) {
    inputEntries=ImmutableSet.of(keyEntry,updateEntry,newEntry);
  }
 else   if (keyEntry != null) {
    metadataEntryValue="new " + updateEntry.getValue();
    updateEntry=MetadataEntry.builder().entry(keyEntry.getKey(),metadataEntryValue).build();
    newEntry=MetadataEntry.builder().entry("new key","new value").build();
    inputEntries=ImmutableSet.of(updateEntry,newEntry);
  }
 else   if (updateEntry != null) {
    keyEntry=newEntry=MetadataEntry.builder().entry("key","value").build();
    inputEntries=ImmutableSet.of(updateEntry,newEntry);
  }
  Metadata inputMetadata=Metadata.builder().entries(inputEntries).build();
  Task mergeMetadata=mediaClient.mergeMetadata(mediaRef,inputMetadata);
  Checks.checkTask(mergeMetadata);
  assertTrue(taskTester.apply(mergeMetadata.getHref()),String.format(TASK_COMPLETE_TIMELY,"mergeMetadata"));
  metadata=mediaClient.getMetadata(mediaRef);
  assertEquals(metadata.getMetadataEntries(),inputEntries,String.format(OBJ_FIELD_EQ,MEDIA,"metadata",metadata.getMetadataEntries(),inputEntries));
  testWhenResponseIs2xxLoginReturnsValidMetadata();
}
