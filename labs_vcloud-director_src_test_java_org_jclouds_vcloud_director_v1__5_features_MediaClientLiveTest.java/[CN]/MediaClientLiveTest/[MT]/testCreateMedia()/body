{
  assertNotNull(vdcURI,String.format(REF_REQ_LIVE,VDC));
  Vdc vdc=vdcClient.getVdc(vdcURI);
  assertNotNull(vdc,String.format(OBJ_REQ_LIVE,VDC));
  Link addMedia=find(vdc.getLinks(),and(relEquals("add"),typeEquals(VCloudDirectorMediaType.MEDIA)));
  java.io.File sourceFile=new java.io.File(getClass().getResource("/media/test.iso").toURI());
  Media sourceMedia=Media.builder().type(VCloudDirectorMediaType.MEDIA).name("Test media 1").size(sourceFile.length()).imageType(Media.ImageType.ISO).description("Test media generated by testCreateMedia()").build();
  media=mediaClient.createMedia(addMedia.getHref(),sourceMedia);
  Checks.checkMediaFor(MEDIA,media);
  assertNotNull(media.getFiles(),String.format(OBJ_FIELD_REQ,MEDIA,"files"));
  assertTrue(media.getFiles().getFiles().size() == 1,String.format(OBJ_FIELD_EQ,MEDIA,"files.size()","1",media.getFiles().getFiles().size()));
  File uploadFile=getFirst(media.getFiles().getFiles(),null);
  assertNotNull(uploadFile,String.format(OBJ_FIELD_REQ,MEDIA,"files.first"));
  assertTrue(equal(uploadFile.getSize(),sourceMedia.getSize()),String.format(OBJ_FIELD_EQ,MEDIA,"uploadFile.size()",sourceMedia.getSize(),uploadFile.getSize()));
  Set<Link> links=uploadFile.getLinks();
  assertNotNull(links,String.format(OBJ_FIELD_REQ,MEDIA,"uploadFile.links"));
  assertTrue(links.size() == 1,String.format(OBJ_FIELD_EQ,MEDIA,"uploadfile.links.size()","1",links.size()));
  Link uploadLink=getFirst(links,null);
  assertTrue(equal(uploadLink.getRel(),Link.Rel.UPLOAD_DEFAULT),String.format(OBJ_FIELD_REQ,MEDIA,"uploadFile.links.first"));
  fail();
  context.getApi().getUploadClient().uploadFile(uploadLink.getHref(),sourceFile);
}
