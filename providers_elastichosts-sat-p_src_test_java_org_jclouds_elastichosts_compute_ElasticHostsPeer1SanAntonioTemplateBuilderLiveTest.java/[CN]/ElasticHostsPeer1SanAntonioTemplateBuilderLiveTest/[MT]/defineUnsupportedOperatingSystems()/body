{
  return Predicates.not(new Predicate<OsFamilyVersion64Bit>(){
    @Override public boolean apply(    OsFamilyVersion64Bit input){
switch (input.family) {
case UBUNTU:
        return (input.version.equals("") || ImmutableSet.of("11.10","10.04").contains(input.version)) && input.is64Bit;
case DEBIAN:
      return (input.version.equals("") || input.version.equals("6.0")) && input.is64Bit;
case CENTOS:
    return (input.version.equals("") || input.version.equals("6.0")) && input.is64Bit;
case WINDOWS:
  return (input.version.equals("") || input.version.equals("2008 R2") || input.version.equals("2008")) && input.is64Bit;
default :
return false;
}
}
}
);
}
