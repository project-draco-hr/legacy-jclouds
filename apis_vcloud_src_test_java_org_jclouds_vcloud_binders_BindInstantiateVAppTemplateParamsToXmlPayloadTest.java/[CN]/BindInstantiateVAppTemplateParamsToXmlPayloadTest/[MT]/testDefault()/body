{
  URI templateUri=URI.create("https://vcenterprise.bluelock.com/api/v1.0/vAppTemplate/3");
  VAppTemplate template=createMock(VAppTemplate.class);
  VCloudNetworkSection net=createMock(VCloudNetworkSection.class);
  String expected=Strings2.toStringAndClose(getClass().getResourceAsStream("/instantiationparams.xml"));
  GeneratedHttpRequest<?> request=createMock(GeneratedHttpRequest.class);
  expect(request.getEndpoint()).andReturn(URI.create("http://localhost/key")).anyTimes();
  expect(request.getArgs()).andReturn(ImmutableList.<Object>of()).atLeastOnce();
  request.setPayload(expected);
  expect(template.getNetworkSection()).andReturn(net).atLeastOnce();
  expect(net.getNetworks()).andReturn(ImmutableSet.<org.jclouds.ovf.Network>of(new org.jclouds.ovf.Network("vAppNet-vApp Internal",null)));
  replay(request);
  replay(template);
  replay(net);
  BindInstantiateVAppTemplateParamsToXmlPayload binder=createInjector(templateUri,template).getInstance(BindInstantiateVAppTemplateParamsToXmlPayload.class);
  Map<String,String> map=Maps.newHashMap();
  map.put("name","my-vapp");
  map.put("template",templateUri.toASCIIString());
  binder.bindToRequest(request,map);
  verify(request);
  verify(template);
  verify(net);
}
