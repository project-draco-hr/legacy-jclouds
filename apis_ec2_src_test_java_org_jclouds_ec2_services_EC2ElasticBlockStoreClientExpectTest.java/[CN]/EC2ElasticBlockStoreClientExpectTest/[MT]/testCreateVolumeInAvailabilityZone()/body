{
  Builder<HttpRequest,HttpResponse> builder=ImmutableMap.<HttpRequest,HttpResponse>builder();
  builder.put(describeRegionsRequest,describeRegionsResponse);
  builder.putAll(describeAvailabilityZonesRequestResponse);
  builder.put(HttpRequest.builder().method("POST").endpoint(URI.create("https://ec2.us-east-1.amazonaws.com/")).headers(ImmutableMultimap.of("Host","ec2.us-east-1.amazonaws.com")).payload(payloadFromStringWithContentType("Action=CreateVolume&AvailabilityZone=us-east-1a&Signature=FB5hTZHKSAuiygoafIdJh1EnfTu0ogC2VfRQOar85mg%3D&SignatureMethod=HmacSHA256&SignatureVersion=2&Size=4&Timestamp=2012-04-16T15%3A54%3A08.897Z&Version=2010-06-15&AWSAccessKeyId=identity","application/x-www-form-urlencoded")).build(),HttpResponse.builder().statusCode(200).payload(payloadFromResource("/created_volume.xml")).build());
  ElasticBlockStoreClient client=requestsSendResponses(builder.build()).getElasticBlockStoreServices();
  Volume expected=Volume.builder().id("vol-2a21e543").status(Volume.Status.CREATING).availabilityZone("us-east-1a").region("us-east-1").id("vol-2a21e543").size(1).createTime(dateService.iso8601DateParse("2009-12-28T05:42:53.000Z")).build();
  assertEquals(client.createVolumeInAvailabilityZone("us-east-1a",4),expected);
}
