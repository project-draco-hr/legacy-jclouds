{
  Exception exception=new HttpResponseException(command,response);
  try {
    String content=parseErrorFromContentOrNull(command,response);
switch (response.getStatusCode()) {
case 401:
      exception=new AuthorizationException(command.getRequest(),content);
    break;
case 403:
case 404:
  if (!command.getRequest().getMethod().equals("DELETE")) {
    String path=command.getRequest().getEndpoint().getPath();
    Matcher matcher=RESOURCE_PATTERN.matcher(path);
    String message;
    if (matcher.find()) {
      message=String.format("%s %s not found",matcher.group(1),matcher.group(2));
    }
 else {
      message=path;
    }
    exception=new ResourceNotFoundException(message);
  }
break;
case 500:
if ((response.getMessage().indexOf("because there is a pending task running") != -1) || (response.getMessage().indexOf("because it is already powered off") != -1) || (response.getMessage().indexOf("already exists") != -1)|| (response.getMessage().indexOf("same name exists") != -1)) exception=new IllegalStateException(response.getMessage(),exception);
break;
default :
exception=new HttpResponseException(command,response,content);
}
}
  finally {
releasePayload(response);
command.setException(exception);
}
}
