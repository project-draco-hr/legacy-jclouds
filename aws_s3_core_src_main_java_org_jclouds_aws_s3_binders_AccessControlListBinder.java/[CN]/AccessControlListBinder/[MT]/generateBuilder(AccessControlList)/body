{
  XMLBuilder rootBuilder=XMLBuilder.create("AccessControlPolicy").attr("xmlns",S3Constants.S3_REST_API_XML_NAMESPACE);
  if (acl.getOwner() != null) {
    XMLBuilder ownerBuilder=rootBuilder.elem("Owner");
    ownerBuilder.elem("ID").text(acl.getOwner().getId()).up();
    if (acl.getOwner().getDisplayName() != null) {
      ownerBuilder.elem("DisplayName").text(acl.getOwner().getDisplayName()).up();
    }
  }
  XMLBuilder grantsBuilder=rootBuilder.elem("AccessControlList");
  for (  Grant grant : acl.getGrants()) {
    XMLBuilder grantBuilder=grantsBuilder.elem("Grant");
    XMLBuilder granteeBuilder=grantBuilder.elem("Grantee").attr("xmlns:xsi","http://www.w3.org/2001/XMLSchema-instance");
    if (grant.getGrantee() instanceof GroupGrantee) {
      granteeBuilder.attr("xsi:type","Group").elem("URI").text(grant.getGrantee().getIdentifier());
    }
 else     if (grant.getGrantee() instanceof CanonicalUserGrantee) {
      CanonicalUserGrantee grantee=(CanonicalUserGrantee)grant.getGrantee();
      granteeBuilder.attr("xsi:type","CanonicalUser").elem("ID").text(grantee.getIdentifier()).up();
      if (grantee.getDisplayName() != null) {
        granteeBuilder.elem("DisplayName").text(grantee.getDisplayName());
      }
    }
 else     if (grant.getGrantee() instanceof EmailAddressGrantee) {
      granteeBuilder.attr("xsi:type","AmazonCustomerByEmail").elem("EmailAddress").text(grant.getGrantee().getIdentifier());
    }
    grantBuilder.elem("Permission").text(grant.getPermission().toString());
  }
  return grantsBuilder;
}
