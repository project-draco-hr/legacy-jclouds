{
  LoginCredentials defaultCredentials=image.getDefaultCredentials();
  String[] keys=defaultCredentials.getPrivateKey().split(":");
  String publicKey=keys[0];
  String privateKey=keys[1];
  LoginCredentials.Builder credentialsBuilder=defaultCredentials.toBuilder();
  credentialsBuilder.privateKey(privateKey);
  if (options.getPublicKey() == null) {
    options.authorizePublicKey(publicKey);
  }
  if (options.hasLoginPrivateKeyOption()) {
    credentialsBuilder.privateKey(options.getPrivateKey());
  }
  if (options.getLoginUser() != null) {
    credentialsBuilder.identity(options.getLoginUser());
  }
  if (options.hasLoginPasswordOption()) {
    credentialsBuilder.password(options.getLoginPassword());
  }
  if (options.shouldAuthenticateSudo() != null) {
    credentialsBuilder.authenticateSudo(options.shouldAuthenticateSudo());
  }
  LoginCredentials credentials=credentialsBuilder.build();
  options.overrideLoginCredentials(credentials);
  return credentials;
}
