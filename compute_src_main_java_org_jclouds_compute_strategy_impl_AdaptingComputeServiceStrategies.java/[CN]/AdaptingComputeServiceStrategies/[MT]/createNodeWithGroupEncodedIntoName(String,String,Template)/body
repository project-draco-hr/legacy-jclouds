{
  checkState(group != null,"group (that which groups identical nodes together) must be specified");
  checkState(name != null && name.indexOf(group) != -1,"name should have %s encoded into it",group);
  checkState(template != null,"template was null");
  checkState(template.getOptions() != null,"template options was null");
  NodeAndInitialCredentials<N> from=client.createNodeWithGroupEncodedIntoName(group,name,template);
  LoginCredentials fromNode=from.getCredentials();
  LoginCredentials creds=prioritizeCredentialsFromTemplate.apply(template,fromNode);
  String credsKey="node#" + from.getNodeId();
  if (creds != null) {
    credentialStore.put(credsKey,creds);
  }
 else {
    logger.trace("node(%s) creation did not return login credentials",from.getNodeId());
  }
  NodeMetadata node=nodeMetadataAdapter.apply(from.getNode());
  checkState(node.getId().equals(from.getNodeId()),"nodeAndInitialCredentials.getNodeId() returned %s, while parsed nodemetadata.getId() returned %s",from.getNodeId(),node.getId());
  if (creds != null) {
    Credentials credsFromCache=credentialStore.get(credsKey);
    checkState(node.getCredentials().equals(credsFromCache),"credentialStore.get(%s): %s does not match node(%s).getCredentials(): %s",credsKey,credsFromCache,node.getId(),node.getCredentials());
  }
  return node;
}
