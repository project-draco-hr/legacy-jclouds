{
  String containerName=bucketPrefix + ".testPutAndDeleteObjects";
  String data="Here is my data";
  assertTrue(connection.putContainer(containerName));
  CFObject object=new CFObject("object",data);
  object.setContentLength(data.length());
  object.generateETag();
  object.getMetadata().setContentType("text/plain");
  object.getMetadata().getUserMetadata().put(CloudFilesHeaders.USER_METADATA_PREFIX + "metadata","metadata-value");
  byte[] md5=connection.putObject(containerName,object).get(10,TimeUnit.SECONDS);
  assertEquals(HttpUtils.toHexString(md5),HttpUtils.toHexString(object.getMetadata().getETag()));
  String correctEtag=HttpUtils.toHexString(object.getMetadata().getETag());
  String incorrectEtag="0" + correctEtag.substring(1);
  object.getMetadata().setETag(HttpUtils.fromHexString(incorrectEtag));
  try {
    connection.putObject(containerName,object).get(10,TimeUnit.SECONDS);
  }
 catch (  Throwable e) {
    assertEquals(e.getCause().getClass(),HttpResponseException.class);
    assertEquals(((HttpResponseException)e.getCause()).getResponse().getStatusCode(),422);
  }
  ByteArrayInputStream bais=new ByteArrayInputStream(data.getBytes("UTF-8"));
  object=new CFObject("chunked-object",bais);
  md5=connection.putObject(containerName,object).get(10,TimeUnit.SECONDS);
  assertEquals(HttpUtils.toHexString(md5),correctEtag);
  assertTrue(connection.deleteObject(containerName,"object"));
  assertTrue(connection.deleteObject(containerName,"chunked-object"));
  assertTrue(connection.deleteContainerIfEmpty(containerName));
}
