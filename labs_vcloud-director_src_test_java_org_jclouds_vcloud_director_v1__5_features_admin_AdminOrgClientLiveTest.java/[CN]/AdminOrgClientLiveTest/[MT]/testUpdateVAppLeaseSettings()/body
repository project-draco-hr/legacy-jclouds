{
  boolean deleteOnStorageLeaseExpiration=vAppLeaseSettings.deleteOnStorageLeaseExpiration();
  Integer storageLeaseSeconds=vAppLeaseSettings.getStorageLeaseSeconds();
  Integer deploymentLeaseSeconds=vAppLeaseSettings.getDeploymentLeaseSeconds();
  try {
    OrgLeaseSettings newVAppLeaseSettings=vAppLeaseSettings.toBuilder().deleteOnStorageLeaseExpiration(!deleteOnStorageLeaseExpiration).storageLeaseSeconds(storageLeaseSeconds + 1).deploymentLeaseSeconds(deploymentLeaseSeconds + 1).build();
    vAppLeaseSettings=orgClient.updateVAppLeaseSettings(orgRef.getHref(),newVAppLeaseSettings);
    assertTrue(equal(vAppLeaseSettings.deleteOnStorageLeaseExpiration(),!deleteOnStorageLeaseExpiration),String.format(OBJ_FIELD_UPDATABLE,"vAppLeaseSettings","deleteOnStorageLeaseExpiration"));
    assertTrue(equal(vAppLeaseSettings.getStorageLeaseSeconds(),storageLeaseSeconds + 1),String.format(OBJ_FIELD_UPDATABLE,"vAppLeaseSettings","storageLeaseSeconds"));
    assertTrue(equal(vAppLeaseSettings.getDeploymentLeaseSeconds(),deploymentLeaseSeconds + 1),String.format(OBJ_FIELD_UPDATABLE,"vAppLeaseSettings","deploymentLeaseSeconds"));
    Checks.checkVAppLeaseSettings(vAppLeaseSettings);
  }
  finally {
    vAppLeaseSettings=vAppLeaseSettings.toBuilder().deleteOnStorageLeaseExpiration(deleteOnStorageLeaseExpiration).storageLeaseSeconds(storageLeaseSeconds).deploymentLeaseSeconds(deploymentLeaseSeconds).build();
    vAppLeaseSettings=orgClient.updateVAppLeaseSettings(orgRef.getHref(),vAppLeaseSettings);
  }
}
