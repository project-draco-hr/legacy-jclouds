{
  Method method=TemplateAsyncClient.class.getMethod("registerTemplate",String.class,long.class,String.class,String.class,String.class,long.class,String.class,RegisterTemplateOptions[].class);
  HttpRequest httpRequest=processor.createRequest(method,"thename",10,Template.Format.QCOW2,"xen","http://example.com/",20,"description",RegisterTemplateOptions.Builder.accountInDomain("mydomain",3).bits(32).checksum("ABC").isExtractable(true).isFeatured(true).isPublic(true).passwordEnabled(true).requiresHVM(true));
  assertRequestLineEquals(httpRequest,"GET http://localhost:8080/client/api?response=json&command=registerTemplate&displaytext=description&zoneid=20&name=thename&format=QCOW2&ostypeid=10&hypervisor=xen&url=http%3A%2F%2Fexample.com%2F&account=mydomain&domainid=3&bits=32&checksum=ABC&isextractable=true&isfeatured=true&ispublic=true&passwordenabled=true&requireshvm=true HTTP/1.1");
  assertNonPayloadHeadersEqual(httpRequest,"Accept: application/json\n");
  assertPayloadEquals(httpRequest,null,null,false);
  assertResponseParserClassEquals(method,httpRequest,ParseFirstJsonValueNamed.class);
  assertSaxResponseParserClassEquals(method,null);
  assertExceptionParserClassEquals(method,MapHttp4xxCodesToExceptions.class);
  checkFilters(httpRequest);
}
