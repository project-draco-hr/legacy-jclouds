{
  Preconditions2.checkNotEmpty(group,"group");
  String placementGroup=String.format("jclouds#%s#%s",group,region);
  try {
    if (client.getPlacementGroupServices().describePlacementGroupsInRegion(region,placementGroup).size() > 0) {
      logger.debug(">> deleting placementGroup(%s)",placementGroup);
      try {
        client.getPlacementGroupServices().deletePlacementGroupInRegion(region,placementGroup);
        checkState(placementGroupDeleted.apply(new PlacementGroup(region,placementGroup,"cluster",State.PENDING)),String.format("placementGroup region(%s) name(%s) failed to delete",region,placementGroup));
        placementGroupMap.invalidate(new RegionAndName(region,placementGroup));
        logger.debug("<< deleted placementGroup(%s)",placementGroup);
      }
 catch (      IllegalStateException e) {
        logger.debug("<< inUse placementGroup(%s)",placementGroup);
      }
    }
  }
 catch (  UnsupportedOperationException e) {
    logger.trace("<< placementGroups unsupported in region %s",region);
  }
}
