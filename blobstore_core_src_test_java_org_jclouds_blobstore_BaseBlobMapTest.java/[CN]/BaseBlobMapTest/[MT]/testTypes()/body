{
  TypeLiteral type0=new TypeLiteral<Map<String,Map<String,Blob<BlobMetadata>>>>(){
  }
;
  TypeLiteral type1=TypeLiteral.get(Types.newParameterizedType(Map.class,String.class,Types.newParameterizedType(Map.class,String.class,Types.newParameterizedType(Blob.class,BlobMetadata.class))));
  assertEquals(type0,type1);
  TypeLiteral type2=new TypeLiteral<BlobMap.Factory<BlobMetadata,Blob<BlobMetadata>>>(){
  }
;
  TypeLiteral type3=TypeLiteral.get(Types.newParameterizedTypeWithOwner(BlobMap.class,BlobMap.Factory.class,BlobMetadata.class,Types.newParameterizedType(Blob.class,BlobMetadata.class)));
  assertEquals(type2,type3);
  TypeLiteral type4=new TypeLiteral<Blob<BlobMetadata>>(){
  }
;
  TypeLiteral type5=TypeLiteral.get(Types.newParameterizedType(Blob.class,BlobMetadata.class));
  assertEquals(type4,type5);
  TypeLiteral type6=new TypeLiteral<BlobStoreContextImpl<BlobStore<ContainerMetadata,BlobMetadata,Blob<BlobMetadata>>,ContainerMetadata,BlobMetadata,Blob<BlobMetadata>>>(){
  }
;
  TypeLiteral type7=TypeLiteral.get(Types.newParameterizedType(BlobStoreContextImpl.class,Types.newParameterizedType(BlobStore.class,ContainerMetadata.class,BlobMetadata.class,Types.newParameterizedType(Blob.class,BlobMetadata.class)),ContainerMetadata.class,BlobMetadata.class,Types.newParameterizedType(Blob.class,BlobMetadata.class)));
  assertEquals(type6,type7);
}
