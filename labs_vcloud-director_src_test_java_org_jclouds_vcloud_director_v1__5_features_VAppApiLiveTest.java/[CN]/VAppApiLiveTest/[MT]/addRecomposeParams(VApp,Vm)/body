{
  Reference reference=Reference.builder().name(name("vm-")).href(vm.getHref()).type(vm.getType()).build();
  SourcedCompositionItemParam vmItem=SourcedCompositionItemParam.builder().source(reference).build();
  InstantiationParams vmInstantiationParams=null;
  Set<NetworkAssignment> networkAssignments=Sets.newLinkedHashSet();
  if (vmHasNetworkConnectionConfigured(vm)) {
    if (!vAppHasNetworkConfigured(vApp)) {
      NetworkConnectionSection networkConnectionSection=NetworkConnectionSection.builder().info("Empty network configuration parameters").build();
      vmInstantiationParams=InstantiationParams.builder().sections(ImmutableSet.of(networkConnectionSection)).build();
    }
 else {
      Set<VAppNetworkConfiguration> vAppNetworkConfigurations=listVappNetworkConfigurations(vApp);
      for (      VAppNetworkConfiguration vAppNetworkConfiguration : vAppNetworkConfigurations) {
        NetworkAssignment networkAssignment=NetworkAssignment.builder().innerNetwork(vAppNetworkConfiguration.getNetworkName()).containerNetwork(vAppNetworkConfiguration.getNetworkName()).build();
        networkAssignments.add(networkAssignment);
      }
    }
  }
 else {
    if (vAppHasNetworkConfigured(vApp)) {
      VAppNetworkConfiguration vAppNetworkConfiguration=getVAppNetworkConfig(vApp);
      NetworkConnection networkConnection=NetworkConnection.builder().network(vAppNetworkConfiguration.getNetworkName()).ipAddressAllocationMode(IpAddressAllocationMode.DHCP).build();
      NetworkConnectionSection networkConnectionSection=NetworkConnectionSection.builder().info("networkInfo").primaryNetworkConnectionIndex(0).networkConnection(networkConnection).build();
      vmInstantiationParams=InstantiationParams.builder().sections(ImmutableSet.of(networkConnectionSection)).build();
    }
  }
  if (vmInstantiationParams != null)   vmItem=SourcedCompositionItemParam.builder().fromSourcedCompositionItemParam(vmItem).instantiationParams(vmInstantiationParams).build();
  if (networkAssignments != null)   vmItem=SourcedCompositionItemParam.builder().fromSourcedCompositionItemParam(vmItem).networkAssignment(networkAssignments).build();
  return RecomposeVAppParams.builder().name(name("recompose-")).sourcedItems(ImmutableList.of(vmItem)).build();
}
