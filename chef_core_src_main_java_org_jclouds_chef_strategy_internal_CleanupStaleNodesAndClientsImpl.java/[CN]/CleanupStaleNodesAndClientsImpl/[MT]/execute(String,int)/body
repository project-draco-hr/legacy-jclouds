{
  final Calendar expired=Calendar.getInstance();
  expired.setTime(new Date());
  expired.add(Calendar.SECOND,-secondsStale);
  Iterable<? extends Node> staleNodes=filter(getAllNodes.execute(new Predicate<String>(){
    @Override public boolean apply(    String input){
      return input.startsWith(prefix);
    }
  }
),and(notNull(),new Predicate<Node>(){
    @Override public boolean apply(    Node input){
      JsonBall dateLong=input.getAutomatic().get("ohai_time");
      if (dateLong == null)       return true;
      Calendar nodeUpdate=Calendar.getInstance();
      nodeUpdate.setTime(fromOhaiTime(dateLong));
      return expired.after(nodeUpdate);
    }
  }
));
  deleter.execute(transform(staleNodes,new Function<Node,String>(){
    @Override public String apply(    Node from){
      return from.getName();
    }
  }
));
}
