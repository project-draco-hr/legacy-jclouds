{
  RestContextSpec<Callee,AsyncCallee> contextSpec=contextSpec("test","http://localhost:9999","1","","","userfoo",null,Callee.class,AsyncCallee.class,ImmutableSet.<Module>of(new MockModule(),new NullLoggingModule(),new AbstractModule(){
    @Override protected void configure(){
      bind(new TypeLiteral<Set<String>>(){
      }
).toInstance(ImmutableSet.of("foo"));
      bind(new TypeLiteral<Set<String>>(){
      }
).annotatedWith(Names.named("bar")).toInstance(ImmutableSet.of("bar"));
      bind(URI.class).annotatedWith(Localhost2.class).toInstance(URI.create("http://localhost:1111"));
    }
    @SuppressWarnings("unused") @Provides @Named("exception") Set<String> exception(){
      throw new AuthorizationException();
    }
  }
));
  injector=createContextBuilder(contextSpec).buildInjector();
  parserFactory=injector.getInstance(ParseSax.Factory.class);
  crypto=injector.getInstance(Crypto.class);
}
