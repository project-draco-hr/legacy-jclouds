{
  if (checkNotNull(input,"input") instanceof Iterable)   input=Maps.uniqueIndex((Iterable<String>)input,new Function<String,String>(){
    int index=1;
    @Override public String apply(    String input){
      return index++ + "";
    }
  }
);
  checkArgument(checkNotNull(input,"input") instanceof Map,"this binder is only valid for Map");
  Map<String,String> mapping=(Map<String,String>)input;
  ImmutableMap.Builder<String,String> builder=ImmutableMap.builder();
  int amazonOneBasedIndex=1;
  for (  Entry<String,String> entry : mapping.entrySet()) {
    builder.put(format(keyPattern,amazonOneBasedIndex),entry.getKey());
    builder.put(format(valuePattern,amazonOneBasedIndex),entry.getValue());
    amazonOneBasedIndex++;
  }
  Multimap<String,String> forms=Multimaps.forMap(builder.build());
  return forms.size() == 0 ? request : (R)request.toBuilder().replaceFormParams(forms).build();
}
