{
  return new AbstractModule(){
    @Override protected void configure(){
      install(new BlobStoreObjectModule<AtmosStorageAsyncClient,AtmosStorageClient>(new TypeLiteral<AtmosStorageAsyncClient>(){
      }
,new TypeLiteral<AtmosStorageClient>(){
      }
));
      install(new AtmosObjectModule());
      Jsr330.bindProperties(binder(),checkNotNull(new AtmosStoragePropertiesBuilder(new Properties()).build(),"properties"));
      bind(URI.class).annotatedWith(AtmosStorage.class).toInstance(URI.create("http://accesspoint.emccis.com"));
      bind(String.class).annotatedWith(TimeStamp.class).toInstance("timestamp");
      bindConstant().annotatedWith(Jsr330.named(AtmosStorageConstants.PROPERTY_EMCSAAS_UID)).to("uid");
      bindConstant().annotatedWith(Jsr330.named(AtmosStorageConstants.PROPERTY_EMCSAAS_KEY)).to(Base64.encodeBytes("key".getBytes()));
      bind(Logger.LoggerFactory.class).toInstance(new LoggerFactory(){
        public Logger getLogger(        String category){
          return Logger.NULL;
        }
      }
);
      bindConstant().annotatedWith(Jsr330.named(AtmosStorageConstants.PROPERTY_EMCSAAS_SESSIONINTERVAL)).to(1l);
    }
  }
;
}
