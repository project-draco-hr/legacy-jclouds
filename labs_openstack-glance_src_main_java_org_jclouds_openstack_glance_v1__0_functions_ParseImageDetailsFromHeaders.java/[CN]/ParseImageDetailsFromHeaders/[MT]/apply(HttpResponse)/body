{
  ImageDetails.Builder<?> builder=ImageDetails.builder().id(from.getFirstHeaderOrNull("X-Image-Meta-Id")).name(from.getFirstHeaderOrNull("X-Image-Meta-Name")).checksum(from.getFirstHeaderOrNull("X-Image-Meta-Checksum")).containerFormat(ContainerFormat.fromValue(from.getFirstHeaderOrNull("X-Image-Meta-Container_format"))).diskFormat(DiskFormat.fromValue(from.getFirstHeaderOrNull("X-Image-Meta-Disk_format"))).size(Long.parseLong(from.getFirstHeaderOrNull("X-Image-Meta-Size"))).minDisk(Long.parseLong(from.getFirstHeaderOrNull("X-Image-Meta-Min_disk"))).minRam(Long.parseLong(from.getFirstHeaderOrNull("X-Image-Meta-Min_ram"))).isPublic(Boolean.parseBoolean(from.getFirstHeaderOrNull("X-Image-Meta-Is_public"))).createdAt(dateService.iso8601SecondsDateParse(from.getFirstHeaderOrNull("X-Image-Meta-Created_at"))).updatedAt(dateService.iso8601SecondsDateParse(from.getFirstHeaderOrNull("X-Image-Meta-Updated_at"))).owner(from.getFirstHeaderOrNull("X-Image-Meta-Owner")).status(Image.Status.fromValue(from.getFirstHeaderOrNull("X-Image-Meta-Status")));
  String deletedAt=from.getFirstHeaderOrNull("X-Image-Meta-Deleted_at");
  if (deletedAt != null)   builder.deletedAt(dateService.iso8601SecondsDateParse(deletedAt));
  return builder.build();
}
