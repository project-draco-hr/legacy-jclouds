{
  Method method=SymphonyVPDCAsyncClient.class.getMethod("instantiateVAppTemplateInVDC",URI.class,URI.class,String.class,InstantiateVAppTemplateOptions[].class);
  HttpRequest request=processor.createRequest(method,URI.create("https://api.sandbox.symphonyVPDC.savvis.net/rest/api/v0.8/vdc/1"),URI.create("https://api.sandbox.symphonyVPDC.savvis.net/rest/api/v0.8/vAppTemplate/3"),"my-vapp",processorCount(1).memory(512).disk(1024).addNetworkConfig(new NetworkConfig(null,URI.create("https://vcloud.safesecureweb.com/network/1990"),FenceMode.BRIDGED)));
  assertRequestLineEquals(request,"POST https://api.sandbox.symphonyVPDC.savvis.net/rest/api/v0.8/vdc/1/action/instantiateVAppTemplate HTTP/1.1");
  assertNonPayloadHeadersEqual(request,"");
  assertPayloadEquals(request,Strings2.toStringAndClose(getClass().getResourceAsStream("/express/newvapp-hostingcpumemdisk.xml")).replace("vcloud.safesecureweb.com/api","api.sandbox.symphonyVPDC.savvis.net/rest/api"),"application/vnd.vmware.vcloud.instantiateVAppTemplateParams+xml",false);
  assertResponseParserClassEquals(method,request,ParseSax.class);
  assertSaxResponseParserClassEquals(method,VCloudExpressVAppHandler.class);
  assertExceptionParserClassEquals(method,null);
  checkFilters(request);
}
