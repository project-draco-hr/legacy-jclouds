{
  ComputeServiceContext<?,?> context=null;
  try {
    Location providerLocation=expectedProviderLocationFromResource(endpoint);
    context=ContextBuilder.newBuilder(AnonymousProviderMetadata.forApiWithEndpoint(new BYONApiMetadata(),endpoint)).modules(modules).build();
    assertEquals(context.getProviderSpecificContext().getEndpoint(),URI.create(endpoint));
    @SuppressWarnings("unchecked") Supplier<LoadingCache<String,Node>> supplier=(Supplier<LoadingCache<String,Node>>)context.getProviderSpecificContext().getApi();
    assertEquals(supplier.get().size(),context.getComputeService().listNodes().size());
    assertEquals(supplier.get().asMap(),ImmutableMap.<String,Node>of(NodesFromYamlTest.TEST1.getId(),NodesFromYamlTest.TEST1));
    assertEquals(context.getComputeService().listNodes().toString(),ImmutableSet.of(expectedNodeMetadataFromResource(endpoint)).toString());
    assertEquals(context.getComputeService().listAssignableLocations(),ImmutableSet.of(providerLocation));
  }
  finally {
    if (context != null)     context.close();
  }
}
