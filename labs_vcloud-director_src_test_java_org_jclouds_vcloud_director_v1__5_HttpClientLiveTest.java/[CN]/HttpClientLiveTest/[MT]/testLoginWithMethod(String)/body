{
  String user=identity.substring(0,identity.lastIndexOf('@'));
  String org=identity.substring(identity.lastIndexOf('@') + 1);
  String password=credential;
  String authHeader="Basic " + CryptoStreams.base64(String.format("%s@%s:%s",checkNotNull(user),checkNotNull(org),checkNotNull(password)).getBytes("UTF-8"));
  HttpResponse response=context.getUtils().getHttpClient().invoke(HttpRequest.builder().method(method).endpoint(endpoint + "/login").addHeader("Authorization",authHeader).addHeader("Accept","*/*").build());
  sessionWithToken=SessionWithToken.builder().session(session).token(response.getFirstHeaderOrNull("x-vcloud-authorization")).build();
  assertEquals(sessionWithToken.getSession().getUser(),user);
  assertEquals(sessionWithToken.getSession().getOrg(),org);
  assertTrue(sessionWithToken.getSession().getLinks().size() > 0);
  assertNotNull(sessionWithToken.getToken());
  OrgList orgList=parser.fromXML(Strings2.toStringAndClose(response.getPayload().getInput()),OrgList.class);
  assertTrue(orgList.getOrgs().size() > 0,"must have orgs");
  context.getApi().getOrgClient().getOrg(Iterables.getLast(orgList.getOrgs()).getHref());
}
