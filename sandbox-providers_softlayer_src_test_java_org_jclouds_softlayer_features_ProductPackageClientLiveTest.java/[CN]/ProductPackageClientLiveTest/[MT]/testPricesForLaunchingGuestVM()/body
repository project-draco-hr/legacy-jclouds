{
  Iterable<ProductItem> ramItems=Iterables.filter(cloudServerProductPackage.getItems(),Predicates.and(categoryCode("ram"),capacity(1.0f)));
  Map<Float,ProductItem> ramToProductItem=Maps.uniqueIndex(ramItems,new CapacityFromProductItem());
  ProductItemPrice ramPrice=new ProductItemPriceFromProductItem().apply(ramToProductItem.get(1.0f));
  Iterable<ProductItem> cpuItems=Iterables.filter(cloudServerProductPackage.getItems(),Predicates.and(units("PRIVATE_CORE"),capacity(2.0f)));
  Map<Float,ProductItem> coresToProductItem=Maps.uniqueIndex(cpuItems,new CapacityFromProductItem());
  ProductItemPrice cpuPrice=new ProductItemPriceFromProductItem().apply(coresToProductItem.get(2.0f));
  Iterable<ProductItem> operatingSystems=Iterables.filter(cloudServerProductPackage.getItems(),categoryCode("os"));
  Map<String,ProductItem> osToProductItem=Maps.uniqueIndex(operatingSystems,new DescriptionFromProductItem());
  ProductItemPrice osPrice=new ProductItemPriceFromProductItem().apply(osToProductItem.get("Ubuntu Linux 8 LTS Hardy Heron - Minimal Install (64 bit)"));
  Set<Long> prices=Sets.<Long>newLinkedHashSet();
  prices.addAll(SoftLayerConstants.DEFAULT_VIRTUAL_GUEST_PRICES);
  prices.add(ramPrice.getId());
  prices.add(cpuPrice.getId());
  prices.add(osPrice.getId());
}
