{
  String instanceName=vmName + "_" + i;
  IMachine adminNode=manager.getVBox().findMachine(adminNodeName);
  IMachine clonedVM=manager.getVBox().createMachine(settingsFile,instanceName,osTypeId,vmId,forceOverwrite);
  List<CloneOptions> options=new ArrayList<CloneOptions>();
  options.add(CloneOptions.Link);
  IProgress progress=adminNode.getCurrentSnapshot().getMachine().cloneTo(clonedVM,CloneMode.MachineState,options);
  if (progress.getCompleted())   logger().debug("clone done");
  manager.getVBox().registerMachine(clonedVM);
  ISession session=manager.getSessionObject();
  clonedVM.lockMachine(session,LockType.Write);
  IMachine mutable=session.getMachine();
  mutable.getNetworkAdapter(new Long(0)).setAttachmentType(NetworkAttachmentType.Bridged);
  String mac_address=manager.getVBox().getHost().generateMACAddress();
  System.out.println("mac_address " + mac_address);
  mutable.getNetworkAdapter(new Long(0)).setMACAddress(mac_address);
  if (isOSX(hostId)) {
    mutable.getNetworkAdapter(new Long(0)).setBridgedInterface(findBridgeInUse());
  }
 else {
    mutable.getNetworkAdapter(new Long(0)).setBridgedInterface("virbr0");
  }
  mutable.getNetworkAdapter(new Long(0)).setEnabled(true);
  mutable.saveSettings();
  session.unlockMachine();
  System.out.println("\nLaunching VM named " + clonedVM.getName() + " ...");
  launchVMProcess(clonedVM,manager.getSessionObject());
  clonedVM=manager.getVBox().findMachine(instanceName);
  String macAddressOfClonedVM=clonedVM.getNetworkAdapter(new Long(0)).getMACAddress();
  int offset=0, step=2;
  for (int j=1; j <= 5; j++) {
    macAddressOfClonedVM=new StringBuffer(macAddressOfClonedVM).insert(j * step + offset,":").toString().toLowerCase();
    offset++;
  }
  String simplifiedMacAddressOfClonedVM=macAddressOfClonedVM;
  if (isOSX(hostId)) {
    if (simplifiedMacAddressOfClonedVM.contains("00"))     simplifiedMacAddressOfClonedVM=new StringBuffer(simplifiedMacAddressOfClonedVM).delete(simplifiedMacAddressOfClonedVM.indexOf("00"),simplifiedMacAddressOfClonedVM.indexOf("00") + 1).toString();
    if (simplifiedMacAddressOfClonedVM.contains("0"))     if (simplifiedMacAddressOfClonedVM.indexOf("0") + 1 != ':' && simplifiedMacAddressOfClonedVM.indexOf("0") - 1 != ':')     simplifiedMacAddressOfClonedVM=new StringBuffer(simplifiedMacAddressOfClonedVM).delete(simplifiedMacAddressOfClonedVM.indexOf("0"),simplifiedMacAddressOfClonedVM.indexOf("0") + 1).toString();
  }
  Thread.sleep(35000);
  runScriptOnNode(hostId,"for i in $(seq 1 254) ; do ping -c 1 -t 1 192.168.122.$i & done",runAsRoot(false).wrapInInitScript(false));
  String arpLine=runScriptOnNode(hostId,"arp -an | grep " + simplifiedMacAddressOfClonedVM,runAsRoot(false).wrapInInitScript(false)).getOutput();
  String ipAddress=arpLine.substring(arpLine.indexOf("(") + 1,arpLine.indexOf(")"));
  System.out.println("IP address " + ipAddress);
}
