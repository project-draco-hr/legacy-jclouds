{
  String keyPairName=null;
  boolean shouldAutomaticallyCreateKeyPair=true;
  if (options instanceof EC2TemplateOptions) {
    keyPairName=EC2TemplateOptions.class.cast(options).getKeyPair();
    if (keyPairName == null)     shouldAutomaticallyCreateKeyPair=EC2TemplateOptions.class.cast(options).shouldAutomaticallyCreateKeyPair();
  }
  if (keyPairName == null && shouldAutomaticallyCreateKeyPair) {
    keyPairName=createOrImportKeyPair(region,group,options);
  }
 else   if (keyPairName != null) {
    if (options.getOverridingCredentials() != null && options.getOverridingCredentials().credential != null) {
      KeyPair keyPair=KeyPair.builder().region(region).keyName(keyPairName).keyFingerprint("//TODO").keyMaterial(options.getOverridingCredentials().credential).build();
      putKeyPairIntoCredentialMap(keyPair);
    }
  }
  if (options.getRunScript() != null) {
    RegionAndName regionAndName=new RegionAndName(region,keyPairName);
    checkState(credentialsMap.containsKey(regionAndName),"no private key configured for: %s; please use options.overrideLoginCredentialWith(rsa_private_text)",regionAndName);
  }
  return keyPairName;
}
