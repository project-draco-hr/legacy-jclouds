{
  checkNotNull(image.getLabel(),"Label cannot be null for OSImage %s",image);
  checkNotNull(image.getName(),"Name cannot be null for OSImage %s",image.getLabel());
  checkNotNull(image.getOS(),"OS cannot be null for OSImage: %s",image);
  assertNotEquals(image.getOS(),OSType.UNRECOGNIZED,"Status cannot be UNRECOGNIZED for OSImage: " + image);
  checkNotNull(image.getCategory(),"While Category can be null for OSImage, its Optional wrapper cannot: %s",image);
  if (image.getCategory().isPresent())   assertFalse(image.getCategory().get().trim().equals(""),"Invalid Category: " + image.toString());
  checkNotNull(image.getLogicalSizeInGB(),"While LogicalSizeInGB can be null for OSImage, its Optional wrapper cannot: %s",image);
  if (image.getLogicalSizeInGB().isPresent())   assertTrue(image.getLogicalSizeInGB().get() > 0,"LogicalSizeInGB should be positive, if set" + image.toString());
  checkNotNull(image.getMediaLink(),"While MediaLink can be null for OSImage, its Optional wrapper cannot: %s",image);
  if (image.getMediaLink().isPresent())   assertTrue(ImmutableSet.of("http","https").contains(image.getMediaLink().get().getScheme()),"MediaLink should be an http(s) url" + image.toString());
  checkNotNull(image.getDescription(),"While Description can be null for OSImage, its Optional wrapper cannot: %s",image);
  checkNotNull(image.getLocation(),"While Location can be null for OSImage, its Optional wrapper cannot: %s",image);
  if (image.getLocation().isPresent()) {
    assertTrue(locations.contains(image.getLocation().get()),"Location not in " + locations + " :"+ image.toString());
  }
  checkNotNull(image.getEula(),"While Eula can be null for OSImage, its Optional wrapper cannot: %s",image);
  if (image.getEula().isPresent()) {
    assertTrue(ImmutableSet.of("http","https").contains(image.getEula().get().getScheme()),"Eula should be an http(s) url" + image.toString());
  }
  checkNotNull(image.getAffinityGroup(),"While AffinityGroup can be null for OSImage, its Optional wrapper cannot: %s",image);
  if (image.getAffinityGroup().isPresent()) {
  }
}
