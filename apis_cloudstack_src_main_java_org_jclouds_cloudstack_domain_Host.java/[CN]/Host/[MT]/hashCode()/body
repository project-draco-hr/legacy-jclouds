{
  int result=(int)(id ^ (id >>> 32));
  result=31 * result + (allocationState != null ? allocationState.hashCode() : 0);
  result=31 * result + averageLoad;
  result=31 * result + (capabilities != null ? capabilities.hashCode() : 0);
  result=31 * result + (int)(clusterId ^ (clusterId >>> 32));
  result=31 * result + (clusterName != null ? clusterName.hashCode() : 0);
  result=31 * result + (clusterType != null ? clusterType.hashCode() : 0);
  result=31 * result + (cpuAllocated != null ? cpuAllocated.hashCode() : 0);
  result=31 * result + cpuNumber;
  result=31 * result + cpuSpeed;
  result=31 * result + (cpuUsed != null ? cpuUsed.hashCode() : 0);
  result=31 * result + (cpuWithOverProvisioning != +0.0f ? Float.floatToIntBits(cpuWithOverProvisioning) : 0);
  result=31 * result + (created != null ? created.hashCode() : 0);
  result=31 * result + (disconnected != null ? disconnected.hashCode() : 0);
  result=31 * result + (int)(diskSizeAllocated ^ (diskSizeAllocated >>> 32));
  result=31 * result + (int)(diskSizeTotal ^ (diskSizeTotal >>> 32));
  result=31 * result + (events != null ? events.hashCode() : 0);
  result=31 * result + (hasEnoughCapacity ? 1 : 0);
  result=31 * result + (hostTags != null ? hostTags.hashCode() : 0);
  result=31 * result + (hypervisor != null ? hypervisor.hashCode() : 0);
  result=31 * result + (ipAddress != null ? ipAddress.hashCode() : 0);
  result=31 * result + (localStorageActive ? 1 : 0);
  result=31 * result + (int)(jobId ^ (jobId >>> 32));
  result=31 * result + (jobStatus != null ? jobStatus.hashCode() : 0);
  result=31 * result + (lastPinged != null ? lastPinged.hashCode() : 0);
  result=31 * result + (int)(managementServerId ^ (managementServerId >>> 32));
  result=31 * result + (int)(memoryAllocated ^ (memoryAllocated >>> 32));
  result=31 * result + (int)(memoryTotal ^ (memoryTotal >>> 32));
  result=31 * result + (int)(memoryUsed ^ (memoryUsed >>> 32));
  result=31 * result + (name != null ? name.hashCode() : 0);
  result=31 * result + (int)(networkKbsRead ^ (networkKbsRead >>> 32));
  result=31 * result + (int)(networkKbsWrite ^ (networkKbsWrite >>> 32));
  result=31 * result + (int)(osCategoryId ^ (osCategoryId >>> 32));
  result=31 * result + (int)(osCategoryName ^ (osCategoryName >>> 32));
  result=31 * result + (int)(podId ^ (podId >>> 32));
  result=31 * result + (podName != null ? podName.hashCode() : 0);
  result=31 * result + (removed != null ? removed.hashCode() : 0);
  result=31 * result + (state != null ? state.hashCode() : 0);
  result=31 * result + (type != null ? type.hashCode() : 0);
  result=31 * result + (version != null ? version.hashCode() : 0);
  result=31 * result + (int)(zoneId ^ (zoneId >>> 32));
  result=31 * result + (zoneName != null ? zoneName.hashCode() : 0);
  return result;
}
