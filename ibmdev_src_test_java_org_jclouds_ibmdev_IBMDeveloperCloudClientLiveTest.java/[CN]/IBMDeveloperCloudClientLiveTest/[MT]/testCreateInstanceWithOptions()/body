{
  instance=connection.createInstanceInLocation(location.getId(),TAG,IMAGE_ID,"LARGE",attachIp(ip.getId()).authorizePublicKey(key.getName()).mountVolume(volume.getId(),"/mnt").configurationData(ImmutableMap.of("insight_admin_password","myPassword1","db2_admin_password","myPassword2","report_user_password","myPassword3")));
  assertEquals(instance.getLocation(),location.getId());
  assertNotNull(instance.getHostname());
  assertEquals(instance.getIp(),ip.getIp());
  assertEquals(instance.getKeyName(),key.getName());
  assertNotNull(instance.getExpirationTime());
  assertNotNull(instance.getLaunchTime());
  assertEquals(instance.getInstanceType(),"SMALL");
  assertNotNull(instance.getName());
  assertEquals(instance.getOwner(),user);
  assertEquals(instance.getImageId(),IMAGE_ID);
  assertEquals(instance.getSoftware(),ImmutableSet.<Software>of());
  assertEquals(instance.getProductCodes(),ImmutableSet.<String>of());
  assertEquals(instance.getStatus(),Instance.Status.NEW);
  assertNotNull(instance.getRequestName());
  volume=connection.getVolume(volume.getId());
  assertEquals(volume.getInstanceId(),instance.getId());
  refreshIp();
  assertEquals(ip.getInstanceId(),ip.getId());
}
