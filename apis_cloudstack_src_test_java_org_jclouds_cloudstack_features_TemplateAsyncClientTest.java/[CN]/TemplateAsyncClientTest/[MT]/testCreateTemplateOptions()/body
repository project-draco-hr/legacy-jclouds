{
  Invokable<?,?> method=Invokable.from(TemplateAsyncClient.class.getMethod("createTemplate",TemplateMetadata.class,CreateTemplateOptions[].class));
  HttpRequest httpRequest=processor.createRequest(method,ImmutableList.<Object>of(TemplateMetadata.builder().name("thename").osTypeId("10").displayText("description").build(),CreateTemplateOptions.Builder.bits(32).isFeatured(true).isPublic(true).passwordEnabled(true).requiresHVM(true).snapshotId("11").volumeId("12")));
  assertRequestLineEquals(httpRequest,"GET http://localhost:8080/client/api?response=json&command=createTemplate&bits=32&isfeatured=true&ispublic=true&passwordenabled=true&requireshvm=true&snapshotid=11&volumeid=12&name=thename&ostypeid=10&displaytext=description HTTP/1.1");
  assertNonPayloadHeadersEqual(httpRequest,"Accept: application/json\n");
  assertPayloadEquals(httpRequest,null,null,false);
  assertResponseParserClassEquals(method,httpRequest,UnwrapOnlyJsonValue.class);
  assertSaxResponseParserClassEquals(method,null);
  assertFallbackClassEquals(method,MapHttp4xxCodesToExceptions.class);
  checkFilters(httpRequest);
}
