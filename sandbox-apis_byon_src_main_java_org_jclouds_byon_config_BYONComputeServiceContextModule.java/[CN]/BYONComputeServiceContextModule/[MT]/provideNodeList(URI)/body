{
  return new Supplier<Map<String,Node>>(){
    @Override public Map<String,Node> get(){
      Constructor constructor=new Constructor(Config.class);
      TypeDescription configDesc=new TypeDescription(Config.class);
      configDesc.putMapPropertyType("nodes",String.class,Node.class);
      constructor.addTypeDescription(configDesc);
      Yaml yaml=new Yaml(new Loader(constructor));
      Config config;
      try {
        URL url=uri.toURL();
        InputStream input=url.openStream();
        config=(Config)yaml.load(input);
      }
 catch (      MalformedURLException e) {
        logger.error(e,"URI is not a URL: %s",uri);
        return ImmutableMap.<String,Node>of();
      }
catch (      IOException e) {
        logger.error(e,"URI could not be read: %s",uri);
        return ImmutableMap.<String,Node>of();
      }
      return config.nodes;
    }
  }
;
}
