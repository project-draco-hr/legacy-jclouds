{
  HttpRequest request=HttpRequest.builder().method("GET").endpoint(URI.create("http://localhost:8080/client/api?response=json&command=createZone&" + "name=test-zone&dns1=8.8.8.8&networktype=Basic&internaldns1=10.10.10.10&" + "apiKey=identity&signature=hWNmM2%2BTsfb5DelQa/GJLN5DVWE%3D")).headers(ImmutableMultimap.<String,String>builder().put("Accept","application/json").build()).build();
  GlobalZoneClient client=requestSendsResponse(request,HttpResponse.builder().statusCode(200).payload(payloadFromResource("/createzoneresponse.json")).build());
  assertEquals(client.createZone("test-zone",NetworkType.BASIC,"8.8.8.8","10.10.10.10"),Zone.builder().id("6").name("test-zone").DNS(ImmutableList.of("8.8.8.8")).internalDNS(ImmutableList.of("10.10.10.10")).networkType(NetworkType.BASIC).securityGroupsEnabled(true).allocationState(AllocationState.ENABLED).zoneToken("7b6e27df-30a6-3024-9d8b-7971a3127f64").dhcpProvider("DhcpServer").build());
  client=requestSendsResponse(request,HttpResponse.builder().statusCode(404).build());
  assertNull(client.createZone("test-zone",NetworkType.BASIC,"8.8.8.8","10.10.10.10"));
}
