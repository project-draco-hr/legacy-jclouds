{
  HttpRequest getMetricStatistics=HttpRequest.builder().method("POST").endpoint("https://monitoring.us-east-1.amazonaws.com/").addHeader("Host","monitoring.us-east-1.amazonaws.com").payload(payloadFromStringWithContentType("Action=GetMetricStatistics" + "&Dimensions.member.1.Name=InstanceId" + "&Dimensions.member.1.Value=SOMEINSTANCEID"+ "&Dimensions.member.2.Name=InstanceType"+ "&Dimensions.member.2.Value=t1.micro"+ "&EndTime=1970-01-01T02%3A46%3A40Z"+ "&MetricName=CPUUtilization"+ "&Namespace=AWS%2FEC2"+ "&Period=60"+ "&Signature=e0WyI%2FNm4hN2%2BMEm1mjRUzsvgvMCdFXbVJWi4ORpwic%3D"+ "&SignatureMethod=HmacSHA256"+ "&SignatureVersion=2"+ "&StartTime=1970-01-01T02%3A46%3A40Z"+ "&Statistics.member.1=Maximum"+ "&Statistics.member.2=Minimum"+ "&Timestamp=2009-11-08T15%3A54%3A08.897Z"+ "&Unit=Percent"+ "&Version=2010-08-01"+ "&AWSAccessKeyId=identity","application/x-www-form-urlencoded")).build();
  HttpResponse getMetricStatisticsResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/get_metric_statistics.xml","text/xml")).build();
  CloudWatchClient clientWhenMetricsExist=requestSendsResponse(getMetricStatistics,getMetricStatisticsResponse);
  Dimension dimension1=new Dimension(EC2Constants.Dimension.INSTANCE_ID,"SOMEINSTANCEID");
  Dimension dimension2=new Dimension(EC2Constants.Dimension.INSTANCE_TYPE,"t1.micro");
  assertEquals(clientWhenMetricsExist.getMetricClientForRegion(null).getMetricStatistics(stats,GetMetricStatisticsOptions.Builder.dimension(dimension1).dimension(dimension2)).toString(),"GetMetricStatisticsResponse{label=CPUUtilization, " + "datapoints=[Datapoint{timestamp=Thu Jan 15 16:00:00 PST 2009, customUnit=null, maximum=null, " + "minimum=null, average=0.17777777777777778, sum=null, samples=9.0, unit=Percent}, "+ "Datapoint{timestamp=Thu Jan 15 16:01:00 PST 2009, customUnit=null, maximum=null, minimum=null, "+ "average=0.1, sum=null, samples=8.0, unit=Percent}]}");
}
