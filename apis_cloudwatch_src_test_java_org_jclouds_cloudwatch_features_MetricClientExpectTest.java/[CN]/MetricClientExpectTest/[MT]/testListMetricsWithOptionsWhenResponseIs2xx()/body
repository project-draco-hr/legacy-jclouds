{
  HttpRequest listMetricsWithOptions=HttpRequest.builder().method("POST").endpoint(URI.create("https://monitoring.us-east-1.amazonaws.com/")).headers(ImmutableMultimap.<String,String>builder().put("Host","monitoring.us-east-1.amazonaws.com").build()).payload(payloadFromStringWithContentType(new StringBuilder().append("Action=ListMetrics").append('&').append("Dimensions.member.1.Name=InstanceId").append('&').append("Dimensions.member.1.Value=SOMEINSTANCEID").append('&').append("MetricName=CPUUtilization").append('&').append("Namespace=SOMENEXTTOKEN").append('&').append("NextToken=AWS%2FEC2").append('&').append("Signature=G05HKEx9FJpGZBk02OVYwt3u4g%2FilAY9nU5hJI9LDXA%3D").append('&').append("SignatureMethod=HmacSHA256").append('&').append("SignatureVersion=2").append('&').append("Timestamp=2009-11-08T15%3A54%3A08.897Z").append('&').append("Version=2010-08-01").append('&').append("AWSAccessKeyId=identity").toString(),"application/x-www-form-urlencoded")).build();
  HttpResponse listMetricsWithOptionsResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResourceWithContentType("/list_metrics.xml","text/xml")).build();
  CloudWatchClient clientWhenMetricsWithOptionsExist=requestSendsResponse(listMetricsWithOptions,listMetricsWithOptionsResponse);
  assertEquals(clientWhenMetricsWithOptionsExist.getMetricClientForRegion(null).listMetrics(ListMetricsOptions.builder().dimension(new Dimension(EC2Constants.Dimension.INSTANCE_ID,"SOMEINSTANCEID")).metricName(EC2Constants.MetricName.CPU_UTILIZATION).namespace("SOMENEXTTOKEN").nextToken(Namespaces.EC2).build()).toString(),"ListMetricsResponse{metrics=[Metric{namespace=AWS/EC2, metricName=CPUUtilization, dimension=[Dimension{name=InstanceId, value=i-689fcf0f}]}], nextToken=null}");
}
