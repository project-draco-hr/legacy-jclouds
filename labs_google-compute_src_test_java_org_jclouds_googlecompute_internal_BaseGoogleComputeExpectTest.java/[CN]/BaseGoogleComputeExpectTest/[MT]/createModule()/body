{
  return new Module(){
    @Override public void configure(    Binder binder){
      binder.bind(Ticker.class).toInstance(new Ticker(){
        @Override public long read(){
          return 0;
        }
      }
);
      final AtomicInteger suffix=new AtomicInteger();
      binder.bind(new TypeLiteral<Supplier<String>>(){
      }
).toInstance(new Supplier<String>(){
        @Override public String get(){
          return suffix.getAndIncrement() + "";
        }
      }
);
    }
  }
;
}
