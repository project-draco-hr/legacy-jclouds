{
  try {
    Location toReturn=Iterables.find(set,new Predicate<Location>(){
      @Override public boolean apply(      Location input){
switch (input.getScope()) {
case ZONE:
          return input.getParent().getId().equals(region);
case REGION:
        return input.getId().equals(region);
default :
      return false;
  }
}
}
);
return toReturn.getScope() == LocationScope.REGION ? toReturn : toReturn.getParent();
}
 catch (NoSuchElementException e) {
throw new IllegalStateException(String.format("region: %s not found in %s",region,set));
}
}
