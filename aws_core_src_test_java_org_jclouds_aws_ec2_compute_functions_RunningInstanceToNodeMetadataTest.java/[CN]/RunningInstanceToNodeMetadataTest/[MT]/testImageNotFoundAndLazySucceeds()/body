{
  AMIClient amiClient=createMock(AMIClient.class);
  Map<RegionAndName,KeyPair> credentialsMap=createMock(Map.class);
  org.jclouds.compute.domain.Image jcImage=createMock(org.jclouds.compute.domain.Image.class);
  ConcurrentMap<RegionAndName,org.jclouds.compute.domain.Image> imageMap=createMock(ConcurrentMap.class);
  Location location=new LocationImpl(LocationScope.ZONE,"us-east-1a","description",null);
  Set<Location> locations=ImmutableSet.<Location>of(location);
  PopulateDefaultLoginCredentialsForImageStrategy credentialProvider=createMock(PopulateDefaultLoginCredentialsForImageStrategy.class);
  RunningInstance instance=createMock(RunningInstance.class);
  expect(instance.getId()).andReturn("id").atLeastOnce();
  expect(instance.getGroupIds()).andReturn(ImmutableSet.<String>of()).atLeastOnce();
  expect(instance.getKeyName()).andReturn(null).atLeastOnce();
  expect(instance.getInstanceState()).andReturn(InstanceState.RUNNING);
  expect(instance.getIpAddress()).andReturn("127.0.0.1");
  expect(instance.getPrivateIpAddress()).andReturn("127.0.0.1");
  expect(instance.getAvailabilityZone()).andReturn(AvailabilityZone.US_EAST_1A).atLeastOnce();
  expect(instance.getImageId()).andReturn("imageId").atLeastOnce();
  expect(jcImage.getProviderId()).andReturn("notImageId").atLeastOnce();
  expect(instance.getRegion()).andReturn("us-east-1").atLeastOnce();
  org.jclouds.compute.domain.Image lateImage=createMock(org.jclouds.compute.domain.Image.class);
  expect(imageMap.get(new RegionAndName("us-east-1","imageId"))).andReturn(lateImage).atLeastOnce();
  expect(instance.getInstanceType()).andReturn(InstanceType.C1_XLARGE).atLeastOnce();
  replay(lateImage);
  replay(imageMap);
  replay(jcImage);
  replay(amiClient);
  replay(credentialsMap);
  replay(credentialProvider);
  replay(instance);
  RunningInstanceToNodeMetadata parser=new RunningInstanceToNodeMetadata(amiClient,credentialsMap,credentialProvider,new ImageProvider(jcImage),imageMap,locations,new RunningInstanceToStorageMappingUnix());
  NodeMetadata metadata=parser.apply(instance);
  assertEquals(metadata.getLocation(),locations.iterator().next());
  assertEquals(metadata.getImage(),lateImage);
  assertEquals(metadata.getTag(),"NOTAG-id");
  assertEquals(metadata.getCredentials(),null);
  verify(lateImage);
  verify(imageMap);
  verify(jcImage);
  verify(amiClient);
  verify(credentialsMap);
  verify(credentialProvider);
  verify(instance);
}
