{
  checkState(template instanceof CloneImageTemplate," openstack-nova only supports creating images through cloning.");
  CloneImageTemplate cloneTemplate=(CloneImageTemplate)template;
  ZoneAndId sourceImageZoneAndId=ZoneAndId.fromSlashEncoded(cloneTemplate.getSourceNodeId());
  String newImageId=novaApi.getServerApiForZone(sourceImageZoneAndId.getZone()).createImageFromServer(cloneTemplate.getName(),sourceImageZoneAndId.getId());
  final ZoneAndId targetImageZoneAndId=ZoneAndId.fromZoneAndId(sourceImageZoneAndId.getZone(),newImageId);
  logger.info(">> Registered new Image %s, waiting for it to become available.",newImageId);
  final AtomicReference<Image> image=Atomics.newReference(new ImageBuilder().location(find(locations.get(),idEquals(targetImageZoneAndId.getZone()))).id(targetImageZoneAndId.slashEncode()).providerId(targetImageZoneAndId.getId()).description(cloneTemplate.getName()).operatingSystem(OperatingSystem.builder().description(cloneTemplate.getName()).build()).status(Image.Status.PENDING).build());
  return userExecutor.submit(new Callable<Image>(){
    @Override public Image call() throws Exception {
      if (imageAvailablePredicate.apply(image))       return image.get();
      throw new UncheckedTimeoutException("Image was not created within the time limit: " + image.get());
    }
  }
);
}
