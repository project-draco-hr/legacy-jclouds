{
  return new TypeAdapter<FluentIterable<E>>(){
    public void write(    JsonWriter out,    FluentIterable<E> value) throws IOException {
      out.beginArray();
      for (      E element : value) {
        elementAdapter.write(out,element);
      }
      out.endArray();
    }
    public FluentIterable<E> read(    JsonReader in) throws IOException {
      in.beginArray();
      Builder<E> builder=ImmutableList.<E>builder();
      while (in.hasNext()) {
        E element=elementAdapter.read(in);
        if (element != null)         builder.add(element);
      }
      in.endArray();
      return FluentIterable.from(builder.build());
    }
  }
.nullSafe();
}
