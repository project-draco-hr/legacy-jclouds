{
  super.configure();
  bind(new TypeLiteral<Function<Iterable<CatalogItem>,Iterable<VAppTemplate>>>(){
  }
).to(new TypeLiteral<VAppTemplatesForCatalogItems>(){
  }
);
  bind(ResourceAllocationSettingDataHandler.class).to(VCloudResourceAllocationSettingDataHandler.class);
  installDefaultVCloudEndpointsModule();
  bind(new TypeLiteral<Function<ReferenceType,Location>>(){
  }
).to(new TypeLiteral<FindLocationForResource>(){
  }
);
  bind(new TypeLiteral<Function<Org,Iterable<Catalog>>>(){
  }
).to(new TypeLiteral<CatalogsInOrg>(){
  }
);
  bind(new TypeLiteral<Function<Org,Iterable<VDC>>>(){
  }
).to(new TypeLiteral<VDCsInOrg>(){
  }
);
  bind(new TypeLiteral<Function<Iterable<String>,Iterable<Org>>>(){
  }
).to(new TypeLiteral<OrgsForNames>(){
  }
);
  bind(new TypeLiteral<Function<Iterable<Location>,Iterable<Org>>>(){
  }
).to(new TypeLiteral<OrgsForLocations>(){
  }
);
  bind(new TypeLiteral<Function<Catalog,Iterable<CatalogItem>>>(){
  }
).to(new TypeLiteral<CatalogItemsInCatalog>(){
  }
);
  bind(new TypeLiteral<Function<Org,Iterable<CatalogItem>>>(){
  }
).to(new TypeLiteral<CatalogItemsInOrg>(){
  }
);
  bindCacheLoaders();
  bind(new TypeLiteral<Function<VAppTemplate,String>>(){
  }
).annotatedWith(Network.class).to(new TypeLiteral<DefaultNetworkNameInTemplate>(){
  }
);
  bind(new TypeLiteral<Function<VAppTemplate,Envelope>>(){
  }
).to(new TypeLiteral<ValidateVAppTemplateAndReturnEnvelopeOrThrowIllegalArgumentException>(){
  }
);
  bindHttpApi(binder(),VCloudVersionsClient.class,VCloudVersionsAsyncClient.class);
  bindHttpApi(binder(),VCloudLoginClient.class,VCloudLoginAsyncClient.class);
}
