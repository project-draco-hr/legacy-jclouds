{
  checkState(args != null,"args should be initialized at this point");
  PCSFile file=null;
  for (  Object arg : args) {
    if (arg instanceof PCSFile)     file=(PCSFile)arg;
  }
  checkState(file != null,"No PCSFile found in args, improper method declarations");
  checkState(request != null,"request should be initialized at this point");
  try {
    String toParse=Utils.toStringAndClose(from.getContent());
    logger.trace("%s: received the following response: %s",from,toParse);
    URI uri=URI.create(toParse.trim());
    Set<Future<Void>> puts=Sets.newHashSet();
    for (    Entry<String,String> entry : file.getMetadata().getUserMetadata().entries()) {
      URI key=UriBuilder.fromUri(uri).path(String.format("metadata/%s",entry.getKey())).build();
      puts.add(util.put(key,entry.getValue()));
    }
    for (    Future<Void> put : puts) {
      try {
        put.get(requestTimeoutMilliseconds,TimeUnit.MILLISECONDS);
      }
 catch (      Exception e) {
        Utils.<BlobRuntimeException>rethrowIfRuntimeOrSameType(e);
        throw new BlobRuntimeException("Error putting metadata for file: " + file,e);
      }
    }
    return PCSUtils.getEtag(uri);
  }
 catch (  IOException e) {
    throw new HttpResponseException("couldn't parse url from response",null,from,e);
  }
}
