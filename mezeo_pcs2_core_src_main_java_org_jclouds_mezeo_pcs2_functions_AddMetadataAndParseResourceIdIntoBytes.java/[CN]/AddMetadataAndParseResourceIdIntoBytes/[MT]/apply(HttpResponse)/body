{
  if (from.getStatusCode() > 204)   throw new BlobRuntimeException("Incorrect code for: " + from);
  checkState(request != null,"request should be initialized at this point");
  checkState(args != null,"args should be initialized at this point");
  checkArgument(args[0] instanceof String,"arg[0] must be a container name");
  checkArgument(args[1] instanceof PCSFile,"arg[1] must be a pcsfile");
  String container=args[0].toString();
  PCSFile file=(PCSFile)args[1];
  Key key=new Key(container,file.getKey());
  String id=checkNotNull(fileCache.get(key),String.format("file %s should have an id in cache by now",key));
  IOUtils.closeQuietly(from.getContent());
  Set<Future<Void>> puts=Sets.newHashSet();
  for (  Entry<String,String> entry : file.getMetadata().getUserMetadata().entries()) {
    puts.add(util.putMetadata(id,entry.getKey(),entry.getValue()));
  }
  for (  Future<Void> put : puts) {
    try {
      put.get(requestTimeoutMilliseconds,TimeUnit.MILLISECONDS);
    }
 catch (    Exception e) {
      Utils.<BlobRuntimeException>rethrowIfRuntimeOrSameType(e);
      throw new BlobRuntimeException("Error putting metadata for file: " + file,e);
    }
  }
  return PCSUtils.getETag(id);
}
