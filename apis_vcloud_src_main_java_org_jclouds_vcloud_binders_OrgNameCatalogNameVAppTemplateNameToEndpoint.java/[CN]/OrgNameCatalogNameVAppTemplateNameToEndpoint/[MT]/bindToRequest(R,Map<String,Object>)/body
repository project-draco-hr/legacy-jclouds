{
  Object org=postParams.get("orgName");
  Object catalog=postParams.get("catalogName");
  Object catalogItem=postParams.get("itemName");
  if (org == null)   org=defaultOrg.get().getName();
  if (catalog == null)   catalog=defaultCatalog.get().getName();
  Map<String,Map<String,Map<String,CatalogItem>>> orgCatalogItemMap=this.orgCatalogItemMap.get();
  if (!orgCatalogItemMap.containsKey(org))   throw new NoSuchElementException("org: " + org + " not found in "+ orgCatalogItemMap.keySet());
  Map<String,Map<String,CatalogItem>> catalogs=orgCatalogItemMap.get(org);
  if (!catalogs.containsKey(catalog))   throw new NoSuchElementException("catalog: " + org + "/"+ catalog+ " not found in "+ catalogs.keySet());
  Map<String,CatalogItem> catalogMap=catalogs.get(catalog);
  if (!catalogMap.containsKey(catalogItem))   throw new NoSuchElementException("item: " + org + "/"+ catalog+ "/"+ catalogItem+ " not found in "+ catalogMap.keySet());
  CatalogItem item=catalogMap.get(catalogItem);
  URI endpoint=checkNotNull(item.getEntity(),"item: " + org + "/"+ catalog+ "/"+ catalogItem+ " has no entity").getHref();
  return (R)request.toBuilder().endpoint(endpoint).build();
}
