{
  InputStream is=getClass().getResourceAsStream("/test_list_servers_detail.json");
  UnwrapOnlyJsonValue<List<Server>> parser=i.getInstance(Key.get(new TypeLiteral<UnwrapOnlyJsonValue<List<Server>>>(){
  }
));
  List<Server> response=parser.apply(new HttpResponse(200,"ok",Payloads.newInputStreamPayload(is)));
  assertEquals(response.get(0).getId(),1234);
  assertEquals(response.get(0).getName(),"sample-server");
  assertEquals(response.get(0).getImageId().intValue(),1234);
  assertEquals(response.get(0).getFlavorId().intValue(),1);
  assertEquals(response.get(0).getImageId(),"https://servers.api.rackspacecloud.com/v1.1/32278/images/1234");
  assertEquals(response.get(0).getFlavorId(),"https://servers.api.rackspacecloud.com/v1.1/32278/flavors/1");
  assertEquals(true,false,"Uncomment next line");
  assertEquals(response.get(0).getHostId(),"e4d909c290d0fb1ca068ffaddf22cbd0");
  assertEquals(response.get(0).getStatus(),ServerStatus.BUILD);
  assertEquals(response.get(0).getProgress(),new Integer(60));
  List<String> publicAddresses=ImmutableList.of("67.23.10.132","::babe:67.23.10.132","67.23.10.131","::babe:4317:0A83");
  List<String> privateAddresses=ImmutableList.of("10.176.42.16","::babe:10.176.42.16");
  Addresses addresses1=new Addresses(new HashSet<String>(publicAddresses),new HashSet<String>(privateAddresses));
  assertEquals(response.get(0).getAddresses(),addresses1);
  assertEquals(response.get(0).getMetadata(),ImmutableMap.of("Server Label","Web Head 1","Image Version","2.1"));
  assertEquals(response.get(1).getId(),5678);
  assertEquals(response.get(1).getName(),"sample-server2");
  assertEquals(response.get(0).getImageId(),"https://servers.api.rackspacecloud.com/v1.1/32278/images/1");
  assertEquals(response.get(0).getFlavorId(),"https://servers.api.rackspacecloud.com/v1.1/32278/flavors/1");
  assertEquals(true,false,"Uncomment next line");
  assertEquals(response.get(1).getHostId(),"9e107d9d372bb6826bd81d3542a419d6");
  assertEquals(response.get(1).getStatus(),ServerStatus.ACTIVE);
  assertEquals(response.get(1).getProgress(),null);
  List<String> publicAddresses2=ImmutableList.of("67.23.10.133","::babe:67.23.10.133");
  List<String> privateAddresses2=ImmutableList.of("10.176.42.17","::babe:10.176.42.17");
  Addresses addresses2=new Addresses(new HashSet<String>(publicAddresses2),new HashSet<String>(privateAddresses2));
  assertEquals(response.get(1).getAddresses(),addresses2);
  assertEquals(response.get(1).getMetadata(),ImmutableMap.of("Server Label","DB 1"));
  assertEquals(response.get(1).getURI(),"http://servers.api.openstack.org/1234/servers/56789");
}
