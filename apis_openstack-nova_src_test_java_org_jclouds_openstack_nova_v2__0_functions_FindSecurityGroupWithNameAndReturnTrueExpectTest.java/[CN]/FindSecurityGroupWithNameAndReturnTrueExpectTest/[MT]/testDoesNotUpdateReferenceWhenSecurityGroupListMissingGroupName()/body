{
  HttpRequest list=HttpRequest.builder().method("GET").endpoint(URI.create("https://az-1.region-a.geo-1.compute.hpcloudsvc.com/v1.1/3456/os-security-groups")).headers(ImmutableMultimap.<String,String>builder().put("Accept","application/json").put("X-Auth-Token",authToken).build()).build();
  HttpResponse listResponse=HttpResponse.builder().statusCode(200).payload(payloadFromResource("/securitygroup_list.json")).build();
  NovaApi apiWhenSecurityGroupsExist=requestsSendResponses(keystoneAuthWithUsernameAndPasswordAndTenantName,responseWithKeystoneAccess,extensionsOfNovaRequest,extensionsOfNovaResponse,list,listResponse);
  FindSecurityGroupWithNameAndReturnTrue predicate=new FindSecurityGroupWithNameAndReturnTrue(apiWhenSecurityGroupsExist);
  ZoneAndName zoneAndGroup=ZoneAndName.fromZoneAndName("az-1.region-a.geo-1","name2");
  AtomicReference<ZoneAndName> securityGroupInZoneRef=new AtomicReference<ZoneAndName>(zoneAndGroup);
  assertFalse(predicate.apply(securityGroupInZoneRef));
  assertEquals(securityGroupInZoneRef.get(),zoneAndGroup);
}
