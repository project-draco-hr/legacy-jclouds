{
  if (qName.equals("ID")) {
    currentOwner=new CanonicalUser(currentOrNull(currentText));
  }
 else   if (qName.equals("DisplayName")) {
    currentOwner.setDisplayName(currentOrNull(currentText));
  }
 else   if (qName.equals("Key")) {
    currentKey=currentOrNull(currentText);
    builder.key(currentKey);
    builder.uri(uriBuilders.get().uri(getRequest().getEndpoint()).path(currentKey).replaceQuery("").build());
  }
 else   if (qName.equals("LastModified")) {
    builder.lastModified(dateParser.iso8601DateParse(currentOrNull(currentText)));
  }
 else   if (qName.equals("ETag")) {
    String currentETag=currentOrNull(currentText);
    builder.eTag(currentETag);
    builder.contentMD5(CryptoStreams.hex(Strings2.replaceAll(currentETag,'"',"")));
  }
 else   if (qName.equals("Size")) {
    builder.contentLength(new Long(currentOrNull(currentText)));
  }
 else   if (qName.equals("Owner")) {
    builder.owner(currentOwner);
    currentOwner=null;
  }
 else   if (qName.equals("StorageClass")) {
    builder.storageClass(ObjectMetadata.StorageClass.valueOf(currentOrNull(currentText)));
  }
 else   if (qName.equals("Contents")) {
    contents.add(builder.build());
    builder=new ObjectMetadataBuilder().bucket(bucketName);
  }
 else   if (qName.equals("Name")) {
    this.bucketName=currentOrNull(currentText);
    builder.bucket(bucketName);
  }
 else   if (qName.equals("Prefix")) {
    String prefix=currentOrNull(currentText);
    if (inCommonPrefixes)     commonPrefixes.add(prefix);
 else     this.prefix=prefix;
  }
 else   if (qName.equals("Delimiter")) {
    this.delimiter=currentOrNull(currentText);
  }
 else   if (qName.equals("Marker")) {
    this.marker=currentOrNull(currentText);
  }
 else   if (qName.equals("NextMarker")) {
    this.nextMarker=currentOrNull(currentText);
  }
 else   if (qName.equals("MaxKeys")) {
    this.maxResults=Integer.parseInt(currentOrNull(currentText));
  }
 else   if (qName.equals("IsTruncated")) {
    this.isTruncated=Boolean.parseBoolean(currentOrNull(currentText));
  }
  currentText=new StringBuilder();
}
