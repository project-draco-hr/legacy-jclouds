{
  String payload=Strings2.toStringAndClose(InstanceApiExpectTest.class.getResourceAsStream("/instance_get.json"));
  payload=payload.replace("test-0","test-1");
  HttpResponse getInstanceResponse=HttpResponse.builder().statusCode(200).payload(payloadFromStringWithContentType(payload,"application/json")).build();
  List<HttpRequest> orderedRequests=ImmutableList.<HttpRequest>builder().add(requestForScopes(COMPUTE_READONLY_SCOPE)).add(LIST_ZONES_REQ).add(LIST_PROJECT_IMAGES_REQUEST).add(LIST_GOOGLE_IMAGES_REQUEST).add(LIST_MACHINE_TYPES_REQUEST).add(GET_NETWORK_REQUEST).add(requestForScopes(COMPUTE_SCOPE)).add(INSERT_NETWORK_REQUEST).add(GET_OPERATION_REQUEST).add(GET_NETWORK_REQUEST).add(GET_FIREWALL_REQUEST).add(INSERT_FIREWALL_REQUEST).add(GET_OPERATION_REQUEST).add(LIST_INSTANCES_REQUEST).add(LIST_PROJECT_IMAGES_REQUEST).add(LIST_GOOGLE_IMAGES_REQUEST).add(LIST_ZONES_REQ).add(LIST_MACHINE_TYPES_REQUEST).add(createInstanceRequestForInstance("test-1","jclouds-test",openSshKey)).add(GET_OPERATION_REQUEST).add(getInstanceRequestForInstance("test-1")).add(LIST_PROJECT_IMAGES_REQUEST).add(LIST_GOOGLE_IMAGES_REQUEST).add(LIST_ZONES_REQ).add(LIST_MACHINE_TYPES_REQUEST).build();
  List<HttpResponse> orderedResponses=ImmutableList.<HttpResponse>builder().add(TOKEN_RESPONSE).add(LIST_ZONES_RESPONSE).add(LIST_PROJECT_IMAGES_RESPONSE).add(LIST_GOOGLE_IMAGES_RESPONSE).add(LIST_MACHINE_TYPES_RESPONSE).add(HttpResponse.builder().statusCode(404).build()).add(TOKEN_RESPONSE).add(SUCESSFULL_OPERATION_RESPONSE).add(GET_OPERATION_RESPONSE).add(GET_NETWORK_RESPONSE).add(HttpResponse.builder().statusCode(404).build()).add(SUCESSFULL_OPERATION_RESPONSE).add(GET_OPERATION_RESPONSE).add(LIST_INSTANCES_RESPONSE).add(LIST_PROJECT_IMAGES_RESPONSE).add(LIST_GOOGLE_IMAGES_RESPONSE).add(LIST_ZONES_RESPONSE).add(LIST_MACHINE_TYPES_RESPONSE).add(SUCESSFULL_OPERATION_RESPONSE).add(GET_OPERATION_RESPONSE).add(getInstanceResponse).add(LIST_PROJECT_IMAGES_RESPONSE).add(LIST_GOOGLE_IMAGES_RESPONSE).add(LIST_ZONES_RESPONSE).add(LIST_MACHINE_TYPES_RESPONSE).build();
  ComputeService computeService=orderedRequestsSendResponses(orderedRequests,orderedResponses);
  GoogleComputeTemplateOptions options=computeService.templateOptions().as(GoogleComputeTemplateOptions.class);
  getOnlyElement(computeService.createNodesInGroup("test",1,options));
}
