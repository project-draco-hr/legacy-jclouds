{
  final long SLEEP_TIME=250;
  final long EXPIRATION_TIME=200;
  Supplier<Integer> slowSupplier=new CountingSupplier(){
    private static final long serialVersionUID=1L;
    @Override public Integer get(){
      try {
        Thread.sleep(SLEEP_TIME);
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
      }
      return super.get();
    }
  }
;
  Supplier<Integer> memoizedSupplier=new MemoizedRetryOnTimeOutButNotOnAuthorizationExceptionSupplier(new AtomicReference<AuthorizationException>(),slowSupplier,EXPIRATION_TIME,TimeUnit.MILLISECONDS);
  assertEquals(memoizedSupplier.get(),(Integer)10);
  assertEquals(memoizedSupplier.get(),(Integer)10);
}
