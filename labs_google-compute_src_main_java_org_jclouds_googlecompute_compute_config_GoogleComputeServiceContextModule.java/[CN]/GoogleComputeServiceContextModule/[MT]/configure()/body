{
  super.configure();
  bind(ComputeService.class).to(GoogleComputeService.class);
  bind(new TypeLiteral<ComputeServiceAdapter<Instance,MachineType,Image,Zone>>(){
  }
).to(GoogleComputeServiceAdapter.class);
  bind(new TypeLiteral<Function<Instance,NodeMetadata>>(){
  }
).to(InstanceToNodeMetadata.class);
  bind(new TypeLiteral<Function<MachineType,Hardware>>(){
  }
).to(MachineTypeToHardware.class);
  bind(new TypeLiteral<Function<Image,org.jclouds.compute.domain.Image>>(){
  }
).to(GoogleComputeImageToImage.class);
  bind(new TypeLiteral<Function<Zone,Location>>(){
  }
).to(ZoneToLocation.class);
  bind(new TypeLiteral<Function<TemplateOptions,ImmutableMap.Builder<String,String>>>(){
  }
).to(BuildInstanceMetadata.class);
  bind(PopulateDefaultLoginCredentialsForImageStrategy.class).to(GoogleComputePopulateDefaultLoginCredentialsForImageStrategy.class);
  bind(CreateNodesWithGroupEncodedIntoNameThenAddToSet.class).to(ApplyTemplateOptionsCreateNodesWithGroupEncodedIntoNameThenAddToSet.class);
  bind(TemplateOptions.class).to(GoogleComputeTemplateOptions.class);
  bind(new TypeLiteral<Function<Set<? extends NodeMetadata>,Set<String>>>(){
  }
).to(OrphanedGroupsFromDeadNodes.class);
  bind(new TypeLiteral<Predicate<String>>(){
  }
).to(AllNodesInGroupTerminated.class);
  bind(PrioritizeCredentialsFromTemplate.class).to(UseNodeCredentialsButOverrideFromTemplate.class);
  install(new LocationsFromComputeServiceAdapterModule<Instance,MachineType,Image,Zone>(){
  }
);
}
