{
  RestContext<AbiquoApi,AbiquoAsyncApi> context=EasyMock.createMock(RestContext.class);
  VirtualMachineTemplateToHardware function=new VirtualMachineTemplateToHardware();
  VirtualMachineTemplateDto dto=new VirtualMachineTemplateDto();
  dto.setId(5);
  dto.setName("Template");
  dto.setDescription("Template description");
  dto.setHdRequired(50L * 1024 * 1024* 1024);
  dto.setCpuRequired(5);
  dto.setRamRequired(2048);
  dto.addLink(new RESTLink("edit","http://foo/bar"));
  Hardware hardware=function.apply(wrap(context,VirtualMachineTemplate.class,dto));
  assertEquals(hardware.getId(),dto.getId().toString());
  assertEquals(hardware.getName(),dto.getName());
  assertEquals(hardware.getUri(),URI.create("http://foo/bar"));
  assertEquals(hardware.getRam(),dto.getRamRequired());
  assertEquals(hardware.getProcessors().size(),1);
  assertEquals(hardware.getProcessors().get(0).getCores(),(double)dto.getCpuRequired());
  assertEquals(hardware.getProcessors().get(0).getSpeed(),VirtualMachineTemplateToHardware.DEFAULT_CORE_SPEED);
  assertEquals(hardware.getVolumes().size(),1);
  assertEquals(hardware.getVolumes().get(0).getSize(),50F);
  assertEquals(hardware.getVolumes().get(0).getType(),Volume.Type.LOCAL);
  assertEquals(hardware.getVolumes().get(0).isBootDevice(),true);
  assertEquals(hardware.getVolumes().get(0).isDurable(),false);
}
