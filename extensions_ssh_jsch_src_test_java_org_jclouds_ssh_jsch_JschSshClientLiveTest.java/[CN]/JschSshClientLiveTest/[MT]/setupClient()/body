{
  int port=(sshPort != null) ? Integer.parseInt(sshPort) : 22;
  InetAddress host=(sshHost != null) ? InetAddress.getByName(sshHost) : InetAddress.getLocalHost();
  if (sshUser == null || ((sshPass == null || sshPass.trim().equals("")) && (sshKeyFile == null || sshKeyFile.trim().equals(""))) || sshUser.trim().equals("")) {
    System.err.println("ssh credentials not present.  Tests will be lame");
    return new SshClient(){
      public void connect(){
      }
      public void disconnect(){
      }
      public InputStream get(      String path){
        if (path.equals("/etc/passwd")) {
          return Utils.toInputStream("root");
        }
 else         if (path.equals(temp.getAbsolutePath())) {
          return Utils.toInputStream("rabbit");
        }
        throw new RuntimeException("path " + path + " not stubbed");
      }
      public ExecResponse exec(      String command){
        if (command.equals("hostname")) {
          try {
            return new ExecResponse(InetAddress.getLocalHost().getHostName(),"");
          }
 catch (          UnknownHostException e) {
            throw new RuntimeException(e);
          }
        }
        throw new RuntimeException("command " + command + " not stubbed");
      }
      @Override public void put(      String path,      InputStream contents){
      }
    }
;
  }
 else {
    Injector i=Guice.createInjector(new JschSshClientModule());
    SshClient.Factory factory=i.getInstance(SshClient.Factory.class);
    SshClient connection;
    if (sshKeyFile != null && !sshKeyFile.trim().equals("")) {
      connection=factory.create(new InetSocketAddress(host,port),sshUser,Utils.toStringAndClose(new FileInputStream(sshKeyFile)).getBytes());
    }
 else {
      connection=factory.create(new InetSocketAddress(host,port),sshUser,sshPass);
    }
    connection.connect();
    return connection;
  }
}
