{
  InputStream is=getClass().getResourceAsStream("/test_list_container.json");
  Set<ObjectInfo> expects=ImmutableSet.<ObjectInfo>of(ObjectInfoImpl.builder().container("container").name("test_obj_1").uri(URI.create("http://localhost/key/test_obj_1")).hash(base16().lowerCase().decode("4281c348eaf83e70ddce0e07221c3d28")).bytes(14l).contentType("application/octet-stream").lastModified(new SimpleDateFormatDateService().iso8601DateParse("2009-02-03T05:26:32.612Z")).build(),ObjectInfoImpl.builder().container("container").name("test_obj_2").uri(URI.create("http://localhost/key/test_obj_2")).hash(base16().lowerCase().decode("b039efe731ad111bc1b0ef221c3849d0")).bytes(64l).contentType("application/octet-stream").lastModified(new SimpleDateFormatDateService().iso8601DateParse("2009-02-03T05:26:32.612Z")).build());
  GeneratedHttpRequest request=requestForArgs(ImmutableList.<Object>of("container",new ListContainerOptions[]{new ListContainerOptions()}));
  ParseObjectInfoListFromJsonResponse parser=i.getInstance(ParseObjectInfoListFromJsonResponse.class);
  parser.setContext(request);
  assertEquals(parser.apply(is).toString(),expects.toString());
}
