{
  OsFamily os=null;
  String name="";
  String description=from.getDescription() != null ? from.getDescription() : from.getImageLocation();
  String osDescription=from.getImageLocation();
  String version="";
  Matcher matcher=ALESTIC_PATTERN.matcher(from.getImageLocation());
  if (matcher.find()) {
    try {
      os=OsFamily.fromValue(matcher.group(1));
      name=matcher.group(2);
      version=matcher.group(3).replace("\\.manifest.xml","");
    }
 catch (    IllegalArgumentException e) {
      logger.debug("<< didn't match os(%s)",matcher.group(1));
    }
  }
  return new ImageImpl(from.getId(),name,from.getRegion().toString(),null,ImmutableMap.<String,String>of("owner",from.getImageOwnerId()),description,version,os,osDescription,from.getArchitecture() == org.jclouds.aws.ec2.domain.Image.Architecture.I386 ? Architecture.X86_32 : Architecture.X86_64);
}
