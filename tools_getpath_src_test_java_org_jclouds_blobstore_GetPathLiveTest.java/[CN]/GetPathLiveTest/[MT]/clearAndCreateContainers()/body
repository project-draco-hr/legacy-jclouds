{
  container=checkNotNull(System.getProperty(PROPERTY_GETPATH_CONTAINER));
  path=checkNotNull(System.getProperty(PROPERTY_GETPATH_PATH));
  contexts=Sets.newLinkedHashSet();
  BlobStoreContextFactory factory=new BlobStoreContextFactory();
  for (  String provider : new String[]{"s3","cloudfiles","azureblob"}) {
    String identity=checkNotNull(System.getProperty("jclouds.test.identity." + provider),"jclouds.test.identity." + provider);
    String credential=checkNotNull(System.getProperty("jclouds.test.credential." + provider),"jclouds.test.credential." + provider);
    contexts.add(factory.createContext(provider,identity,credential,ImmutableSet.of(new Log4JLoggingModule())));
    urisToTest.add(String.format("blobstore://%s:%s@%s/%s/%s",identity,credential,provider,container,path));
  }
  boolean deleted=false;
  for (  BlobStoreContext context : contexts) {
    if (context.getBlobStore().containerExists(container)) {
      System.err.printf("deleting container %s at %s%n",container,context.getProviderSpecificContext().getEndpoint());
      context.getBlobStore().deleteContainer(container);
      deleted=true;
    }
  }
  if (deleted) {
    System.err.println("sleeping 30 seconds to allow containers to clear");
    Thread.sleep(30000);
  }
  for (  BlobStoreContext context : contexts) {
    System.err.printf("creating container %s at %s%n",container,context.getProviderSpecificContext().getEndpoint());
    context.getBlobStore().createContainerInLocation(null,container);
  }
  if (deleted) {
    System.err.println("sleeping 5 seconds to allow containers to create");
    Thread.sleep(30000);
  }
  for (  BlobStoreContext context : contexts) {
    System.err.printf("creating directory %s in container %s at %s%n",container,path,context.getProviderSpecificContext().getEndpoint());
    context.getBlobStore().createDirectory(container,path);
  }
}
