{
  NodeMetadataBuilder builder=new NodeMetadataBuilder();
  builder.ids(from.getId() + "");
  builder.name(from.getName());
  builder.hostname(from.getName());
  builder.location(location.get());
  builder.group(nodeNamingConvention.groupInUniqueNameOrNull(from.getName()));
  builder.imageId(from.getImageId() + "");
  builder.operatingSystem(parseOperatingSystem(from));
  builder.hardware(parseHardware(from));
  builder.status(sliceToNodeStatus.get(from.getStatus()));
  builder.publicAddresses(Iterables.filter(from.getAddresses(),new Predicate<String>(){
    @Override public boolean apply(    String input){
      return !input.startsWith("10.");
    }
  }
));
  builder.privateAddresses(Iterables.filter(from.getAddresses(),new Predicate<String>(){
    @Override public boolean apply(    String input){
      return input.startsWith("10.");
    }
  }
));
  return builder.build();
}
