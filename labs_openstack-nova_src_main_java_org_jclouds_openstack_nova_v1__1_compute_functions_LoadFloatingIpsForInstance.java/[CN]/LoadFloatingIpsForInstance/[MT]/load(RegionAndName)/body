{
  String region=key.getRegion() == null ? regions.iterator().next() : key.getRegion();
  Optional<FloatingIPClient> ipClientOptional=client.getFloatingIPExtensionForRegion(region);
  if (ipClientOptional.isPresent()) {
    return Iterables.transform(Iterables.filter(ipClientOptional.get().listFloatingIPs(),new Predicate<FloatingIP>(){
      @Override public boolean apply(      FloatingIP input){
        return key.getName().equals(input.getInstanceId());
      }
    }
),new Function<FloatingIP,String>(){
      @Override public String apply(      FloatingIP input){
        return input.getInstanceId();
      }
    }
);
  }
  return ImmutableSet.of();
}
