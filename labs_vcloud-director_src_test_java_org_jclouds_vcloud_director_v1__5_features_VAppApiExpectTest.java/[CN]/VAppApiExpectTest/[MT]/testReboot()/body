{
  URI vAppRebootUri=URI.create(endpoint + "/vApp/" + vAppId+ "/power/action/reboot");
  HttpRequest vAppEntityRequest=HttpRequest.builder().method("GET").endpoint(URI.create(endpoint + "/entity/" + vAppUrn)).addHeader("Accept","*/*").addHeader("x-vcloud-authorization",token).addHeader(HttpHeaders.COOKIE,"vcloud-token=" + token).build();
  HttpResponse vAppEntityResponse=HttpResponse.builder().payload(payloadFromResourceWithContentType("/vapp/vAppEntity.xml",VCloudDirectorMediaType.ENTITY)).statusCode(200).build();
  HttpRequest vAppRebootRequest=HttpRequest.builder().method("POST").endpoint(vAppRebootUri).addHeader("Accept","application/vnd.vmware.vcloud.task+xml").addHeader("x-vcloud-authorization",token).addHeader(HttpHeaders.COOKIE,"vcloud-token=" + token).build();
  HttpResponse vAppRebootResponse=HttpResponse.builder().payload(payloadFromResourceWithContentType("/vapp/vAppRebootTask.xml",VCloudDirectorMediaType.TASK)).statusCode(200).build();
  VCloudDirectorApi vCloudDirectorApi=requestsSendResponses(loginRequest,sessionResponse,vAppEntityRequest,vAppEntityResponse,vAppRebootRequest,vAppRebootResponse);
  Task actual=vCloudDirectorApi.getVAppApi().reboot(vAppUrn);
  Task expected=rebootTask();
  assertEquals(actual,expected);
}
