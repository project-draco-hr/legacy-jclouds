{
  checkState(args != null,"request should be initialized at this point");
  Type listType=new TypeToken<SortedSet<ObjectInfoImpl>>(){
  }
.getType();
  try {
    SortedSet<ObjectInfoImpl> list=apply(stream,listType);
    SortedSet<ObjectInfo> returnVal=Sets.newTreeSet(Iterables.transform(list,new Function<ObjectInfoImpl,ObjectInfo>(){
      public ObjectInfo apply(      ObjectInfoImpl from){
        return from.toBuilder().container(container).uri(uriBuilder(request.getEndpoint()).clearQuery().appendPath(from.getName()).build()).build();
      }
    }
));
    boolean truncated=options.getMaxResults() == returnVal.size();
    String marker=truncated ? returnVal.last().getName() : null;
    return new PageSetImpl<ObjectInfo>(returnVal,marker);
  }
 catch (  IOException e) {
    throw new RuntimeException("problem reading response from request: " + request,e);
  }
}
