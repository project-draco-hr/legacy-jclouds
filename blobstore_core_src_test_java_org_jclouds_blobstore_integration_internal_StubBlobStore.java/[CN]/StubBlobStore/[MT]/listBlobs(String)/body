{
  return new FutureBase<SortedSet<M>>(){
    public SortedSet<M> get() throws InterruptedException, ExecutionException {
      final Map<String,B> realContents=getContainerToBlobs().get(name);
      if (realContents == null)       throw new ContainerNotFoundException(name);
      SortedSet<M> contents=Sets.newTreeSet(new Comparator<M>(){
        public int compare(        M o1,        M o2){
          return (o1 == o2) ? 0 : o1.getName().compareTo(o2.getName());
        }
      }
);
      Iterables.addAll(contents,Iterables.transform(realContents.keySet(),new Function<String,M>(){
        public M apply(        String key){
          return realContents.get(key).getMetadata();
        }
      }
));
      return contents;
    }
  }
;
}
