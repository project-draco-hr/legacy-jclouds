{
  checkNotNull(id,"id");
  logger.debug(">> destroying load balancer(%s)",id);
  final AtomicReference<LoadBalancerMetadata> loadBalancer=new AtomicReference<LoadBalancerMetadata>();
  RetryablePredicate<String> tester=new RetryablePredicate<String>(new Predicate<String>(){
    @Override public boolean apply(    String input){
      try {
        LoadBalancerMetadata md=destroyLoadBalancerStrategy.destroyLoadBalancer(id);
        if (md != null)         loadBalancer.set(md);
        return true;
      }
 catch (      IllegalStateException e) {
        logger.warn("<< illegal state destroying load balancer(%s)",id);
        return false;
      }
    }
  }
,3000,1000,TimeUnit.MILLISECONDS);
  boolean successful=tester.apply(id) && loadBalancer.get() == null;
  logger.debug("<< destroyed load balancer(%s) success(%s)",id,successful);
}
