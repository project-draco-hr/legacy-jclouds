{
  NodeMetadataBuilder builder=new NodeMetadataBuilder();
  builder.ids(from.getUuid());
  builder.name(from.getName());
  builder.location(locationSupplier.get());
  builder.group(nodeNamingConvention.groupInUniqueNameOrNull(from.getName()));
  builder.tags(from.getTags());
  builder.userMetadata(from.getUserMetadata());
  String imageId=getImageIdFromServer.apply(from);
  if (imageId != null) {
    Optional<? extends Image> image=FluentIterable.from(images.get()).firstMatch(idEquals(imageId));
    if (image.isPresent()) {
      builder.operatingSystem(image.get().getOperatingSystem());
    }
  }
  builder.hardware(new HardwareBuilder().ids(from.getUuid()).hypervisor("kvm").processors(ImmutableList.of(new Processor(1,from.getCpu()))).ram(from.getMem()).volumes(Iterables.transform(from.getDevices().values(),deviceToVolume)).build());
  builder.status(serverStatusToNodeStatus.get(from.getStatus()));
  builder.publicAddresses(ImmutableSet.<String>of(from.getNics().get(0).getDhcp()));
  builder.privateAddresses(ImmutableSet.<String>of());
  return builder.build();
}
