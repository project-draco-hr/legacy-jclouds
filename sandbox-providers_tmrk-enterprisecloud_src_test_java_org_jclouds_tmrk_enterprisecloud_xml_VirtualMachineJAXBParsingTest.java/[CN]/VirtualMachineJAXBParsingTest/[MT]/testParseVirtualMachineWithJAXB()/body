{
  Method method=VirtualMachineAsyncClient.class.getMethod("getVirtualMachine",URI.class);
  HttpRequest request=factory(VirtualMachineAsyncClient.class).createRequest(method,new URI("/1"));
  assertResponseParserClassEquals(method,request,ParseXMLWithJAXB.class);
  Function<HttpResponse,VirtualMachine> parser=(Function<HttpResponse,VirtualMachine>)RestAnnotationProcessor.createResponseParser(parserFactory,injector,method,request);
  InputStream is=getClass().getResourceAsStream("/virtualMachine.xml");
  VirtualMachine virtualMachine=parser.apply(new HttpResponse(200,"ok",newInputStreamPayload(is)));
  assertEquals("My first terremark server",virtualMachine.getDescription());
  assertEquals(6,virtualMachine.getLinks().size());
  assertEquals(11,virtualMachine.getActions().size());
  assertEquals(1,virtualMachine.getTasks().size());
  assertLayout(virtualMachine.getLayout());
  assertEquals(VirtualMachineStatus.DEPLOYED,virtualMachine.getStatus());
  assertFalse(virtualMachine.isPoweredOn(),"virtual machine is not powered on");
  assertEquals(ToolsStatus.NOT_RUNNING,virtualMachine.getToolsStatus());
  assertEquals(VirtualMachine.VirtualMachineMediaStatus.UNMOUNTED,virtualMachine.getMediaStatus());
  assertTrue(virtualMachine.isCustomizationPending(),"virtual machine is pending customization");
  assertOperatingSystem(virtualMachine.getOperatingSystem());
  assertHardwareConfiguration(virtualMachine.getHardwareConfiguration());
  assertIpAddresses(virtualMachine.getIpAddresses());
}
