{
  Ordering<Hardware> hardwareOrdering=hardwareSorter();
  Iterable<Predicate<Image>> supportsImagePredicates=Iterables.transform(hardwarel,new Function<Hardware,Predicate<Image>>(){
    @Override public Predicate<Image> apply(    Hardware input){
      return input.supportsImage();
    }
  }
);
  Predicate<Image> supportsImagePredicate=Iterables.size(supportsImagePredicates) == 1 ? Iterables.getOnlyElement(supportsImagePredicates) : Predicates.<Image>or(supportsImagePredicates);
  if (!Iterables.any(images,supportsImagePredicate)) {
    String message=format("no hardware profiles support images matching params: %s",supportsImagePredicate);
    throw throwNoSuchElementExceptionAfterLoggingHardwareIds(message,hardwarel);
  }
  Iterable<? extends Hardware> hardwareCompatibleWithOurImages=filter(hardwarel,supportsImagesPredicate(images));
  Predicate<Hardware> hardwarePredicate=buildHardwarePredicate();
  Hardware hardware;
  try {
    hardware=hardwareOrdering.max(filter(hardwareCompatibleWithOurImages,hardwarePredicate));
  }
 catch (  NoSuchElementException exception) {
    String message=format("no hardware profiles match params: %s",hardwarePredicate);
    throw throwNoSuchElementExceptionAfterLoggingHardwareIds(message,hardwareCompatibleWithOurImages);
  }
  logger.trace("<<   matched hardware(%s)",hardware.getId());
  return hardware;
}
