{
  ParseS3ErrorFromXmlContent function=Guice.createInjector(new SaxParserModule(),new AbstractModule(){
    @Override protected void configure(){
      bind(RequestSigner.class).toInstance(createMock(RequestSigner.class));
      bindConstant().annotatedWith(Names.named(PROPERTY_HEADER_TAG)).to(S3Headers.DEFAULT_AMAZON_HEADERTAG);
      bindConstant().annotatedWith(Names.named(PROPERTY_S3_SERVICE_PATH)).to(SERVICE_PATH);
      bindConstant().annotatedWith(Names.named(PROPERTY_S3_VIRTUAL_HOST_BUCKETS)).to(virtualHost);
    }
  }
).getInstance(ParseS3ErrorFromXmlContent.class);
  HttpCommand command=createMock(HttpCommand.class);
  HttpRequest request=HttpRequest.builder().method(method).endpoint(uri).build();
  HttpResponse response=HttpResponse.builder().statusCode(statusCode).message(message).payload(content).build();
  response.getPayload().getContentMetadata().setContentType("application/xml");
  expect(command.getCurrentRequest()).andReturn(request).atLeastOnce();
  command.setException(classEq(expected));
  replay(command);
  function.handleError(command,response);
  verify(command);
}
