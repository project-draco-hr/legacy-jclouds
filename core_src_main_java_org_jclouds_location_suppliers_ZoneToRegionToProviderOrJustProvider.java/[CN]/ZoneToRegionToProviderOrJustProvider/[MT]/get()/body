{
  Builder<Location> locations=buildJustProviderOrRegions();
  ImmutableMap<String,Location> idToLocation=uniqueIndex(locations.build(),new Function<Location,String>(){
    @Override public String apply(    Location from){
      return from.getId();
    }
  }
);
  if (zoneToRegion.size() == 1)   return locations.build();
  for (  String zone : zoneToRegion.keySet()) {
    Location parent=idToLocation.get(zoneToRegion.get(zone));
    LocationBuilder builder=new LocationBuilder().scope(LocationScope.ZONE).id(zone).description(zone).parent(parent);
    if (isoCodesById.containsKey(zone))     builder.iso3166Codes(isoCodesById.get(zone));
 else     if (parent.getScope() == LocationScope.REGION)     builder.iso3166Codes(parent.getIso3166Codes());
    locations.add(builder.build());
  }
  return locations.build();
}
