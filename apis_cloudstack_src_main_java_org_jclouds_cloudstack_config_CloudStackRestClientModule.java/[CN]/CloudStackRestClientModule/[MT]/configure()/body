{
  bind(new TypeLiteral<RestContext<CloudStackDomainClient,CloudStackDomainAsyncClient>>(){
  }
).to(new TypeLiteral<RestContextImpl<CloudStackDomainClient,CloudStackDomainAsyncClient>>(){
  }
);
  bind(new TypeLiteral<RestContext<CloudStackGlobalClient,CloudStackGlobalAsyncClient>>(){
  }
).to(new TypeLiteral<RestContextImpl<CloudStackGlobalClient,CloudStackGlobalAsyncClient>>(){
  }
);
  bind(CredentialType.class).toProvider(CredentialTypeFromPropertyOrDefault.class);
  bindSyncToAsyncHttpApi(binder(),SessionClient.class,SessionAsyncClient.class);
  bindSyncToAsyncHttpApi(binder(),CloudStackDomainClient.class,CloudStackDomainAsyncClient.class);
  bindSyncToAsyncHttpApi(binder(),CloudStackGlobalClient.class,CloudStackGlobalAsyncClient.class);
  bind(HttpRetryHandler.class).annotatedWith(ClientError.class).to(InvalidateSessionAndRetryOn401AndLogoutOnClose.class);
  super.configure();
}
