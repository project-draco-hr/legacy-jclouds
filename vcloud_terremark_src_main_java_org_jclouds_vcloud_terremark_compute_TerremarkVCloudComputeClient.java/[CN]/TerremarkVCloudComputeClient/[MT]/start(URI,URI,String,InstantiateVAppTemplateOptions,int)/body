{
  if (options.getDiskSizeKilobytes() != null) {
    logger.warn("trmk does not support resizing the primary disk; unsetting disk size");
  }
  if (portsToOpen.length > 0 && !options.shouldBlock())   throw new IllegalArgumentException("We cannot open ports on terremark unless we can deploy the vapp");
  String password=null;
  VCloudExpressVAppTemplate template=client.getVAppTemplate(templateId);
  if (template.getDescription().indexOf("Windows") != -1 && options instanceof TerremarkInstantiateVAppTemplateOptions) {
    password=passwordGenerator.get();
    TerremarkInstantiateVAppTemplateOptions.class.cast(options).getProperties().put("password",password);
  }
  Credentials defaultCredentials=credentialsProvider.execute(template);
  VCloudExpressVApp vAppResponse=super.start(VDC,templateId,name,options,portsToOpen);
  if (password != null) {
    credentialStore.put(vAppResponse.getHref().toASCIIString(),new Credentials(defaultCredentials.identity,password));
  }
  if (portsToOpen.length > 0)   createPublicAddressMappedToPorts(vAppResponse.getHref(),portsToOpen);
  return vAppResponse;
}
