{
  tag=System.getProperty("jclouds.compute.tag") != null ? System.getProperty("jclouds.compute.tag") : "jcloudschef";
  String computeProvider=checkNotNull(System.getProperty("jclouds.compute.provider"),"jclouds.compute.provider");
  String computeEndpoint=System.getProperty("jclouds.compute.endpoint");
  String computeIdentity=checkNotNull(System.getProperty("jclouds.compute.identity"),"jclouds.compute.identity");
  String computeCredential=checkNotNull(System.getProperty("jclouds.compute.credential"),"jclouds.compute.credential");
  chefEndpoint=checkNotNull(System.getProperty("jclouds.chef.endpoint"),"jclouds.chef.endpoint");
  String chefIdentity=checkNotNull(System.getProperty("jclouds.chef.identity"),"jclouds.chef.identity");
  String chefCredentialFile=System.getProperty("jclouds.chef.credential.pem");
  if (chefCredentialFile == null || chefCredentialFile.equals(""))   chefCredentialFile=System.getProperty("user.home") + "/.chef/" + chefIdentity+ ".pem";
  Properties props=new Properties();
  props.setProperty(computeProvider + ".identity",computeIdentity);
  props.setProperty(computeProvider + ".credential",computeCredential);
  props.setProperty("chef.endpoint",chefEndpoint);
  props.setProperty("chef.identity",chefIdentity);
  props.setProperty("chef.credential.file",chefCredentialFile);
  if (computeEndpoint != null && !computeEndpoint.trim().equals(""))   props.setProperty(computeProvider + ".endpoint",computeEndpoint);
  computeContext=new ComputeServiceContextFactory().createContext(computeProvider,ImmutableSet.of(new Log4JLoggingModule(),getSshModule()),props);
  chefContext=new ChefContextFactory().createContext(ImmutableSet.<Module>of(new Log4JLoggingModule()),props);
}
