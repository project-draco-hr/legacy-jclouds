{
  EC2Client client=createMock(EC2Client.class);
  CreateKeyPairAndSecurityGroupsAsNeededAndReturnRunOptions createKeyPairAndSecurityGroupsAsNeededAndReturncustomize=createMock(CreateKeyPairAndSecurityGroupsAsNeededAndReturnRunOptions.class);
  PresentInstances presentInstances=createMock(PresentInstances.class);
  RunningInstanceToNodeMetadata runningInstanceToNodeMetadata=createMock(RunningInstanceToNodeMetadata.class);
  LoadingCache<RunningInstance,Optional<LoginCredentials>> instanceToCredentials=createMock(LoadingCache.class);
  LoadingCache<RegionAndName,String> elasticIpCache=createMock(LoadingCache.class);
  GetNodeMetadataStrategy nodeRunning=new GetNodeMetadataStrategy(){
    @Override public NodeMetadata getNode(    String input){
      Assert.assertEquals(input,node.getId());
      return node;
    }
  }
;
  Map<String,Credentials> credentialStore=createMock(Map.class);
  ComputeUtils utils=createMock(ComputeUtils.class);
  return new EC2CreateNodesInGroupThenAddToSet(client,elasticIpCache,new AtomicNodeRunning(nodeRunning),createKeyPairAndSecurityGroupsAsNeededAndReturncustomize,presentInstances,runningInstanceToNodeMetadata,instanceToCredentials,credentialStore,utils);
}
