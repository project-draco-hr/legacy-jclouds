{
  EmailAccountApi api=requestSendsResponse(HttpRequest.builder().method("POST").endpoint("https://api.glesys.com/email/list/format/json").addHeader("Accept","application/json").addHeader("Authorization","Basic aWRlbnRpdHk6Y3JlZGVudGlhbA==").addFormParam("domainname","cl13016.test.jclouds.org").build(),HttpResponse.builder().statusCode(200).payload(payloadFromResource("/email_list.json")).build()).getEmailAccountApi();
  EmailAccount.Builder<?> builder=EmailAccount.builder().quota(EmailQuota.builder().max(200).unit("MB").build()).antispamLevel(3).antiVirus(true).autoRespond(false).autoRespondSaveEmail(true);
  Set<EmailAccount> expected=ImmutableSet.of(builder.account("test1@cl13016.test.jclouds.org").antispamLevel(3).created(dateService.iso8601SecondsDateParse("2012-06-24T11:53:45+02:00")).build(),builder.account("test@cl13016.test.jclouds.org").antispamLevel(3).created(dateService.iso8601SecondsDateParse("2012-06-21T11:26:09+02:00")).modified(dateService.iso8601SecondsDateParse("2012-06-24T11:53:48+02:00")).build());
  Set<EmailAccount> actual=api.listDomain("cl13016.test.jclouds.org").toImmutableSet();
  assertEquals(actual,expected);
  assertEquals(Iterables.get(actual,0).toString(),Iterables.get(expected,0).toString());
}
