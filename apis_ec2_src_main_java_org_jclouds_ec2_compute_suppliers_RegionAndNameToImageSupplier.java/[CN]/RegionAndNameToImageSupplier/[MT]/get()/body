{
  if (amiOwners.length == 0) {
    logger.debug(">> no owners specified, skipping image parsing");
  }
 else {
    logger.debug(">> providing images");
    Iterable<Entry<String,DescribeImagesOptions>> queries=getDescribeQueriesForOwnersInRegions(regions,amiOwners);
    Iterable<? extends Image> parsedImages=ImmutableSet.copyOf(filter(transform(describer.apply(queries),parser),Predicates.notNull()));
    knownImages.clear();
    knownImages.putAll(uniqueIndex(parsedImages,new Function<Image,RegionAndName>(){
      @Override public RegionAndName apply(      Image from){
        return new RegionAndName(from.getLocation().getId(),from.getProviderId());
      }
    }
));
    logger.debug("<< images(%d)",knownImages.size());
  }
  Cache<RegionAndName,Image> cache=CacheBuilder.newBuilder().build(regionAndIdToImage);
  for (  RegionAndName image : knownImages.keySet()) {
    cache.getUnchecked(image);
  }
  return cache;
}
