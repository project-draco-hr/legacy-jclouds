{
  exceptionIfNotActive();
  final SynchronousQueue<?> channel=new SynchronousQueue<Object>();
  ListenableFuture<T> future=makeListenable(executorService.submit(new Callable<T>(){
    public T call() throws Exception {
      Object o=channel.take();
      if (o instanceof Exception) {
        throw (Exception)o;
      }
      return responseTransformer.apply((HttpResponse)o);
    }
  }
),executorService);
  HttpCommandRendezvous<T> rendezvous=new HttpCommandRendezvous<T>(command,channel,future);
  commandQueue.add(rendezvous);
  return rendezvous.getListenableFuture();
}
