{
  VolumeManagementDto first=CloudResources.volumePut();
  VolumeManagementDto second=CloudResources.volumePut();
  second.getEditLink().setHref(second.getEditLink().getHref() + "second");
  Method method=CloudAsyncApi.class.getMethod("replaceVolumes",VirtualMachineDto.class,VirtualMachineOptions.class,VolumeManagementDto[].class);
  GeneratedHttpRequest request=processor.createRequest(method,CloudResources.virtualMachinePut(),VirtualMachineOptions.builder().force(true).build(),new VolumeManagementDto[]{first,second});
  String editLink=CloudResources.volumePut().getEditLink().getHref();
  assertRequestLineEquals(request,"PUT http://localhost/api/cloud/virtualdatacenters/1/virtualappliances/1/virtualmachines/1/storage/volumes?force=true HTTP/1.1");
  assertNonPayloadHeadersEqual(request,"Accept: " + AcceptedRequestDto.BASE_MEDIA_TYPE + "\n");
  assertPayloadEquals(request,withHeader("<links><link href=\"" + editLink + "\" rel=\"volume\"/><link href=\""+ editLink+ "second\" rel=\"volume\"/></links>"),LinksDto.class,LinksDto.BASE_MEDIA_TYPE,false);
  assertResponseParserClassEquals(method,request,ReturnTaskReferenceOrNull.class);
  assertSaxResponseParserClassEquals(method,null);
  assertFallbackClassEquals(method,null);
  checkFilters(request);
}
