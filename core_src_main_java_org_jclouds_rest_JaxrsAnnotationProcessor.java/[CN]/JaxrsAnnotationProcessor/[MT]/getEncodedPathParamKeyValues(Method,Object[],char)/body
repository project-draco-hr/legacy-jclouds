{
  Map<String,Object> pathParamValues=Maps.newHashMap();
  pathParamValues.putAll(constants);
  Map<Integer,Set<Annotation>> indexToPathParam=methodToindexOfParamToPathParamAnnotations.get(method);
  Map<Integer,Set<Annotation>> indexToParamExtractor=methodToindexOfParamToParamParserAnnotations.get(method);
  for (  Entry<Integer,Set<Annotation>> entry : indexToPathParam.entrySet()) {
    for (    Annotation key : entry.getValue()) {
      Set<Annotation> extractors=indexToParamExtractor.get(entry.getKey());
      String paramKey=((PathParam)key).value();
      String paramValue;
      if (extractors != null && extractors.size() > 0) {
        ParamParser extractor=(ParamParser)extractors.iterator().next();
        paramValue=injector.getInstance(extractor.value()).apply(args[entry.getKey()]);
      }
 else {
        paramValue=args[entry.getKey()].toString();
      }
      paramValue=URLEncoder.encode(paramValue,"UTF-8");
      paramValue=paramValue.replaceAll("\\+","%20");
      for (      char c : skipEncode) {
        String value=Character.toString(c);
        String encoded=URLEncoder.encode(value,"UTF-8");
        paramValue=paramValue.replaceAll(encoded,value);
      }
      pathParamValues.put(paramKey,paramValue);
    }
  }
  return pathParamValues;
}
