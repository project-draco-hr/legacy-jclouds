{
  String realObject=IOUtils.toString(new FileInputStream("pom.xml"));
  String sourceBucket=bucketPrefix + "copysource";
  client.createBucketIfNotExists(sourceBucket).get(10,TimeUnit.SECONDS);
  assertEquals(client.getBucket(sourceBucket).get(10,TimeUnit.SECONDS).getContents().size(),0);
  S3Object sourceObject=new S3Object("file");
  sourceObject.getMetaData().setContentType("text/xml");
  sourceObject.setData(new File("pom.xml"));
  client.addObject(sourceBucket,sourceObject).get(10,TimeUnit.SECONDS);
  assertEquals(client.getBucket(sourceBucket).get(10,TimeUnit.SECONDS).getContents().size(),1);
  sourceObject=client.getObject(sourceBucket,sourceObject.getKey()).get(10,TimeUnit.SECONDS);
  assertEquals(S3Utils.getContentAsStringAndClose(sourceObject),realObject);
  String destinationBucket=bucketPrefix + "copydestination";
  client.createBucketIfNotExists(destinationBucket).get(10,TimeUnit.SECONDS);
  assertEquals(client.getBucket(destinationBucket).get(10,TimeUnit.SECONDS).getContents().size(),0);
  client.copyObject(sourceBucket,sourceObject.getKey(),destinationBucket,sourceObject.getKey()).get(10,TimeUnit.SECONDS);
  assertEquals(client.getBucket(destinationBucket).get(10,TimeUnit.SECONDS).getContents().size(),1);
  S3Object destinationObject=client.getObject(destinationBucket,sourceObject.getKey()).get(10,TimeUnit.SECONDS);
  assertEquals(S3Utils.getContentAsStringAndClose(destinationObject),realObject);
}
