{
  JoyentCloudApi cloudApiApi=createMock(JoyentCloudApi.class);
  SshKeyPairGenerator sshKeyPairGenerator=new SshKeyPairGenerator(){
    @Override public Map<String,String> get(){
      return keyPair;
    }
  }
;
  KeyApi keyApi=createMock(KeyApi.class);
  Key key=Key.builder().name("group-foo").key(keyPair.get("public")).build();
  expect(cloudApiApi.getKeyApi()).andReturn(keyApi);
  expect(keyApi.create(key)).andReturn(key);
  replay(cloudApiApi,keyApi);
  CreateUniqueKey parser=new CreateUniqueKey(cloudApiApi,namingConvention,sshKeyPairGenerator);
  assertEquals(parser.load(DatacenterAndName.fromDatacenterAndName("datacenter","group")),KeyAndPrivateKey.fromKeyAndPrivateKey(key,keyPair.get("private")));
  verify(cloudApiApi,keyApi);
}
