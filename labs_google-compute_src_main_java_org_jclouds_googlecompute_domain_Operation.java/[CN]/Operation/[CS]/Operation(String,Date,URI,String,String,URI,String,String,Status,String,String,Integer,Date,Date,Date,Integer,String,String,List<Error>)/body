{
  super(Kind.OPERATION,checkNotNull(id,"id of %s",name),fromNullable(creationTimestamp),checkNotNull(selfLink,"selfLink of %s",name),checkNotNull(name,"name"),fromNullable(description));
  this.targetLink=checkNotNull(targetLink,"targetLink of %s",name);
  this.targetId=fromNullable(targetId);
  this.clientOperationId=fromNullable(clientOperationId);
  this.status=checkNotNull(status,"status of %s",name);
  this.statusMessage=fromNullable(statusMessage);
  this.user=checkNotNull(user,"user of %s",name);
  this.progress=fromNullable(progress);
  this.insertTime=checkNotNull(insertTime,"insertTime of %s",name);
  this.startTime=fromNullable(startTime);
  this.endTime=fromNullable(endTime);
  this.httpError=httpErrorStatusCode != null ? Optional.of(HttpResponse.builder().statusCode(httpErrorStatusCode).message(httpErrorMessage).build()) : Optional.<HttpResponse>absent();
  this.operationType=checkNotNull(operationType,"insertTime of %s",name);
  this.errors=errors == null ? ImmutableList.<Error>of() : ImmutableList.copyOf(errors);
}
