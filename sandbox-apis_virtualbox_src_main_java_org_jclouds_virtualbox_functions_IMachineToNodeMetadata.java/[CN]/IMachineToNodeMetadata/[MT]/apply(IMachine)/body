{
  NodeMetadataBuilder nodeMetadataBuilder=new NodeMetadataBuilder();
  String s=vm.getName();
  nodeMetadataBuilder.name(s);
  LocationBuilder locationBuilder=new LocationBuilder();
  locationBuilder.description("");
  locationBuilder.id("");
  locationBuilder.scope(LocationScope.HOST);
  nodeMetadataBuilder.location(locationBuilder.build());
  HardwareBuilder hardwareBuilder=new HardwareBuilder();
  hardwareBuilder.ram(vm.getMemorySize().intValue());
  Set<Processor> processors=new HashSet<Processor>();
  for (int i=0; i < vm.getCPUCount(); i++) {
    Processor processor=new Processor(1,0);
    processors.add(processor);
  }
  hardwareBuilder.processors(processors);
  hardwareBuilder.is64Bit(false);
  nodeMetadataBuilder.hostname(vm.getName());
  nodeMetadataBuilder.loginPort(18083);
  Map<MachineState,NodeState> nodeStateMap=new HashMap<MachineState,NodeState>();
  nodeStateMap.put(MachineState.Running,NodeState.RUNNING);
  nodeStateMap.put(MachineState.PoweredOff,NodeState.SUSPENDED);
  nodeStateMap.put(MachineState.DeletingSnapshot,NodeState.PENDING);
  nodeStateMap.put(MachineState.DeletingSnapshotOnline,NodeState.PENDING);
  nodeStateMap.put(MachineState.DeletingSnapshotPaused,NodeState.PENDING);
  nodeStateMap.put(MachineState.FaultTolerantSyncing,NodeState.PENDING);
  nodeStateMap.put(MachineState.LiveSnapshotting,NodeState.PENDING);
  nodeStateMap.put(MachineState.SettingUp,NodeState.PENDING);
  nodeStateMap.put(MachineState.Starting,NodeState.PENDING);
  nodeStateMap.put(MachineState.Stopping,NodeState.PENDING);
  nodeStateMap.put(MachineState.Restoring,NodeState.PENDING);
  nodeStateMap.put(MachineState.FirstOnline,NodeState.PENDING);
  nodeStateMap.put(MachineState.FirstTransient,NodeState.PENDING);
  nodeStateMap.put(MachineState.LastOnline,NodeState.PENDING);
  nodeStateMap.put(MachineState.LastTransient,NodeState.PENDING);
  nodeStateMap.put(MachineState.Teleported,NodeState.PENDING);
  nodeStateMap.put(MachineState.TeleportingIn,NodeState.PENDING);
  nodeStateMap.put(MachineState.TeleportingPausedVM,NodeState.PENDING);
  nodeStateMap.put(MachineState.Aborted,NodeState.ERROR);
  nodeStateMap.put(MachineState.Stuck,NodeState.ERROR);
  nodeStateMap.put(MachineState.Null,NodeState.UNRECOGNIZED);
  MachineState vmState=vm.getState();
  NodeState nodeState=nodeStateMap.get(vmState);
  if (nodeState == null)   nodeState=NodeState.UNRECOGNIZED;
  nodeMetadataBuilder.state(nodeState);
  logger.debug("Setting virtualbox node to: " + nodeState + " from machine state: "+ vmState);
  String provider="virtualbox";
  String identity=System.getProperty("test." + provider + ".identity","administrator");
  String credential=System.getProperty("test." + provider + ".credential","12345");
  nodeMetadataBuilder.credentials(new Credentials(identity,credential));
  nodeMetadataBuilder.id(vm.getId());
  return nodeMetadataBuilder.build();
}
