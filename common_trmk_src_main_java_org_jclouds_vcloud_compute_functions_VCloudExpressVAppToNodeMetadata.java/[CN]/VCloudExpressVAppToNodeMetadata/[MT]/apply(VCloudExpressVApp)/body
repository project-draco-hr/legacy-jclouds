{
  NodeMetadataBuilder builder=new NodeMetadataBuilder();
  builder.ids(from.getHref().toASCIIString());
  builder.uri(from.getHref());
  builder.name(from.getName());
  builder.hostname(from.getName());
  builder.location(findLocationForResourceInVDC.apply(from.getVDC()));
  builder.group(parseGroupFromName(from.getName()));
  if (from.getOsType() != null && OSType.fromValue(from.getOsType()) != OSType.UNRECOGNIZED) {
    builder.operatingSystem(new CIMOperatingSystem(OSType.fromValue(from.getOsType()),"",null,from.getOperatingSystemDescription()));
  }
 else   if (from.getOperatingSystemDescription() != null) {
    OperatingSystem.Builder osBuilder=new OperatingSystem.Builder();
    if (from.getOsType() != null)     osBuilder.name(from.getOsType() + "");
    osBuilder.family(ComputeServiceUtils.parseOsFamilyOrUnrecognized(from.getOperatingSystemDescription()));
    osBuilder.version("");
    osBuilder.is64Bit(from.getOperatingSystemDescription().indexOf("64") != -1);
    osBuilder.description(from.getOperatingSystemDescription());
    builder.operatingSystem(osBuilder.build());
  }
  builder.hardware(hardwareForVCloudExpressVApp.apply(from));
  builder.state(vAppStatusToNodeState.get(from.getStatus()));
  builder.publicAddresses(computeClient.getPublicAddresses(from.getHref()));
  builder.privateAddresses(computeClient.getPrivateAddresses(from.getHref()));
  builder.credentials(credentialStore.get("node#" + from.getHref().toASCIIString()));
  return builder.build();
}
