{
  ensureWebServerIsRunning();
  final IMachine vm=new CreateAndRegisterMachineFromIsoIfNotAlreadyExists(settingsFile,osTypeId,vmId,forceOverwrite,manager).apply(vmName);
  final String defaultWorkingDir=System.getProperty("user.home") + "/jclouds-virtualbox-test";
  final String workingDir=System.getProperty(VIRTUALBOX_WORKINGDIR,defaultWorkingDir);
  ensureMachineHasMemory(vmName,1024l);
  ensureMachineHasIDEControllerNamed(vmName,controllerIDE);
  ensureMachineHasAttachedDistroMedium(isoName,workingDir,controllerIDE);
  final String adminDiskPath=workingDir + "/" + adminDisk;
  if (new File(adminDiskPath).exists()) {
    boolean deleted=new File(adminDiskPath).delete();
    if (!deleted) {
      logger.error(String.format("File %s could not be deleted.",adminDiskPath));
    }
  }
  final IMedium hardDisk=new CreateMediumIfNotAlreadyExists(manager,diskFormat,true).apply(adminDiskPath);
  ensureMachineHasHardDiskAttached(vmName,hardDisk);
  ensureNATNetworkingIsAppliedToMachine(vmName);
  final String guestAdditionsDvd=workingDir + "/VBoxGuestAdditions_4.1.2.iso";
  final IMedium guestAdditionsDvdMedium=manager.getVBox().openMedium(guestAdditionsDvd,DeviceType.DVD,AccessMode.ReadOnly,forceOverwrite);
  ensureGuestAdditionsMediumIsAttached(vmName,guestAdditionsDvdMedium);
  ensureMachineIsLaunched(vmName);
  final String installKeySequence=System.getProperty(VIRTUALBOX_INSTALLATION_KEY_SEQUENCE,defaultInstallSequence());
  sendKeyboardSequence(installKeySequence);
  boolean sshDeamonIsRunning=false;
  while (!sshDeamonIsRunning) {
    try {
      if (runScriptOnNode(guestId,"id",wrapInInitScript(false)).getExitCode() == 0) {
        logger.debug("Got response from ssh daemon.");
        sshDeamonIsRunning=true;
      }
    }
 catch (    SshException e) {
      logger.debug("No response from ssh daemon...");
    }
  }
  logger.debug("Installation of image complete. Powering down...");
  lockSessionOnMachineAndApply(manager,Shared,vmName,new Function<ISession,Void>(){
    @Override public Void apply(    ISession session){
      IProgress powerDownProgress=session.getConsole().powerDown();
      powerDownProgress.waitForCompletion(-1);
      return null;
    }
  }
);
  return vm;
}
