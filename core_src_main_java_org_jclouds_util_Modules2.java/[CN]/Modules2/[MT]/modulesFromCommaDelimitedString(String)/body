{
  Iterable<Module> modules=ImmutableSet.of();
  if (moduleClasses != null) {
    Iterable<String> transformer=ImmutableList.copyOf(on(',').split(moduleClasses));
    modules=transform(transformer,new Function<String,Module>(){
      @Override public Module apply(      String from){
        try {
          return (Module)ClassLoadingUtils.loadClass(Modules2.class,from).newInstance();
        }
 catch (        InstantiationException e) {
          throw new RuntimeException("error instantiating " + from,e);
        }
catch (        IllegalAccessException e) {
          throw new RuntimeException("error instantiating " + from,e);
        }
      }
    }
);
  }
  return modules;
}
