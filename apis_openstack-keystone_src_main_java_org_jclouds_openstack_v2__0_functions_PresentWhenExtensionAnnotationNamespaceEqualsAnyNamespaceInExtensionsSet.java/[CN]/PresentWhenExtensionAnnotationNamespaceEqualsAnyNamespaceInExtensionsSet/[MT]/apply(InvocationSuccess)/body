{
  Class<?> target=unwrapIfOptional(input.getInvocation().getInvokable().getReturnType());
  Optional<org.jclouds.openstack.v2_0.services.Extension> ext=Optional.fromNullable(target.getAnnotation(org.jclouds.openstack.v2_0.services.Extension.class));
  if (ext.isPresent()) {
    URI namespace=URI.create(ext.get().namespace());
    List<Object> args=input.getInvocation().getArgs();
    if (args.isEmpty()) {
      if (any(extensions.getUnchecked(""),namespaceOrAliasEquals(namespace,aliases.get(namespace))))       return input.getResult();
    }
 else     if (args.size() == 1) {
      String arg0=checkNotNull(args.get(0),"arg[0] in %s",input).toString();
      if (any(extensions.getUnchecked(arg0),namespaceOrAliasEquals(namespace,aliases.get(namespace))))       return input.getResult();
    }
 else {
      throw new RuntimeException(String.format("expecting zero or one args %s",input));
    }
    return Optional.absent();
  }
 else {
    return input.getResult();
  }
}
