{
  for (  VirtualGuest guest : client.listVirtualGuests()) {
    if (guest.getHostname().startsWith(TEST_HOSTNAME_PREFIX)) {
      if (guest.getBillingItemId() != -1) {
        client.cancelService(guest.getBillingItemId());
      }
    }
  }
  int pkgId=Iterables.find(context.getApi().getAccountClient().getActivePackages(),named(ProductPackageClientLiveTest.CLOUD_SERVER_PACKAGE_NAME)).getId();
  ProductPackage productPackage=context.getApi().getProductPackageClient().getProductPackage(pkgId);
  Iterable<ProductItem> ramItems=Iterables.filter(productPackage.getItems(),Predicates.and(categoryCode("ram"),capacity(2.0f)));
  Map<Float,ProductItem> ramToProductItem=Maps.uniqueIndex(ramItems,ProductItems.capacity());
  ProductItemPrice ramPrice=ProductItems.price().apply(ramToProductItem.get(2.0f));
  Iterable<ProductItem> cpuItems=Iterables.filter(productPackage.getItems(),Predicates.and(units("PRIVATE_CORE"),capacity(2.0f)));
  Map<Float,ProductItem> coresToProductItem=Maps.uniqueIndex(cpuItems,ProductItems.capacity());
  ProductItemPrice cpuPrice=ProductItems.price().apply(coresToProductItem.get(2.0f));
  Iterable<ProductItem> operatingSystems=Iterables.filter(productPackage.getItems(),categoryCode("os"));
  Map<String,ProductItem> osToProductItem=Maps.uniqueIndex(operatingSystems,ProductItems.description());
  ProductItemPrice osPrice=ProductItems.price().apply(osToProductItem.get("Ubuntu Linux 8 LTS Hardy Heron - Minimal Install (64 bit)"));
  Set<ProductItemPrice> prices=Sets.<ProductItemPrice>newLinkedHashSet();
  prices.addAll(SoftLayerConstants.DEFAULT_VIRTUAL_GUEST_PRICES);
  prices.add(ramPrice);
  prices.add(cpuPrice);
  prices.add(osPrice);
  VirtualGuest guest=VirtualGuest.builder().domain("jclouds.org").hostname(TEST_HOSTNAME_PREFIX + new Random().nextInt()).build();
  String location="" + Iterables.get(productPackage.getDatacenters(),0).getId();
  ProductOrder order=ProductOrder.builder().packageId(pkgId).location(location).quantity(1).useHourlyPricing(true).prices(prices).virtualGuest(guest).build();
  ProductOrderReceipt receipt=context.getApi().getVirtualGuestClient().orderVirtualGuest(order);
  assertNotNull(receipt);
}
