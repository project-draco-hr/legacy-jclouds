{
  checkState(ip.getVirtualMachineId() != -1,"ip should be static NATed to a virtual machine");
  if (Iterables.size(ports) == 0)   return ImmutableSet.<IPForwardingRule>of();
  Builder<AsyncCreateResponse> responses=ImmutableSet.<AsyncCreateResponse>builder();
  for (  int port : ports) {
    AsyncCreateResponse response=client.getNATClient().createIPForwardingRule(ip.getId(),protocol,port);
    logger.debug(">> creating IP forwarding rule IPAddress(%s) for protocol(%s), port(%s); response(%s)",ip.getId(),protocol,port,response);
    responses.add(response);
  }
  Builder<IPForwardingRule> rules=ImmutableSet.<IPForwardingRule>builder();
  for (  AsyncCreateResponse response : responses.build()) {
    IPForwardingRule rule=blockUntilJobCompletesAndReturnResult.<IPForwardingRule>apply(response);
    rules.add(rule);
    getIPForwardingRulesByVirtualMachine.asMap().put(ip.getVirtualMachineId(),ImmutableSet.of(rule));
  }
  return rules.build();
}
