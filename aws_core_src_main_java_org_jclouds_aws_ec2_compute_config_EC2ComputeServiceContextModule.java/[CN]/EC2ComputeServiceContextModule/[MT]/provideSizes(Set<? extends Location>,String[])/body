{
  Set<Size> sizes=newHashSet();
  for (  String ccAmi : ccAmis) {
    final String region=ccAmi.split("/")[0];
    Location location=find(locations,new Predicate<Location>(){
      @Override public boolean apply(      Location input){
        return input.getScope() == LocationScope.REGION && input.getId().equals(region);
      }
    }
);
    sizes.add(new EC2Size(location,InstanceType.CC1_4XLARGE,33.5,23 * 1024,1690,ccAmis));
  }
  sizes.addAll(ImmutableSet.<Size>of(EC2Size.C1_MEDIUM,EC2Size.C1_XLARGE,EC2Size.M1_LARGE,EC2Size.M1_SMALL,EC2Size.M1_XLARGE,EC2Size.M2_XLARGE,EC2Size.M2_2XLARGE,EC2Size.M2_4XLARGE));
  return sizes;
}
