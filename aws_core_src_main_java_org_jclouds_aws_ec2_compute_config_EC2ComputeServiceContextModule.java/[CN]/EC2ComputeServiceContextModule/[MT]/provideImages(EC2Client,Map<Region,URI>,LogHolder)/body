{
  final Set<Image> images=Sets.newHashSet();
  holder.logger.debug(">> providing images");
  for (  final Region region : regionMap.keySet()) {
    for (    final org.jclouds.aws.ec2.domain.Image from : sync.getAMIServices().describeImagesInRegion(region,ownedBy("063491364108"))) {
      OsFamily os=null;
      String osDescription=from.getImageLocation();
      String version="";
      Matcher matcher=ALESTIC_PATTERN.matcher(from.getImageLocation());
      if (matcher.find()) {
        try {
          os=OsFamily.fromValue(matcher.group(1));
          matcher.group(2);
          version=matcher.group(3);
        }
 catch (        IllegalArgumentException e) {
          holder.logger.debug("<< didn't match os(%s)",matcher.group(1));
        }
      }
      images.add(new EC2Image(from,os,osDescription,version));
    }
  }
  holder.logger.debug("<< images(%d)",images.size());
  return images;
}
