{
  Location ec2=new LocationImpl(LocationScope.PROVIDER,providerName,providerName,null);
  Set<Location> locations=Sets.newLinkedHashSet();
  for (  String region : Sets.newLinkedHashSet(availabilityZoneToRegionMap.values())) {
    locations.add(new LocationImpl(LocationScope.REGION,region,region,ec2));
  }
  ImmutableMap<String,Location> idToLocation=Maps.uniqueIndex(locations,new Function<Location,String>(){
    @Override public String apply(    Location from){
      return from.getId();
    }
  }
);
  for (  String zone : availabilityZoneToRegionMap.keySet()) {
    locations.add(new LocationImpl(LocationScope.ZONE,zone,zone,idToLocation.get(availabilityZoneToRegionMap.get(zone))));
  }
  return locations;
}
