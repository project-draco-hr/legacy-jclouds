{
  checkArgument(imageCatalogIdMap.containsKey(image),"image not configured: " + image);
  String templateId=imageCatalogIdMap.get(image);
  String vDCId=tmClient.getDefaultVDC().getId();
  logger.debug(">> instantiating vApp vDC(%s) name(%s) template(%s)  minCores(%d) minMegs(%d) diskSize(%d) properties(%s) ",vDCId,name,templateId,minCores,minMegs,diskSize,properties);
  VApp vAppResponse=tmClient.instantiateVAppTemplateInVDC(vDCId,name,templateId,InstantiateVAppTemplateOptions.Builder.processorCount(minCores).memory(minMegs).disk(diskSize).productProperties(properties));
  logger.debug("<< instantiated VApp(%s)",vAppResponse.getId());
  logger.debug(">> deploying vApp(%s)",vAppResponse.getId());
  VApp vApp=blockUntilVAppStatusOrThrowException(vAppResponse,tmClient.deployVApp(vAppResponse.getId()),"deploy",VAppStatus.ON);
  logger.debug("<< on vApp(%s)",vApp.getId());
  return ImmutableMap.<String,String>of("id",vApp.getId(),"username",null,"password",null);
}
