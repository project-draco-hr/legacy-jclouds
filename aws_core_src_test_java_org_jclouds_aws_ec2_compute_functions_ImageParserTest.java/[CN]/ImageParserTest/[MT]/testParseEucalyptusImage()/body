{
  InputStream is=getClass().getResourceAsStream("/ec2/eucalyptus_images.xml");
  Set<Image> result=parseImages(is);
  assertEquals(result.size(),4);
  ImageParser parser=new ImageParser(new EC2PopulateDefaultLoginCredentialsForImageStrategy(),Suppliers.<Set<? extends Location>>ofInstance(ImmutableSet.<Location>of(defaultLocation)),Suppliers.ofInstance(defaultLocation));
  org.jclouds.compute.domain.Image image=parser.apply(Iterables.get(result,0));
  assertEquals(image.getOperatingSystem().is64Bit(),true);
  assertEquals(image.getDescription(),"centos-5.3-x86_64/centos.5-3.x86-64.img.manifest.xml");
  assertEquals(image.getId(),"us-east-1/emi-9ACB1363");
  assertEquals(image.getProviderId(),"emi-9ACB1363");
  assertEquals(image.getLocation(),defaultLocation);
  assertEquals(image.getName(),null);
  assertEquals(image.getOperatingSystem().getName(),null);
  assertEquals(image.getOperatingSystem().getVersion(),"5.3");
  assertEquals(image.getOperatingSystem().getArch(),"paravirtual");
  assertEquals(image.getOperatingSystem().getDescription(),"centos-5.3-x86_64/centos.5-3.x86-64.img.manifest.xml");
  assertEquals(image.getOperatingSystem().getFamily(),OsFamily.CENTOS);
  assertEquals(image.getUserMetadata(),ImmutableMap.<String,String>of("owner","admin","rootDeviceType","instance-store"));
  assertEquals(image.getVersion(),null);
  image=parser.apply(Iterables.get(result,3));
  assertEquals(image,null);
}
