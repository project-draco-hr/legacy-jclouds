{
  final String publicReadObjectKey="public-read-acl";
  final String containerName=getContainerName();
  try {
    S3Object object=context.getApi().newS3Object();
    object.getMetadata().setKey(publicReadObjectKey);
    object.setData("");
    context.getApi().putObject(containerName,object,new PutObjectOptions().withAcl(CannedAccessPolicy.PUBLIC_READ)).get(10,TimeUnit.SECONDS);
    assertConsistencyAware(new Runnable(){
      public void run(){
        try {
          AccessControlList acl=context.getApi().getObjectACL(containerName,publicReadObjectKey).get(10,TimeUnit.SECONDS);
          assertEquals(acl.getGrants().size(),2);
          assertEquals(acl.getPermissions(GroupGranteeURI.ALL_USERS).size(),1);
          assertTrue(acl.getOwner() != null);
          String ownerId=acl.getOwner().getId();
          assertTrue(acl.hasPermission(ownerId,Permission.FULL_CONTROL));
          assertTrue(acl.hasPermission(GroupGranteeURI.ALL_USERS,Permission.READ));
        }
 catch (        Exception e) {
          Utils.<RuntimeException>rethrowIfRuntimeOrSameType(e);
        }
      }
    }
);
  }
  finally {
    returnContainer(containerName);
  }
}
