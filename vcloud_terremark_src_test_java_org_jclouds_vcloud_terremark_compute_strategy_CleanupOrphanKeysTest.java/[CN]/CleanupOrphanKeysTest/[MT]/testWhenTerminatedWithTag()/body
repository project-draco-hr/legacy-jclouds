{
  CleanupOrphanKeys strategy=setupStrategy();
  NodeMetadata nodeMetadata=createMock(NodeMetadata.class);
  Iterable<? extends NodeMetadata> deadOnes=ImmutableSet.<NodeMetadata>of(nodeMetadata);
  OrgAndName orgTag=new OrgAndName(URI.create("location"),"tag");
  expect(strategy.nodeToOrgAndName.apply(nodeMetadata)).andReturn(orgTag).atLeastOnce();
  expect((Object)strategy.listNodes.listDetailsOnNodesMatching(parentLocationId(orgTag.getOrg().toASCIIString()))).andReturn(ImmutableSet.of(nodeMetadata));
  expect(nodeMetadata.getTag()).andReturn(orgTag.getName()).atLeastOnce();
  expect(nodeMetadata.getState()).andReturn(NodeState.TERMINATED).atLeastOnce();
  strategy.deleteKeyPair.execute(orgTag);
  expectCleanupCredentialStore(strategy,nodeMetadata);
  replay(nodeMetadata);
  replayStrategy(strategy);
  strategy.execute(deadOnes);
  verify(nodeMetadata);
  verifyStrategy(strategy);
}
