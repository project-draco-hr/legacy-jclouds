{
  machineUtils.sharedLockMachineAndApplyToSession(vmName,new Function<ISession,Void>(){
    @Override public Void apply(    ISession session){
      checkState(new RetryableNumTimesPredicate<AdditionsRunLevelType>(new AdditionsStatusPredicate(session),5,2L,TimeUnit.SECONDS).apply(AdditionsRunLevelType.Userland),"timed out waiting for additionsRunLevelType to be %s",AdditionsRunLevelType.Userland);
      checkState(new RetryableNumTimesPredicate<Integer>(new FacilitiesPredicate(session),5,3L,TimeUnit.SECONDS).apply(4),"timed out waiting for 4 running facilities");
      Optional<IAdditionsFacility> vboxServiceFacility=Optional.absent();
      while (!vboxServiceFacility.isPresent()) {
        List<IAdditionsFacility> facilities=session.getConsole().getGuest().getFacilities();
        vboxServiceFacility=Iterables.tryFind(facilities,new Predicate<IAdditionsFacility>(){
          @Override public boolean apply(          IAdditionsFacility additionsFacility){
            return additionsFacility.getType().equals(AdditionsFacilityType.VBoxService) && additionsFacility.getStatus().equals(AdditionsFacilityStatus.Active);
          }
        }
);
      }
      logger.debug("<< virtualbox service ready on vm(%s)",vmName);
      return null;
    }
  }
);
}
