{
  try {
    List<S3Object> jsObjects=new ArrayList<S3Object>();
    List<String> commonPrefixes=new ArrayList<String>();
    ListBucketResponse jcBucket=null;
    do {
      ListBucketOptions options=Util.convertListObjectOptions(prefix,priorLastKey,delimiter,maxListingLength);
      jcBucket=connection.listBlobs(bucketName,options).get(requestTimeoutMilliseconds,TimeUnit.MILLISECONDS);
      jsObjects.addAll(Arrays.asList(Util.convertObjectHeads(jcBucket)));
      commonPrefixes.addAll(jcBucket.getCommonPrefixes());
      if (jcBucket.isTruncated()) {
        priorLastKey=jsObjects.get(jsObjects.size() - 1).getKey();
      }
 else {
        priorLastKey=null;
      }
    }
 while (completeListing && jcBucket.isTruncated());
    return new S3ObjectsChunk(prefix,jcBucket.getDelimiter(),(S3Object[])jsObjects.toArray(new S3Object[jsObjects.size()]),(String[])commonPrefixes.toArray(new String[commonPrefixes.size()]),priorLastKey);
  }
 catch (  Exception e) {
    Utils.<S3ServiceException>rethrowIfRuntimeOrSameType(e);
    throw new S3ServiceException("error listing objects in bucket " + bucketName,e);
  }
}
