{
  for (  String zone : api.getConfiguredZones()) {
    Logger.getAnonymousLogger().info("starting lb in region " + zone);
    LoadBalancer lb=api.getLoadBalancerApiForZone(zone).create(CreateLoadBalancer.builder().name(prefix + "-" + zone).protocol("HTTP").port(80).virtualIPType(Type.PUBLIC).node(AddNode.builder().address("192.168.1.1").port(8080).build()).build());
    checkLBInRegion(zone,lb,prefix + "-" + zone);
    assertEquals(lb.getStatus(),LoadBalancer.Status.BUILD);
    lbs.add(lb);
    assertTrue(awaitAvailable(api.getLoadBalancerApiForZone(lb.getRegion())).apply(lb));
    LoadBalancer newLb=api.getLoadBalancerApiForZone(zone).get(lb.getId());
    checkLBInRegion(zone,newLb,prefix + "-" + zone);
    assertEquals(newLb.getStatus(),LoadBalancer.Status.ACTIVE);
  }
}
