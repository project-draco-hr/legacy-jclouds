{
  return new TypeAdapter<Iterable<E>>(){
    public void write(    JsonWriter out,    Iterable<E> value) throws IOException {
      out.beginArray();
      for (      E element : value) {
        elementAdapter.write(out,element);
      }
      out.endArray();
    }
    @SuppressWarnings("unchecked") public Iterable<E> read(    JsonReader in) throws IOException {
      if (in.peek() == JsonToken.STRING) {
        String val=Strings.emptyToNull(in.nextString());
        return (Iterable<E>)(val != null ? Splitter.on(',').split(val) : ImmutableSet.of());
      }
 else {
        Builder<E> builder=ImmutableList.<E>builder();
        in.beginArray();
        while (in.hasNext()) {
          E element=elementAdapter.read(in);
          if (element != null)           builder.add(element);
        }
        in.endArray();
        return builder.build();
      }
    }
  }
.nullSafe();
}
