{
  try {
    client.destroyNode(Iterables.find(client.listNodes(),new Predicate<ComputeMetadata>(){
      @Override public boolean apply(      ComputeMetadata input){
        return input.getName().equals(nodeName);
      }
    }
));
  }
 catch (  HttpResponseException e) {
  }
catch (  NoSuchElementException e) {
  }
  template=buildTemplate(client.templateBuilder());
  if (canRunScript(template))   options.runScript(new ScriptBuilder().addStatement(Statements.exec("echo nameserver 208.67.222.222 >> /etc/resolv.conf")).addStatement(Statements.exec("apt-get update")).addStatement(Statements.exec("apt-get upgrade -y")).addStatement(Statements.exec("apt-get install -y openjdk-6-jdk")).addStatement(Statements.exec("wget -qO/usr/bin/runurl run.alestic.com/runurl")).addStatement(Statements.exec("chmod 755 /usr/bin/runurl")).build(OsFamily.UNIX).getBytes());
  node=client.runNode(nodeName,template,options);
  assertNotNull(node.getId());
  assertEquals(node.getLoginPort(),22);
  assertEquals(node.getLoginType(),LoginType.SSH);
  assertNotNull(node.getName());
  assertEquals(node.getPublicAddresses().size(),1);
  assertNotNull(node.getCredentials());
  assertNotNull(node.getCredentials().account);
  assertNotNull(node.getCredentials().key);
  sshPing();
}
