{
  Metadata before=context.getApi().getMetadataApi(catalogItem.getId()).get();
  Task mergeCatalogItemMetadata=context.getApi().getMetadataApi(catalogItem.getId()).putAll(ImmutableMap.of("KEY","MARMALADE","VEGIMITE","VALUE"));
  checkTask(mergeCatalogItemMetadata);
  assertTrue(retryTaskSuccess.apply(mergeCatalogItemMetadata),String.format(TASK_COMPLETE_TIMELY,"mergeCatalogItemMetadata"));
  Metadata mergedCatalogItemMetadata=context.getApi().getMetadataApi(catalogItem.getId()).get();
  assertTrue(mergedCatalogItemMetadata.getMetadataEntries().size() > before.getMetadataEntries().size(),"Should have added at least one other MetadataEntry to the CatalogItem");
  String keyMetadataValue=context.getApi().getMetadataApi(catalogItem.getId()).get("KEY");
  assertEquals(keyMetadataValue,"MARMALADE","The Value of the MetadataValue for KEY should have changed");
  String newKeyMetadataValue=context.getApi().getMetadataApi(catalogItem.getId()).get("VEGIMITE");
  assertEquals(newKeyMetadataValue,"VALUE","The Value of the MetadataValue for NEW_KEY should have been set");
}
