{
  return Predicates.not(new Predicate<OsFamilyVersion64Bit>(){
    @Override public boolean apply(    OsFamilyVersion64Bit input){
switch (input.family) {
case UBUNTU:
        return true;
case DEBIAN:
      return true;
case RHEL:
    return input.version.matches("5.[6]") || input.version.equals("");
case CENTOS:
  return input.version.matches("5.[246]") || (input.version.equals("5.0") && !input.is64Bit) || input.version.equals("");
case WINDOWS:
return input.version.matches("200[38]") || (input.version.equals("7") && !input.is64Bit) || input.version.equals("");
default :
return false;
}
}
}
);
}
