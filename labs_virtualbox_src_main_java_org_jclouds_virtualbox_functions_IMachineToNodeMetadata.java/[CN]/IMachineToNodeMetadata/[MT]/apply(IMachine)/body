{
  String group="";
  String name="";
  String[] encodedInVmName=vm.getName().split(VIRTUALBOX_NODE_NAME_SEPARATOR);
  if (vm.getName().startsWith(VIRTUALBOX_NODE_PREFIX)) {
    group=encodedInVmName[2];
    name=encodedInVmName[3];
  }
 else {
    name=encodedInVmName[1];
  }
  NodeMetadataBuilder nodeMetadataBuilder=new NodeMetadataBuilder();
  nodeMetadataBuilder.name(name).ids(vm.getName()).group(group);
  LocationBuilder locationBuilder=new LocationBuilder();
  locationBuilder.description("");
  locationBuilder.id("");
  locationBuilder.scope(LocationScope.HOST);
  nodeMetadataBuilder.location(locationBuilder.build());
  nodeMetadataBuilder.hostname(vm.getName());
  MachineState vmState=vm.getState();
  NodeMetadata.Status nodeState=toPortableNodeStatus.get(vmState);
  if (nodeState == null)   nodeState=Status.UNRECOGNIZED;
  nodeMetadataBuilder.status(nodeState);
  nodeMetadataBuilder=getIpAddresses(vm,nodeMetadataBuilder);
  IGuestOSType guestOSType=virtualboxManager.get().getVBox().getGuestOSType(vm.getOSTypeId());
  OsFamily family=parseOsFamilyOrUnrecognized(guestOSType.getDescription());
  String version=parseVersionOrReturnEmptyString(family,guestOSType.getDescription(),osVersionMap);
  OperatingSystem os=OperatingSystem.builder().description(guestOSType.getDescription()).family(family).version(version).is64Bit(guestOSType.getIs64Bit()).build();
  nodeMetadataBuilder.operatingSystem(os);
  String guestOsUser=vm.getExtraData(GUEST_OS_USER);
  String guestOsPassword=vm.getExtraData(GUEST_OS_PASSWORD);
  LoginCredentials loginCredentials=new LoginCredentials(guestOsUser,guestOsPassword,null,true);
  nodeMetadataBuilder.credentials(loginCredentials);
  return nodeMetadataBuilder.build();
}
