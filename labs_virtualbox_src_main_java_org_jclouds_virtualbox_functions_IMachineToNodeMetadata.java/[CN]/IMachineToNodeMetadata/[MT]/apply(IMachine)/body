{
  NodeMetadataBuilder nodeMetadataBuilder=new NodeMetadataBuilder();
  nodeMetadataBuilder.name(vm.getName()).ids(vm.getName());
  LocationBuilder locationBuilder=new LocationBuilder();
  locationBuilder.description("");
  locationBuilder.id("");
  locationBuilder.scope(LocationScope.HOST);
  nodeMetadataBuilder.location(locationBuilder.build());
  nodeMetadataBuilder.hostname(vm.getName());
  MachineState vmState=vm.getState();
  NodeState nodeState=machineToNodeState.get(vmState);
  if (nodeState == null)   nodeState=NodeState.UNRECOGNIZED;
  nodeMetadataBuilder.state(nodeState);
  logger.debug("Setting virtualbox node to: " + nodeState + " from machine state: "+ vmState);
  INetworkAdapter natAdapter=vm.getNetworkAdapter(0l);
  checkNotNull(natAdapter,"slot 0 networkadapter");
  checkState(natAdapter.getAttachmentType() == NetworkAttachmentType.NAT,"expecting slot 0 to be a NAT attachment type (was: " + natAdapter.getAttachmentType() + ")");
  int ipTermination=0;
  nodeMetadataBuilder.publicAddresses(ImmutableSet.of(natAdapter.getNatDriver().getHostIP()));
  for (  String nameProtocolnumberAddressInboudportGuestTargetport : natAdapter.getNatDriver().getRedirects()) {
    Iterable<String> stuff=Splitter.on(',').split(nameProtocolnumberAddressInboudportGuestTargetport);
    String protocolNumber=Iterables.get(stuff,1);
    String hostAddress=Iterables.get(stuff,2);
    String inboundPort=Iterables.get(stuff,3);
    String targetPort=Iterables.get(stuff,5);
    if ("1".equals(protocolNumber) && "22".equals(targetPort)) {
      int inPort=Integer.parseInt(inboundPort);
      ipTermination=inPort % NodeCreator.NODE_PORT_INIT;
      nodeMetadataBuilder.publicAddresses(ImmutableSet.of(hostAddress)).loginPort(inPort);
    }
  }
  nodeMetadataBuilder.privateAddresses(ImmutableSet.of((NodeCreator.VMS_NETWORK + ipTermination) + ""));
  LoginCredentials loginCredentials=new LoginCredentials("toor","password",null,true);
  nodeMetadataBuilder.credentials(loginCredentials);
  return nodeMetadataBuilder.build();
}
