{
  OpenSocketFinder finder=new ConcurrentOpenSocketFinder(socketAlwaysClosed,nodeNotRunning,threadPool){
    @Override protected <T>Predicate<T> retryPredicate(    final Predicate<T> findOrBreak,    long period,    long timeoutValue,    TimeUnit timeUnits){
      return new Predicate<T>(){
        @Override public boolean apply(        T input){
          try {
            findOrBreak.apply(input);
            fail("should have thrown IllegalStateException");
          }
 catch (          IllegalStateException e) {
          }
          return false;
        }
      }
;
    }
  }
;
  try {
    finder.findOpenSocketOnNode(node,22,2000,MILLISECONDS);
    fail();
  }
 catch (  NoSuchElementException e) {
  }
}
