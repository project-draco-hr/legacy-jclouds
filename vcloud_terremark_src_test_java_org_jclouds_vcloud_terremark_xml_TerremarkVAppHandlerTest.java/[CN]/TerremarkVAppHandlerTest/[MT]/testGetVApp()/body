{
  InputStream is=getClass().getResourceAsStream("/terremark/get_vapp.xml");
  TerremarkVApp result=(TerremarkVApp)factory.create(injector.getInstance(TerremarkVAppHandler.class)).parse(is);
  assertEquals(result.getId(),13850 + "");
  assertEquals(result.getName(),"adriantest1");
  assertEquals(result.getStatus(),VAppStatus.OFF);
  assertEquals(result.getSize().longValue(),4194304l);
  assertEquals(result.getOperatingSystemDescription(),"Ubuntu Linux (32-bit)");
  assertEquals(result.getLocation(),URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vapp/13850"));
  assertEquals(result.getVDC(),new NamedResourceImpl("32",null,VCloudMediaType.VDC_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vdc/32")));
  assertEquals(result.getComputeOptions(),new NamedResourceImpl("compute","Compute Options",MediaType.APPLICATION_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vapp/13850/options/compute")));
  assertEquals(result.getCustomizationOptions(),new NamedResourceImpl("customization","Customization Options",MediaType.APPLICATION_XML,URI.create("https://services.vcloudexpress.terremark.com/api/v0.8/vapp/13850/options/customization")));
  assertEquals(result.getSystem(),new TerremarkVirtualSystem(null,null,null,null,null,null,null,null,null,null,null,"Virtual Hardware Family",0,null,null,null,null,null,"adriantest1","vmx-07"));
  assertEquals(result.getNetworkToAddresses().get("Internal"),ImmutableList.of(InetAddress.getByName("10.114.34.132")));
  ResourceAllocation cpu=new ResourceAllocation(1,"1 virtual CPU(s)","Number of Virtual CPUs",ResourceType.PROCESSOR,null,null,null,null,null,null,1,"hertz * 10^6");
  ResourceAllocation controller=new ResourceAllocation(3,"SCSI Controller 0","SCSI Controller",ResourceType.SCSI_CONTROLLER,"lsilogic",null,0,null,null,null,1,null);
  ResourceAllocation memory=new ResourceAllocation(2,"512MB of memory","Memory Size",ResourceType.MEMORY,null,null,null,null,null,null,512,"byte * 2^20");
  ResourceAllocation disk=new ResourceAllocation(9,"Hard Disk 1",null,ResourceType.DISK_DRIVE,null,"4194304",null,0,3,null,4194304,null);
  assertEquals(result.getResourceAllocations(),ImmutableSortedSet.of(cpu,controller,memory,disk));
  assertEquals(Iterables.getOnlyElement(result.getResourceAllocationByType().get(ResourceType.PROCESSOR)).getVirtualQuantity(),1);
  assertEquals(Iterables.getOnlyElement(result.getResourceAllocationByType().get(ResourceType.SCSI_CONTROLLER)).getVirtualQuantity(),1);
  assertEquals(Iterables.getOnlyElement(result.getResourceAllocationByType().get(ResourceType.MEMORY)).getVirtualQuantity(),512);
  assertEquals(Iterables.getOnlyElement(result.getResourceAllocationByType().get(ResourceType.DISK_DRIVE)).getVirtualQuantity(),4194304);
  assertEquals(result.getSize().longValue(),Iterables.getOnlyElement(result.getResourceAllocationByType().get(ResourceType.DISK_DRIVE)).getVirtualQuantity());
}
