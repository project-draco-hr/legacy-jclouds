{
  ComputeService service=context.getComputeService();
  Template t=service.templateBuilder().minRam(1024).imageId("1532").build();
  assertEquals(t.getImage().getId(),"1532");
  service.runNodesWithTag(this.service,3,t);
  Map<String,? extends ComputeMetadata> nodes=service.getNodes();
  ComputeMetadata node=Iterables.find(nodes.values(),new Predicate<ComputeMetadata>(){
    @Override public boolean apply(    ComputeMetadata computeMetadata){
      return computeMetadata.getName().startsWith(GoGridComputeServiceLiveTest.this.service);
    }
  }
);
  NodeMetadata nodeMetadata=service.getNodeMetadata(node);
  assertEquals(nodeMetadata.getPublicAddresses().size(),1,"There must be 1 public address for the node");
  assertTrue(nodeMetadata.getName().startsWith(this.service));
  service.rebootNode(nodeMetadata);
  assertEquals(service.getNodeMetadata(nodeMetadata).getState(),NodeState.RUNNING);
  client.runScriptOnNodesWithTag("gogrid",null,"mkdir ~/ahha; sleep 3".getBytes(),new RunScriptOptions.Builder().overrideCredentials(false).build());
  service.destroyNodesWithTag("gogrid");
}
