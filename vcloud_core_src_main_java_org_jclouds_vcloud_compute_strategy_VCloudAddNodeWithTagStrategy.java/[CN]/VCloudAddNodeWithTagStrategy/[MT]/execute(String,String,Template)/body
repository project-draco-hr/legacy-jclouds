{
  InstantiateVAppTemplateOptions options=processorCount(Double.valueOf(template.getSize().getCores()).intValue()).memory(template.getSize().getRam()).disk(template.getSize().getDisk() * 1024 * 1024l);
  if (!template.getOptions().shouldBlockUntilRunning())   options.block(false);
  URI VDC=URI.create(template.getLocation().getId());
  URI templateId=URI.create(template.getImage().getId());
  logger.debug(">> instantiating vApp vDC(%s) template(%s) name(%s) options(%s) ",VDC,templateId,name,options);
  VApp vAppResponse=client.instantiateVAppTemplateInVDC(VDC,templateId,name,options);
  logger.debug("<< instantiated VApp(%s)",vAppResponse.getName());
  Task task=vAppResponse.getTasks().get(0);
  if (options.shouldBlock()) {
    if (!successTester.apply(task.getHref())) {
      throw new RuntimeException(String.format("failed to %s %s: %s","deploy and power on",vAppResponse.getName(),task));
    }
    logger.debug("<< ready vApp(%s)",vAppResponse.getName());
  }
  return getNode.execute(vAppResponse.getHref().toASCIIString());
}
