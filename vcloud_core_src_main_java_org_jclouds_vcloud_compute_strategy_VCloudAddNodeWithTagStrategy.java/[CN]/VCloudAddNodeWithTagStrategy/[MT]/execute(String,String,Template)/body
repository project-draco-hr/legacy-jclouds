{
  InstantiateVAppTemplateOptions options=processorCount(Double.valueOf(template.getSize().getCores()).intValue()).memory(template.getSize().getRam()).disk(template.getSize().getDisk() * 1024 * 1024l);
  String customizationScript=null;
  if (template.getOptions() instanceof VCloudTemplateOptions) {
    customizationScript=VCloudTemplateOptions.class.cast(template.getOptions()).getCustomizationScript();
    if (customizationScript != null) {
      options.customizeOnInstantiate(false);
      options.deploy(false);
      options.powerOn(false);
    }
  }
  if (!template.getOptions().shouldBlockUntilRunning())   options.block(false);
  URI VDC=URI.create(template.getLocation().getId());
  URI templateId=URI.create(template.getImage().getId());
  logger.debug(">> instantiating vApp vDC(%s) template(%s) name(%s) options(%s) ",VDC,templateId,name,options);
  VApp vAppResponse=client.instantiateVAppTemplateInVDC(VDC,templateId,name,options);
  logger.debug("<< instantiated VApp(%s)",vAppResponse.getName());
  Task task=vAppResponse.getTasks().get(0);
  if (customizationScript == null) {
    return blockOnDeployAndPowerOnIfConfigured(options,vAppResponse,task);
  }
 else {
    if (!successTester.apply(task.getHref())) {
      throw new RuntimeException(String.format("failed to %s %s: %s","instantiate",vAppResponse.getName(),task));
    }
    Vm vm=Iterables.get(client.getVApp(vAppResponse.getHref()).getChildren(),0);
    GuestCustomizationSection guestConfiguration=vm.getGuestCustomizationSection();
    guestConfiguration.setCustomizationScript(customizationScript);
    task=client.updateGuestCustomizationOfVm(vm.getHref(),guestConfiguration);
    if (!successTester.apply(task.getHref())) {
      throw new RuntimeException(String.format("failed to %s %s: %s","updateGuestCustomizationOfVm",vm.getName(),task));
    }
    task=client.deployAndPowerOnVAppOrVm(vAppResponse.getHref());
    return blockOnDeployAndPowerOnIfConfigured(options,vAppResponse,task);
  }
}
