{
  InputStream is=getClass().getResourceAsStream("/queryasyncjobresultresponse-ipaddress.json");
  AsyncJob<PublicIPAddress> expects=AsyncJob.<PublicIPAddress>builder().id(860).status(1).progress(0).resultType("object").resultCode(0).result(PublicIPAddress.builder().id(6).IPAddress("72.52.126.35").allocated(new SimpleDateFormatDateService().iso8601SecondsDateParse("2011-02-23T20:15:01-0800")).zoneId(1).zoneName("San Jose 1").isSourceNAT(false).account("adrian").domainId(1).domain("ROOT").usesVirtualNetwork(true).isStaticNAT(false).associatedNetworkId(204).networkId(200).state(PublicIPAddress.State.ALLOCATING).build()).build();
  ParseAsyncJob parser=i.getInstance(ParseAsyncJob.class);
  @SuppressWarnings("unchecked") AsyncJob<PublicIPAddress> response=(AsyncJob<PublicIPAddress>)parser.apply(new HttpResponse(200,"ok",Payloads.newInputStreamPayload(is)));
  assertEquals(response,expects);
}
