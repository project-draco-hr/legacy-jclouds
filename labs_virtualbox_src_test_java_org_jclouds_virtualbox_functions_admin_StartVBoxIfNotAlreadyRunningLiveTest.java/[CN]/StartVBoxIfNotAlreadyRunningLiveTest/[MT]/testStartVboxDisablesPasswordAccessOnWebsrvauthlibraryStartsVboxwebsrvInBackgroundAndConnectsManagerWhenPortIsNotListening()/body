{
  VirtualBoxManager manager=createMock(VirtualBoxManager.class);
  Factory runScriptOnNodeFactory=createMock(Factory.class);
  RetryIfSocketNotYetOpen client=createMock(RetryIfSocketNotYetOpen.class);
  RunScriptOnNode runScriptOnNode=createMock(RunScriptOnNode.class);
  NodeMetadata host=new NodeMetadataBuilder().id("host").status(Status.RUNNING).operatingSystem(OperatingSystem.builder().description("unix").build()).build();
  URI provider=URI.create("http://localhost:18083/");
  expect(client.seconds(3)).andReturn(client);
  expect(client.apply(HostAndPort.fromParts(provider.getHost(),provider.getPort()))).andReturn(false).once().andReturn(true).once();
  expect(runScriptOnNodeFactory.create(host,Statements.exec("VBoxManage setproperty websrvauthlibrary null"),runAsRoot(false).wrapInInitScript(false))).andReturn(runScriptOnNode);
  expect(runScriptOnNode.init()).andReturn(runScriptOnNode);
  expect(runScriptOnNode.call()).andReturn(new ExecResponse("","",0));
  expect(runScriptOnNodeFactory.create(host,Statements.exec("vboxwebsrv -t 10000 -v -b -H localhost"),runAsRoot(false).wrapInInitScript(false).blockOnComplete(false).nameTask("vboxwebsrv"))).andReturn(runScriptOnNode);
  expect(runScriptOnNode.init()).andReturn(runScriptOnNode);
  expect(runScriptOnNode.call()).andReturn(new ExecResponse("","",0));
  manager.connect(provider.toASCIIString(),"","");
  expectLastCall().anyTimes();
  replay(manager,runScriptOnNodeFactory,runScriptOnNode,client);
  new StartVBoxIfNotAlreadyRunning((Function)Functions.constant(manager),runScriptOnNodeFactory,client,Suppliers.ofInstance(host),Suppliers.ofInstance(provider),null);
  verify(manager,runScriptOnNodeFactory,runScriptOnNode,client);
}
