{
  checkNotNull(datacenters,"datacenters must be defined");
  final List<Integer> ids=Lists.newArrayList(transform(Arrays.asList(datacenters),new Function<Datacenter,Integer>(){
    @Override public Integer apply(    final Datacenter input){
      return input.getId();
    }
  }
));
  return new Predicate<VirtualDatacenter>(){
    @Override public boolean apply(    final VirtualDatacenter virtualDatacenter){
      Integer datacenterId=checkNotNull(virtualDatacenter.unwrap().getIdFromLink(ParentLinkName.DATACENTER),ValidationErrors.MISSING_REQUIRED_LINK);
      return ids.contains(datacenterId);
    }
  }
;
}
