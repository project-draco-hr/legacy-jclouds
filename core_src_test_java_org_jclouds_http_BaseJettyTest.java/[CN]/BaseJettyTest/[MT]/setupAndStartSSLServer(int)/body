{
  Handler server2Handler=new AbstractHandler(){
    public void handle(    String target,    Request baseRequest,    HttpServletRequest request,    HttpServletResponse response) throws IOException, ServletException {
      if (request.getMethod().equals("PUT")) {
        if (request.getContentLength() > 0) {
          response.setStatus(SC_OK);
          String text=toStringAndClose(request.getInputStream());
          response.getWriter().println(text + "PUTREDIRECT");
        }
      }
 else       if (request.getMethod().equals("POST")) {
        if (request.getContentLength() > 0) {
          handlePost(request,response);
        }
 else {
          handleAction(request,response);
        }
      }
 else       if (request.getMethod().equals("HEAD")) {
        response.setContentType("text/xml");
        response.setStatus(SC_OK);
      }
 else {
        response.setContentType("text/xml");
        response.setStatus(SC_OK);
        response.getWriter().println(XML2);
      }
      Request.class.cast(request).setHandled(true);
    }
  }
;
  server2=new Server();
  server2.setHandler(server2Handler);
  SslSelectChannelConnector ssl_connector=new SslSelectChannelConnector();
  ssl_connector.setPort(testPort + 1);
  ssl_connector.setMaxIdleTime(30000);
  SslContextFactory ssl=ssl_connector.getSslContextFactory();
  ssl.setKeyStorePath("src/test/resources/test.jks");
  ssl.setKeyStorePassword("jclouds");
  ssl.setTrustStore("src/test/resources/test.jks");
  ssl.setTrustStorePassword("jclouds");
  server2.setConnectors(new Connector[]{ssl_connector});
  server2.start();
}
